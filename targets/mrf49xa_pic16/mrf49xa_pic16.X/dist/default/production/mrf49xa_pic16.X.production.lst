

Microchip Technology PIC PRO Macro Assembler V1.30 build 55553 
                                                                                               Wed Apr 16 15:41:42 2014

Microchip Technology Omniscient Code Generator (PRO mode) build 55553
     1                           	processor	16LF1508
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	swtext1,local,class=CONST,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	swtext2,local,class=CONST,delta=2
    14                           	psect	text19,local,class=CODE,merge=1,delta=2
    15                           	psect	pa_nodes,global,class=CODE,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     	;# 
    18  0001                     	;# 
    19  0002                     	;# 
    20  0003                     	;# 
    21  0004                     	;# 
    22  0005                     	;# 
    23  0006                     	;# 
    24  0007                     	;# 
    25  0008                     	;# 
    26  0009                     	;# 
    27  000A                     	;# 
    28  000B                     	;# 
    29  000C                     	;# 
    30  000D                     	;# 
    31  000E                     	;# 
    32  0011                     	;# 
    33  0012                     	;# 
    34  0013                     	;# 
    35  0015                     	;# 
    36  0016                     	;# 
    37  0016                     	;# 
    38  0017                     	;# 
    39  0018                     	;# 
    40  0019                     	;# 
    41  001A                     	;# 
    42  001B                     	;# 
    43  001C                     	;# 
    44  008C                     	;# 
    45  008D                     	;# 
    46  008E                     	;# 
    47  0091                     	;# 
    48  0092                     	;# 
    49  0093                     	;# 
    50  0095                     	;# 
    51  0096                     	;# 
    52  0097                     	;# 
    53  0099                     	;# 
    54  009A                     	;# 
    55  009B                     	;# 
    56  009B                     	;# 
    57  009C                     	;# 
    58  009D                     	;# 
    59  009E                     	;# 
    60  009F                     	;# 
    61  010C                     	;# 
    62  010D                     	;# 
    63  010E                     	;# 
    64  0111                     	;# 
    65  0112                     	;# 
    66  0113                     	;# 
    67  0114                     	;# 
    68  0115                     	;# 
    69  0116                     	;# 
    70  0117                     	;# 
    71  0118                     	;# 
    72  0119                     	;# 
    73  011D                     	;# 
    74  018C                     	;# 
    75  018D                     	;# 
    76  018E                     	;# 
    77  0191                     	;# 
    78  0191                     	;# 
    79  0192                     	;# 
    80  0193                     	;# 
    81  0193                     	;# 
    82  0194                     	;# 
    83  0195                     	;# 
    84  0196                     	;# 
    85  0199                     	;# 
    86  019A                     	;# 
    87  019B                     	;# 
    88  019B                     	;# 
    89  019C                     	;# 
    90  019D                     	;# 
    91  019E                     	;# 
    92  019F                     	;# 
    93  020C                     	;# 
    94  020D                     	;# 
    95  0211                     	;# 
    96  0211                     	;# 
    97  0212                     	;# 
    98  0212                     	;# 
    99  0213                     	;# 
   100  0213                     	;# 
   101  0214                     	;# 
   102  0214                     	;# 
   103  0215                     	;# 
   104  0215                     	;# 
   105  0215                     	;# 
   106  0216                     	;# 
   107  0216                     	;# 
   108  0217                     	;# 
   109  0217                     	;# 
   110  0391                     	;# 
   111  0392                     	;# 
   112  0393                     	;# 
   113  0394                     	;# 
   114  0395                     	;# 
   115  0396                     	;# 
   116  0498                     	;# 
   117  0498                     	;# 
   118  0499                     	;# 
   119  049A                     	;# 
   120  049B                     	;# 
   121  049B                     	;# 
   122  049C                     	;# 
   123  049E                     	;# 
   124  049F                     	;# 
   125  0611                     	;# 
   126  0612                     	;# 
   127  0613                     	;# 
   128  0613                     	;# 
   129  0614                     	;# 
   130  0615                     	;# 
   131  0616                     	;# 
   132  0616                     	;# 
   133  0617                     	;# 
   134  0618                     	;# 
   135  0619                     	;# 
   136  0619                     	;# 
   137  061A                     	;# 
   138  061B                     	;# 
   139  061C                     	;# 
   140  061C                     	;# 
   141  0691                     	;# 
   142  0692                     	;# 
   143  0693                     	;# 
   144  0694                     	;# 
   145  0695                     	;# 
   146  0F0F                     	;# 
   147  0F10                     	;# 
   148  0F11                     	;# 
   149  0F12                     	;# 
   150  0F13                     	;# 
   151  0F14                     	;# 
   152  0F15                     	;# 
   153  0F16                     	;# 
   154  0F17                     	;# 
   155  0F18                     	;# 
   156  0F19                     	;# 
   157  0F1A                     	;# 
   158  0F1B                     	;# 
   159  0F1C                     	;# 
   160  0F1D                     	;# 
   161  0F1E                     	;# 
   162  0F1F                     	;# 
   163  0F20                     	;# 
   164  0F21                     	;# 
   165  0F22                     	;# 
   166  0F23                     	;# 
   167  0F24                     	;# 
   168  0F25                     	;# 
   169  0F26                     	;# 
   170  0F27                     	;# 
   171  0F28                     	;# 
   172  0F29                     	;# 
   173  0F2A                     	;# 
   174  0F2B                     	;# 
   175  0F2C                     	;# 
   176  0F2D                     	;# 
   177  0F2E                     	;# 
   178  0F2F                     	;# 
   179  0F8C                     	;# 
   180  0F8D                     	;# 
   181  0F91                     	;# 
   182  0F95                     	;# 
   183  0F96                     	;# 
   184  0F97                     	;# 
   185  0F9C                     	;# 
   186  0F9D                     	;# 
   187  0F9E                     	;# 
   188  0FE3                     	;# 
   189  0FE4                     	;# 
   190  0FE5                     	;# 
   191  0FE6                     	;# 
   192  0FE7                     	;# 
   193  0FE8                     	;# 
   194  0FE9                     	;# 
   195  0FEA                     	;# 
   196  0FEB                     	;# 
   197  0FED                     	;# 
   198  0FEE                     	;# 
   199  0FEF                     	;# 
   200  0000                     	;# 
   201  0001                     	;# 
   202  0002                     	;# 
   203  0003                     	;# 
   204  0004                     	;# 
   205  0005                     	;# 
   206  0006                     	;# 
   207  0007                     	;# 
   208  0008                     	;# 
   209  0009                     	;# 
   210  000A                     	;# 
   211  000B                     	;# 
   212  000C                     	;# 
   213  000D                     	;# 
   214  000E                     	;# 
   215  0011                     	;# 
   216  0012                     	;# 
   217  0013                     	;# 
   218  0015                     	;# 
   219  0016                     	;# 
   220  0016                     	;# 
   221  0017                     	;# 
   222  0018                     	;# 
   223  0019                     	;# 
   224  001A                     	;# 
   225  001B                     	;# 
   226  001C                     	;# 
   227  008C                     	;# 
   228  008D                     	;# 
   229  008E                     	;# 
   230  0091                     	;# 
   231  0092                     	;# 
   232  0093                     	;# 
   233  0095                     	;# 
   234  0096                     	;# 
   235  0097                     	;# 
   236  0099                     	;# 
   237  009A                     	;# 
   238  009B                     	;# 
   239  009B                     	;# 
   240  009C                     	;# 
   241  009D                     	;# 
   242  009E                     	;# 
   243  009F                     	;# 
   244  010C                     	;# 
   245  010D                     	;# 
   246  010E                     	;# 
   247  0111                     	;# 
   248  0112                     	;# 
   249  0113                     	;# 
   250  0114                     	;# 
   251  0115                     	;# 
   252  0116                     	;# 
   253  0117                     	;# 
   254  0118                     	;# 
   255  0119                     	;# 
   256  011D                     	;# 
   257  018C                     	;# 
   258  018D                     	;# 
   259  018E                     	;# 
   260  0191                     	;# 
   261  0191                     	;# 
   262  0192                     	;# 
   263  0193                     	;# 
   264  0193                     	;# 
   265  0194                     	;# 
   266  0195                     	;# 
   267  0196                     	;# 
   268  0199                     	;# 
   269  019A                     	;# 
   270  019B                     	;# 
   271  019B                     	;# 
   272  019C                     	;# 
   273  019D                     	;# 
   274  019E                     	;# 
   275  019F                     	;# 
   276  020C                     	;# 
   277  020D                     	;# 
   278  0211                     	;# 
   279  0211                     	;# 
   280  0212                     	;# 
   281  0212                     	;# 
   282  0213                     	;# 
   283  0213                     	;# 
   284  0214                     	;# 
   285  0214                     	;# 
   286  0215                     	;# 
   287  0215                     	;# 
   288  0215                     	;# 
   289  0216                     	;# 
   290  0216                     	;# 
   291  0217                     	;# 
   292  0217                     	;# 
   293  0391                     	;# 
   294  0392                     	;# 
   295  0393                     	;# 
   296  0394                     	;# 
   297  0395                     	;# 
   298  0396                     	;# 
   299  0498                     	;# 
   300  0498                     	;# 
   301  0499                     	;# 
   302  049A                     	;# 
   303  049B                     	;# 
   304  049B                     	;# 
   305  049C                     	;# 
   306  049E                     	;# 
   307  049F                     	;# 
   308  0611                     	;# 
   309  0612                     	;# 
   310  0613                     	;# 
   311  0613                     	;# 
   312  0614                     	;# 
   313  0615                     	;# 
   314  0616                     	;# 
   315  0616                     	;# 
   316  0617                     	;# 
   317  0618                     	;# 
   318  0619                     	;# 
   319  0619                     	;# 
   320  061A                     	;# 
   321  061B                     	;# 
   322  061C                     	;# 
   323  061C                     	;# 
   324  0691                     	;# 
   325  0692                     	;# 
   326  0693                     	;# 
   327  0694                     	;# 
   328  0695                     	;# 
   329  0F0F                     	;# 
   330  0F10                     	;# 
   331  0F11                     	;# 
   332  0F12                     	;# 
   333  0F13                     	;# 
   334  0F14                     	;# 
   335  0F15                     	;# 
   336  0F16                     	;# 
   337  0F17                     	;# 
   338  0F18                     	;# 
   339  0F19                     	;# 
   340  0F1A                     	;# 
   341  0F1B                     	;# 
   342  0F1C                     	;# 
   343  0F1D                     	;# 
   344  0F1E                     	;# 
   345  0F1F                     	;# 
   346  0F20                     	;# 
   347  0F21                     	;# 
   348  0F22                     	;# 
   349  0F23                     	;# 
   350  0F24                     	;# 
   351  0F25                     	;# 
   352  0F26                     	;# 
   353  0F27                     	;# 
   354  0F28                     	;# 
   355  0F29                     	;# 
   356  0F2A                     	;# 
   357  0F2B                     	;# 
   358  0F2C                     	;# 
   359  0F2D                     	;# 
   360  0F2E                     	;# 
   361  0F2F                     	;# 
   362  0F8C                     	;# 
   363  0F8D                     	;# 
   364  0F91                     	;# 
   365  0F95                     	;# 
   366  0F96                     	;# 
   367  0F97                     	;# 
   368  0F9C                     	;# 
   369  0F9D                     	;# 
   370  0F9E                     	;# 
   371  0FE3                     	;# 
   372  0FE4                     	;# 
   373  0FE5                     	;# 
   374  0FE6                     	;# 
   375  0FE7                     	;# 
   376  0FE8                     	;# 
   377  0FE9                     	;# 
   378  0FEA                     	;# 
   379  0FEB                     	;# 
   380  0FED                     	;# 
   381  0FEE                     	;# 
   382  0FEF                     	;# 
   383  0000                     	;# 
   384  0001                     	;# 
   385  0002                     	;# 
   386  0003                     	;# 
   387  0004                     	;# 
   388  0005                     	;# 
   389  0006                     	;# 
   390  0007                     	;# 
   391  0008                     	;# 
   392  0009                     	;# 
   393  000A                     	;# 
   394  000B                     	;# 
   395  000C                     	;# 
   396  000D                     	;# 
   397  000E                     	;# 
   398  0011                     	;# 
   399  0012                     	;# 
   400  0013                     	;# 
   401  0015                     	;# 
   402  0016                     	;# 
   403  0016                     	;# 
   404  0017                     	;# 
   405  0018                     	;# 
   406  0019                     	;# 
   407  001A                     	;# 
   408  001B                     	;# 
   409  001C                     	;# 
   410  008C                     	;# 
   411  008D                     	;# 
   412  008E                     	;# 
   413  0091                     	;# 
   414  0092                     	;# 
   415  0093                     	;# 
   416  0095                     	;# 
   417  0096                     	;# 
   418  0097                     	;# 
   419  0099                     	;# 
   420  009A                     	;# 
   421  009B                     	;# 
   422  009B                     	;# 
   423  009C                     	;# 
   424  009D                     	;# 
   425  009E                     	;# 
   426  009F                     	;# 
   427  010C                     	;# 
   428  010D                     	;# 
   429  010E                     	;# 
   430  0111                     	;# 
   431  0112                     	;# 
   432  0113                     	;# 
   433  0114                     	;# 
   434  0115                     	;# 
   435  0116                     	;# 
   436  0117                     	;# 
   437  0118                     	;# 
   438  0119                     	;# 
   439  011D                     	;# 
   440  018C                     	;# 
   441  018D                     	;# 
   442  018E                     	;# 
   443  0191                     	;# 
   444  0191                     	;# 
   445  0192                     	;# 
   446  0193                     	;# 
   447  0193                     	;# 
   448  0194                     	;# 
   449  0195                     	;# 
   450  0196                     	;# 
   451  0199                     	;# 
   452  019A                     	;# 
   453  019B                     	;# 
   454  019B                     	;# 
   455  019C                     	;# 
   456  019D                     	;# 
   457  019E                     	;# 
   458  019F                     	;# 
   459  020C                     	;# 
   460  020D                     	;# 
   461  0211                     	;# 
   462  0211                     	;# 
   463  0212                     	;# 
   464  0212                     	;# 
   465  0213                     	;# 
   466  0213                     	;# 
   467  0214                     	;# 
   468  0214                     	;# 
   469  0215                     	;# 
   470  0215                     	;# 
   471  0215                     	;# 
   472  0216                     	;# 
   473  0216                     	;# 
   474  0217                     	;# 
   475  0217                     	;# 
   476  0391                     	;# 
   477  0392                     	;# 
   478  0393                     	;# 
   479  0394                     	;# 
   480  0395                     	;# 
   481  0396                     	;# 
   482  0498                     	;# 
   483  0498                     	;# 
   484  0499                     	;# 
   485  049A                     	;# 
   486  049B                     	;# 
   487  049B                     	;# 
   488  049C                     	;# 
   489  049E                     	;# 
   490  049F                     	;# 
   491  0611                     	;# 
   492  0612                     	;# 
   493  0613                     	;# 
   494  0613                     	;# 
   495  0614                     	;# 
   496  0615                     	;# 
   497  0616                     	;# 
   498  0616                     	;# 
   499  0617                     	;# 
   500  0618                     	;# 
   501  0619                     	;# 
   502  0619                     	;# 
   503  061A                     	;# 
   504  061B                     	;# 
   505  061C                     	;# 
   506  061C                     	;# 
   507  0691                     	;# 
   508  0692                     	;# 
   509  0693                     	;# 
   510  0694                     	;# 
   511  0695                     	;# 
   512  0F0F                     	;# 
   513  0F10                     	;# 
   514  0F11                     	;# 
   515  0F12                     	;# 
   516  0F13                     	;# 
   517  0F14                     	;# 
   518  0F15                     	;# 
   519  0F16                     	;# 
   520  0F17                     	;# 
   521  0F18                     	;# 
   522  0F19                     	;# 
   523  0F1A                     	;# 
   524  0F1B                     	;# 
   525  0F1C                     	;# 
   526  0F1D                     	;# 
   527  0F1E                     	;# 
   528  0F1F                     	;# 
   529  0F20                     	;# 
   530  0F21                     	;# 
   531  0F22                     	;# 
   532  0F23                     	;# 
   533  0F24                     	;# 
   534  0F25                     	;# 
   535  0F26                     	;# 
   536  0F27                     	;# 
   537  0F28                     	;# 
   538  0F29                     	;# 
   539  0F2A                     	;# 
   540  0F2B                     	;# 
   541  0F2C                     	;# 
   542  0F2D                     	;# 
   543  0F2E                     	;# 
   544  0F2F                     	;# 
   545  0F8C                     	;# 
   546  0F8D                     	;# 
   547  0F91                     	;# 
   548  0F95                     	;# 
   549  0F96                     	;# 
   550  0F97                     	;# 
   551  0F9C                     	;# 
   552  0F9D                     	;# 
   553  0F9E                     	;# 
   554  0FE3                     	;# 
   555  0FE4                     	;# 
   556  0FE5                     	;# 
   557  0FE6                     	;# 
   558  0FE7                     	;# 
   559  0FE8                     	;# 
   560  0FE9                     	;# 
   561  0FEA                     	;# 
   562  0FEB                     	;# 
   563  0FED                     	;# 
   564  0FEE                     	;# 
   565  0FEF                     	;# 
   566  0000                     	;# 
   567  0001                     	;# 
   568  0002                     	;# 
   569  0003                     	;# 
   570  0004                     	;# 
   571  0005                     	;# 
   572  0006                     	;# 
   573  0007                     	;# 
   574  0008                     	;# 
   575  0009                     	;# 
   576  000A                     	;# 
   577  000B                     	;# 
   578  000C                     	;# 
   579  000D                     	;# 
   580  000E                     	;# 
   581  0011                     	;# 
   582  0012                     	;# 
   583  0013                     	;# 
   584  0015                     	;# 
   585  0016                     	;# 
   586  0016                     	;# 
   587  0017                     	;# 
   588  0018                     	;# 
   589  0019                     	;# 
   590  001A                     	;# 
   591  001B                     	;# 
   592  001C                     	;# 
   593  008C                     	;# 
   594  008D                     	;# 
   595  008E                     	;# 
   596  0091                     	;# 
   597  0092                     	;# 
   598  0093                     	;# 
   599  0095                     	;# 
   600  0096                     	;# 
   601  0097                     	;# 
   602  0099                     	;# 
   603  009A                     	;# 
   604  009B                     	;# 
   605  009B                     	;# 
   606  009C                     	;# 
   607  009D                     	;# 
   608  009E                     	;# 
   609  009F                     	;# 
   610  010C                     	;# 
   611  010D                     	;# 
   612  010E                     	;# 
   613  0111                     	;# 
   614  0112                     	;# 
   615  0113                     	;# 
   616  0114                     	;# 
   617  0115                     	;# 
   618  0116                     	;# 
   619  0117                     	;# 
   620  0118                     	;# 
   621  0119                     	;# 
   622  011D                     	;# 
   623  018C                     	;# 
   624  018D                     	;# 
   625  018E                     	;# 
   626  0191                     	;# 
   627  0191                     	;# 
   628  0192                     	;# 
   629  0193                     	;# 
   630  0193                     	;# 
   631  0194                     	;# 
   632  0195                     	;# 
   633  0196                     	;# 
   634  0199                     	;# 
   635  019A                     	;# 
   636  019B                     	;# 
   637  019B                     	;# 
   638  019C                     	;# 
   639  019D                     	;# 
   640  019E                     	;# 
   641  019F                     	;# 
   642  020C                     	;# 
   643  020D                     	;# 
   644  0211                     	;# 
   645  0211                     	;# 
   646  0212                     	;# 
   647  0212                     	;# 
   648  0213                     	;# 
   649  0213                     	;# 
   650  0214                     	;# 
   651  0214                     	;# 
   652  0215                     	;# 
   653  0215                     	;# 
   654  0215                     	;# 
   655  0216                     	;# 
   656  0216                     	;# 
   657  0217                     	;# 
   658  0217                     	;# 
   659  0391                     	;# 
   660  0392                     	;# 
   661  0393                     	;# 
   662  0394                     	;# 
   663  0395                     	;# 
   664  0396                     	;# 
   665  0498                     	;# 
   666  0498                     	;# 
   667  0499                     	;# 
   668  049A                     	;# 
   669  049B                     	;# 
   670  049B                     	;# 
   671  049C                     	;# 
   672  049E                     	;# 
   673  049F                     	;# 
   674  0611                     	;# 
   675  0612                     	;# 
   676  0613                     	;# 
   677  0613                     	;# 
   678  0614                     	;# 
   679  0615                     	;# 
   680  0616                     	;# 
   681  0616                     	;# 
   682  0617                     	;# 
   683  0618                     	;# 
   684  0619                     	;# 
   685  0619                     	;# 
   686  061A                     	;# 
   687  061B                     	;# 
   688  061C                     	;# 
   689  061C                     	;# 
   690  0691                     	;# 
   691  0692                     	;# 
   692  0693                     	;# 
   693  0694                     	;# 
   694  0695                     	;# 
   695  0F0F                     	;# 
   696  0F10                     	;# 
   697  0F11                     	;# 
   698  0F12                     	;# 
   699  0F13                     	;# 
   700  0F14                     	;# 
   701  0F15                     	;# 
   702  0F16                     	;# 
   703  0F17                     	;# 
   704  0F18                     	;# 
   705  0F19                     	;# 
   706  0F1A                     	;# 
   707  0F1B                     	;# 
   708  0F1C                     	;# 
   709  0F1D                     	;# 
   710  0F1E                     	;# 
   711  0F1F                     	;# 
   712  0F20                     	;# 
   713  0F21                     	;# 
   714  0F22                     	;# 
   715  0F23                     	;# 
   716  0F24                     	;# 
   717  0F25                     	;# 
   718  0F26                     	;# 
   719  0F27                     	;# 
   720  0F28                     	;# 
   721  0F29                     	;# 
   722  0F2A                     	;# 
   723  0F2B                     	;# 
   724  0F2C                     	;# 
   725  0F2D                     	;# 
   726  0F2E                     	;# 
   727  0F2F                     	;# 
   728  0F8C                     	;# 
   729  0F8D                     	;# 
   730  0F91                     	;# 
   731  0F95                     	;# 
   732  0F96                     	;# 
   733  0F97                     	;# 
   734  0F9C                     	;# 
   735  0F9D                     	;# 
   736  0F9E                     	;# 
   737  0FE3                     	;# 
   738  0FE4                     	;# 
   739  0FE5                     	;# 
   740  0FE6                     	;# 
   741  0FE7                     	;# 
   742  0FE8                     	;# 
   743  0FE9                     	;# 
   744  0FEA                     	;# 
   745  0FEB                     	;# 
   746  0FED                     	;# 
   747  0FEE                     	;# 
   748  0FEF                     	;# 
   749  0000                     	;# 
   750  0001                     	;# 
   751  0002                     	;# 
   752  0003                     	;# 
   753  0004                     	;# 
   754  0005                     	;# 
   755  0006                     	;# 
   756  0007                     	;# 
   757  0008                     	;# 
   758  0009                     	;# 
   759  000A                     	;# 
   760  000B                     	;# 
   761  000C                     	;# 
   762  000D                     	;# 
   763  000E                     	;# 
   764  0011                     	;# 
   765  0012                     	;# 
   766  0013                     	;# 
   767  0015                     	;# 
   768  0016                     	;# 
   769  0016                     	;# 
   770  0017                     	;# 
   771  0018                     	;# 
   772  0019                     	;# 
   773  001A                     	;# 
   774  001B                     	;# 
   775  001C                     	;# 
   776  008C                     	;# 
   777  008D                     	;# 
   778  008E                     	;# 
   779  0091                     	;# 
   780  0092                     	;# 
   781  0093                     	;# 
   782  0095                     	;# 
   783  0096                     	;# 
   784  0097                     	;# 
   785  0099                     	;# 
   786  009A                     	;# 
   787  009B                     	;# 
   788  009B                     	;# 
   789  009C                     	;# 
   790  009D                     	;# 
   791  009E                     	;# 
   792  009F                     	;# 
   793  010C                     	;# 
   794  010D                     	;# 
   795  010E                     	;# 
   796  0111                     	;# 
   797  0112                     	;# 
   798  0113                     	;# 
   799  0114                     	;# 
   800  0115                     	;# 
   801  0116                     	;# 
   802  0117                     	;# 
   803  0118                     	;# 
   804  0119                     	;# 
   805  011D                     	;# 
   806  018C                     	;# 
   807  018D                     	;# 
   808  018E                     	;# 
   809  0191                     	;# 
   810  0191                     	;# 
   811  0192                     	;# 
   812  0193                     	;# 
   813  0193                     	;# 
   814  0194                     	;# 
   815  0195                     	;# 
   816  0196                     	;# 
   817  0199                     	;# 
   818  019A                     	;# 
   819  019B                     	;# 
   820  019B                     	;# 
   821  019C                     	;# 
   822  019D                     	;# 
   823  019E                     	;# 
   824  019F                     	;# 
   825  020C                     	;# 
   826  020D                     	;# 
   827  0211                     	;# 
   828  0211                     	;# 
   829  0212                     	;# 
   830  0212                     	;# 
   831  0213                     	;# 
   832  0213                     	;# 
   833  0214                     	;# 
   834  0214                     	;# 
   835  0215                     	;# 
   836  0215                     	;# 
   837  0215                     	;# 
   838  0216                     	;# 
   839  0216                     	;# 
   840  0217                     	;# 
   841  0217                     	;# 
   842  0391                     	;# 
   843  0392                     	;# 
   844  0393                     	;# 
   845  0394                     	;# 
   846  0395                     	;# 
   847  0396                     	;# 
   848  0498                     	;# 
   849  0498                     	;# 
   850  0499                     	;# 
   851  049A                     	;# 
   852  049B                     	;# 
   853  049B                     	;# 
   854  049C                     	;# 
   855  049E                     	;# 
   856  049F                     	;# 
   857  0611                     	;# 
   858  0612                     	;# 
   859  0613                     	;# 
   860  0613                     	;# 
   861  0614                     	;# 
   862  0615                     	;# 
   863  0616                     	;# 
   864  0616                     	;# 
   865  0617                     	;# 
   866  0618                     	;# 
   867  0619                     	;# 
   868  0619                     	;# 
   869  061A                     	;# 
   870  061B                     	;# 
   871  061C                     	;# 
   872  061C                     	;# 
   873  0691                     	;# 
   874  0692                     	;# 
   875  0693                     	;# 
   876  0694                     	;# 
   877  0695                     	;# 
   878  0F0F                     	;# 
   879  0F10                     	;# 
   880  0F11                     	;# 
   881  0F12                     	;# 
   882  0F13                     	;# 
   883  0F14                     	;# 
   884  0F15                     	;# 
   885  0F16                     	;# 
   886  0F17                     	;# 
   887  0F18                     	;# 
   888  0F19                     	;# 
   889  0F1A                     	;# 
   890  0F1B                     	;# 
   891  0F1C                     	;# 
   892  0F1D                     	;# 
   893  0F1E                     	;# 
   894  0F1F                     	;# 
   895  0F20                     	;# 
   896  0F21                     	;# 
   897  0F22                     	;# 
   898  0F23                     	;# 
   899  0F24                     	;# 
   900  0F25                     	;# 
   901  0F26                     	;# 
   902  0F27                     	;# 
   903  0F28                     	;# 
   904  0F29                     	;# 
   905  0F2A                     	;# 
   906  0F2B                     	;# 
   907  0F2C                     	;# 
   908  0F2D                     	;# 
   909  0F2E                     	;# 
   910  0F2F                     	;# 
   911  0F8C                     	;# 
   912  0F8D                     	;# 
   913  0F91                     	;# 
   914  0F95                     	;# 
   915  0F96                     	;# 
   916  0F97                     	;# 
   917  0F9C                     	;# 
   918  0F9D                     	;# 
   919  0F9E                     	;# 
   920  0FE3                     	;# 
   921  0FE4                     	;# 
   922  0FE5                     	;# 
   923  0FE6                     	;# 
   924  0FE7                     	;# 
   925  0FE8                     	;# 
   926  0FE9                     	;# 
   927  0FEA                     	;# 
   928  0FEB                     	;# 
   929  0FED                     	;# 
   930  0FEE                     	;# 
   931  0FEF                     	;# 
   932  0000                     	;# 
   933  0001                     	;# 
   934  0002                     	;# 
   935  0003                     	;# 
   936  0004                     	;# 
   937  0005                     	;# 
   938  0006                     	;# 
   939  0007                     	;# 
   940  0008                     	;# 
   941  0009                     	;# 
   942  000A                     	;# 
   943  000B                     	;# 
   944  000C                     	;# 
   945  000D                     	;# 
   946  000E                     	;# 
   947  0011                     	;# 
   948  0012                     	;# 
   949  0013                     	;# 
   950  0015                     	;# 
   951  0016                     	;# 
   952  0016                     	;# 
   953  0017                     	;# 
   954  0018                     	;# 
   955  0019                     	;# 
   956  001A                     	;# 
   957  001B                     	;# 
   958  001C                     	;# 
   959  008C                     	;# 
   960  008D                     	;# 
   961  008E                     	;# 
   962  0091                     	;# 
   963  0092                     	;# 
   964  0093                     	;# 
   965  0095                     	;# 
   966  0096                     	;# 
   967  0097                     	;# 
   968  0099                     	;# 
   969  009A                     	;# 
   970  009B                     	;# 
   971  009B                     	;# 
   972  009C                     	;# 
   973  009D                     	;# 
   974  009E                     	;# 
   975  009F                     	;# 
   976  010C                     	;# 
   977  010D                     	;# 
   978  010E                     	;# 
   979  0111                     	;# 
   980  0112                     	;# 
   981  0113                     	;# 
   982  0114                     	;# 
   983  0115                     	;# 
   984  0116                     	;# 
   985  0117                     	;# 
   986  0118                     	;# 
   987  0119                     	;# 
   988  011D                     	;# 
   989  018C                     	;# 
   990  018D                     	;# 
   991  018E                     	;# 
   992  0191                     	;# 
   993  0191                     	;# 
   994  0192                     	;# 
   995  0193                     	;# 
   996  0193                     	;# 
   997  0194                     	;# 
   998  0195                     	;# 
   999  0196                     	;# 
  1000  0199                     	;# 
  1001  019A                     	;# 
  1002  019B                     	;# 
  1003  019B                     	;# 
  1004  019C                     	;# 
  1005  019D                     	;# 
  1006  019E                     	;# 
  1007  019F                     	;# 
  1008  020C                     	;# 
  1009  020D                     	;# 
  1010  0211                     	;# 
  1011  0211                     	;# 
  1012  0212                     	;# 
  1013  0212                     	;# 
  1014  0213                     	;# 
  1015  0213                     	;# 
  1016  0214                     	;# 
  1017  0214                     	;# 
  1018  0215                     	;# 
  1019  0215                     	;# 
  1020  0215                     	;# 
  1021  0216                     	;# 
  1022  0216                     	;# 
  1023  0217                     	;# 
  1024  0217                     	;# 
  1025  0391                     	;# 
  1026  0392                     	;# 
  1027  0393                     	;# 
  1028  0394                     	;# 
  1029  0395                     	;# 
  1030  0396                     	;# 
  1031  0498                     	;# 
  1032  0498                     	;# 
  1033  0499                     	;# 
  1034  049A                     	;# 
  1035  049B                     	;# 
  1036  049B                     	;# 
  1037  049C                     	;# 
  1038  049E                     	;# 
  1039  049F                     	;# 
  1040  0611                     	;# 
  1041  0612                     	;# 
  1042  0613                     	;# 
  1043  0613                     	;# 
  1044  0614                     	;# 
  1045  0615                     	;# 
  1046  0616                     	;# 
  1047  0616                     	;# 
  1048  0617                     	;# 
  1049  0618                     	;# 
  1050  0619                     	;# 
  1051  0619                     	;# 
  1052  061A                     	;# 
  1053  061B                     	;# 
  1054  061C                     	;# 
  1055  061C                     	;# 
  1056  0691                     	;# 
  1057  0692                     	;# 
  1058  0693                     	;# 
  1059  0694                     	;# 
  1060  0695                     	;# 
  1061  0F0F                     	;# 
  1062  0F10                     	;# 
  1063  0F11                     	;# 
  1064  0F12                     	;# 
  1065  0F13                     	;# 
  1066  0F14                     	;# 
  1067  0F15                     	;# 
  1068  0F16                     	;# 
  1069  0F17                     	;# 
  1070  0F18                     	;# 
  1071  0F19                     	;# 
  1072  0F1A                     	;# 
  1073  0F1B                     	;# 
  1074  0F1C                     	;# 
  1075  0F1D                     	;# 
  1076  0F1E                     	;# 
  1077  0F1F                     	;# 
  1078  0F20                     	;# 
  1079  0F21                     	;# 
  1080  0F22                     	;# 
  1081  0F23                     	;# 
  1082  0F24                     	;# 
  1083  0F25                     	;# 
  1084  0F26                     	;# 
  1085  0F27                     	;# 
  1086  0F28                     	;# 
  1087  0F29                     	;# 
  1088  0F2A                     	;# 
  1089  0F2B                     	;# 
  1090  0F2C                     	;# 
  1091  0F2D                     	;# 
  1092  0F2E                     	;# 
  1093  0F2F                     	;# 
  1094  0F8C                     	;# 
  1095  0F8D                     	;# 
  1096  0F91                     	;# 
  1097  0F95                     	;# 
  1098  0F96                     	;# 
  1099  0F97                     	;# 
  1100  0F9C                     	;# 
  1101  0F9D                     	;# 
  1102  0F9E                     	;# 
  1103  0FE3                     	;# 
  1104  0FE4                     	;# 
  1105  0FE5                     	;# 
  1106  0FE6                     	;# 
  1107  0FE7                     	;# 
  1108  0FE8                     	;# 
  1109  0FE9                     	;# 
  1110  0FEA                     	;# 
  1111  0FEB                     	;# 
  1112  0FED                     	;# 
  1113  0FEE                     	;# 
  1114  0FEF                     	;# 
  1115  0000                     	;# 
  1116  0001                     	;# 
  1117  0002                     	;# 
  1118  0003                     	;# 
  1119  0004                     	;# 
  1120  0005                     	;# 
  1121  0006                     	;# 
  1122  0007                     	;# 
  1123  0008                     	;# 
  1124  0009                     	;# 
  1125  000A                     	;# 
  1126  000B                     	;# 
  1127  000C                     	;# 
  1128  000D                     	;# 
  1129  000E                     	;# 
  1130  0011                     	;# 
  1131  0012                     	;# 
  1132  0013                     	;# 
  1133  0015                     	;# 
  1134  0016                     	;# 
  1135  0016                     	;# 
  1136  0017                     	;# 
  1137  0018                     	;# 
  1138  0019                     	;# 
  1139  001A                     	;# 
  1140  001B                     	;# 
  1141  001C                     	;# 
  1142  008C                     	;# 
  1143  008D                     	;# 
  1144  008E                     	;# 
  1145  0091                     	;# 
  1146  0092                     	;# 
  1147  0093                     	;# 
  1148  0095                     	;# 
  1149  0096                     	;# 
  1150  0097                     	;# 
  1151  0099                     	;# 
  1152  009A                     	;# 
  1153  009B                     	;# 
  1154  009B                     	;# 
  1155  009C                     	;# 
  1156  009D                     	;# 
  1157  009E                     	;# 
  1158  009F                     	;# 
  1159  010C                     	;# 
  1160  010D                     	;# 
  1161  010E                     	;# 
  1162  0111                     	;# 
  1163  0112                     	;# 
  1164  0113                     	;# 
  1165  0114                     	;# 
  1166  0115                     	;# 
  1167  0116                     	;# 
  1168  0117                     	;# 
  1169  0118                     	;# 
  1170  0119                     	;# 
  1171  011D                     	;# 
  1172  018C                     	;# 
  1173  018D                     	;# 
  1174  018E                     	;# 
  1175  0191                     	;# 
  1176  0191                     	;# 
  1177  0192                     	;# 
  1178  0193                     	;# 
  1179  0193                     	;# 
  1180  0194                     	;# 
  1181  0195                     	;# 
  1182  0196                     	;# 
  1183  0199                     	;# 
  1184  019A                     	;# 
  1185  019B                     	;# 
  1186  019B                     	;# 
  1187  019C                     	;# 
  1188  019D                     	;# 
  1189  019E                     	;# 
  1190  019F                     	;# 
  1191  020C                     	;# 
  1192  020D                     	;# 
  1193  0211                     	;# 
  1194  0211                     	;# 
  1195  0212                     	;# 
  1196  0212                     	;# 
  1197  0213                     	;# 
  1198  0213                     	;# 
  1199  0214                     	;# 
  1200  0214                     	;# 
  1201  0215                     	;# 
  1202  0215                     	;# 
  1203  0215                     	;# 
  1204  0216                     	;# 
  1205  0216                     	;# 
  1206  0217                     	;# 
  1207  0217                     	;# 
  1208  0391                     	;# 
  1209  0392                     	;# 
  1210  0393                     	;# 
  1211  0394                     	;# 
  1212  0395                     	;# 
  1213  0396                     	;# 
  1214  0498                     	;# 
  1215  0498                     	;# 
  1216  0499                     	;# 
  1217  049A                     	;# 
  1218  049B                     	;# 
  1219  049B                     	;# 
  1220  049C                     	;# 
  1221  049E                     	;# 
  1222  049F                     	;# 
  1223  0611                     	;# 
  1224  0612                     	;# 
  1225  0613                     	;# 
  1226  0613                     	;# 
  1227  0614                     	;# 
  1228  0615                     	;# 
  1229  0616                     	;# 
  1230  0616                     	;# 
  1231  0617                     	;# 
  1232  0618                     	;# 
  1233  0619                     	;# 
  1234  0619                     	;# 
  1235  061A                     	;# 
  1236  061B                     	;# 
  1237  061C                     	;# 
  1238  061C                     	;# 
  1239  0691                     	;# 
  1240  0692                     	;# 
  1241  0693                     	;# 
  1242  0694                     	;# 
  1243  0695                     	;# 
  1244  0F0F                     	;# 
  1245  0F10                     	;# 
  1246  0F11                     	;# 
  1247  0F12                     	;# 
  1248  0F13                     	;# 
  1249  0F14                     	;# 
  1250  0F15                     	;# 
  1251  0F16                     	;# 
  1252  0F17                     	;# 
  1253  0F18                     	;# 
  1254  0F19                     	;# 
  1255  0F1A                     	;# 
  1256  0F1B                     	;# 
  1257  0F1C                     	;# 
  1258  0F1D                     	;# 
  1259  0F1E                     	;# 
  1260  0F1F                     	;# 
  1261  0F20                     	;# 
  1262  0F21                     	;# 
  1263  0F22                     	;# 
  1264  0F23                     	;# 
  1265  0F24                     	;# 
  1266  0F25                     	;# 
  1267  0F26                     	;# 
  1268  0F27                     	;# 
  1269  0F28                     	;# 
  1270  0F29                     	;# 
  1271  0F2A                     	;# 
  1272  0F2B                     	;# 
  1273  0F2C                     	;# 
  1274  0F2D                     	;# 
  1275  0F2E                     	;# 
  1276  0F2F                     	;# 
  1277  0F8C                     	;# 
  1278  0F8D                     	;# 
  1279  0F91                     	;# 
  1280  0F95                     	;# 
  1281  0F96                     	;# 
  1282  0F97                     	;# 
  1283  0F9C                     	;# 
  1284  0F9D                     	;# 
  1285  0F9E                     	;# 
  1286  0FE3                     	;# 
  1287  0FE4                     	;# 
  1288  0FE5                     	;# 
  1289  0FE6                     	;# 
  1290  0FE7                     	;# 
  1291  0FE8                     	;# 
  1292  0FE9                     	;# 
  1293  0FEA                     	;# 
  1294  0FEB                     	;# 
  1295  0FED                     	;# 
  1296  0FEE                     	;# 
  1297  0FEF                     	;# 
  1298  0000                     	;# 
  1299  0001                     	;# 
  1300  0002                     	;# 
  1301  0003                     	;# 
  1302  0004                     	;# 
  1303  0005                     	;# 
  1304  0006                     	;# 
  1305  0007                     	;# 
  1306  0008                     	;# 
  1307  0009                     	;# 
  1308  000A                     	;# 
  1309  000B                     	;# 
  1310  000C                     	;# 
  1311  000D                     	;# 
  1312  000E                     	;# 
  1313  0011                     	;# 
  1314  0012                     	;# 
  1315  0013                     	;# 
  1316  0015                     	;# 
  1317  0016                     	;# 
  1318  0016                     	;# 
  1319  0017                     	;# 
  1320  0018                     	;# 
  1321  0019                     	;# 
  1322  001A                     	;# 
  1323  001B                     	;# 
  1324  001C                     	;# 
  1325  008C                     	;# 
  1326  008D                     	;# 
  1327  008E                     	;# 
  1328  0091                     	;# 
  1329  0092                     	;# 
  1330  0093                     	;# 
  1331  0095                     	;# 
  1332  0096                     	;# 
  1333  0097                     	;# 
  1334  0099                     	;# 
  1335  009A                     	;# 
  1336  009B                     	;# 
  1337  009B                     	;# 
  1338  009C                     	;# 
  1339  009D                     	;# 
  1340  009E                     	;# 
  1341  009F                     	;# 
  1342  010C                     	;# 
  1343  010D                     	;# 
  1344  010E                     	;# 
  1345  0111                     	;# 
  1346  0112                     	;# 
  1347  0113                     	;# 
  1348  0114                     	;# 
  1349  0115                     	;# 
  1350  0116                     	;# 
  1351  0117                     	;# 
  1352  0118                     	;# 
  1353  0119                     	;# 
  1354  011D                     	;# 
  1355  018C                     	;# 
  1356  018D                     	;# 
  1357  018E                     	;# 
  1358  0191                     	;# 
  1359  0191                     	;# 
  1360  0192                     	;# 
  1361  0193                     	;# 
  1362  0193                     	;# 
  1363  0194                     	;# 
  1364  0195                     	;# 
  1365  0196                     	;# 
  1366  0199                     	;# 
  1367  019A                     	;# 
  1368  019B                     	;# 
  1369  019B                     	;# 
  1370  019C                     	;# 
  1371  019D                     	;# 
  1372  019E                     	;# 
  1373  019F                     	;# 
  1374  020C                     	;# 
  1375  020D                     	;# 
  1376  0211                     	;# 
  1377  0211                     	;# 
  1378  0212                     	;# 
  1379  0212                     	;# 
  1380  0213                     	;# 
  1381  0213                     	;# 
  1382  0214                     	;# 
  1383  0214                     	;# 
  1384  0215                     	;# 
  1385  0215                     	;# 
  1386  0215                     	;# 
  1387  0216                     	;# 
  1388  0216                     	;# 
  1389  0217                     	;# 
  1390  0217                     	;# 
  1391  0391                     	;# 
  1392  0392                     	;# 
  1393  0393                     	;# 
  1394  0394                     	;# 
  1395  0395                     	;# 
  1396  0396                     	;# 
  1397  0498                     	;# 
  1398  0498                     	;# 
  1399  0499                     	;# 
  1400  049A                     	;# 
  1401  049B                     	;# 
  1402  049B                     	;# 
  1403  049C                     	;# 
  1404  049E                     	;# 
  1405  049F                     	;# 
  1406  0611                     	;# 
  1407  0612                     	;# 
  1408  0613                     	;# 
  1409  0613                     	;# 
  1410  0614                     	;# 
  1411  0615                     	;# 
  1412  0616                     	;# 
  1413  0616                     	;# 
  1414  0617                     	;# 
  1415  0618                     	;# 
  1416  0619                     	;# 
  1417  0619                     	;# 
  1418  061A                     	;# 
  1419  061B                     	;# 
  1420  061C                     	;# 
  1421  061C                     	;# 
  1422  0691                     	;# 
  1423  0692                     	;# 
  1424  0693                     	;# 
  1425  0694                     	;# 
  1426  0695                     	;# 
  1427  0F0F                     	;# 
  1428  0F10                     	;# 
  1429  0F11                     	;# 
  1430  0F12                     	;# 
  1431  0F13                     	;# 
  1432  0F14                     	;# 
  1433  0F15                     	;# 
  1434  0F16                     	;# 
  1435  0F17                     	;# 
  1436  0F18                     	;# 
  1437  0F19                     	;# 
  1438  0F1A                     	;# 
  1439  0F1B                     	;# 
  1440  0F1C                     	;# 
  1441  0F1D                     	;# 
  1442  0F1E                     	;# 
  1443  0F1F                     	;# 
  1444  0F20                     	;# 
  1445  0F21                     	;# 
  1446  0F22                     	;# 
  1447  0F23                     	;# 
  1448  0F24                     	;# 
  1449  0F25                     	;# 
  1450  0F26                     	;# 
  1451  0F27                     	;# 
  1452  0F28                     	;# 
  1453  0F29                     	;# 
  1454  0F2A                     	;# 
  1455  0F2B                     	;# 
  1456  0F2C                     	;# 
  1457  0F2D                     	;# 
  1458  0F2E                     	;# 
  1459  0F2F                     	;# 
  1460  0F8C                     	;# 
  1461  0F8D                     	;# 
  1462  0F91                     	;# 
  1463  0F95                     	;# 
  1464  0F96                     	;# 
  1465  0F97                     	;# 
  1466  0F9C                     	;# 
  1467  0F9D                     	;# 
  1468  0F9E                     	;# 
  1469  0FE3                     	;# 
  1470  0FE4                     	;# 
  1471  0FE5                     	;# 
  1472  0FE6                     	;# 
  1473  0FE7                     	;# 
  1474  0FE8                     	;# 
  1475  0FE9                     	;# 
  1476  0FEA                     	;# 
  1477  0FEB                     	;# 
  1478  0FED                     	;# 
  1479  0FEE                     	;# 
  1480  0FEF                     	;# 
  1481  0000                     	;# 
  1482  0001                     	;# 
  1483  0002                     	;# 
  1484  0003                     	;# 
  1485  0004                     	;# 
  1486  0005                     	;# 
  1487  0006                     	;# 
  1488  0007                     	;# 
  1489  0008                     	;# 
  1490  0009                     	;# 
  1491  000A                     	;# 
  1492  000B                     	;# 
  1493  000C                     	;# 
  1494  000D                     	;# 
  1495  000E                     	;# 
  1496  0011                     	;# 
  1497  0012                     	;# 
  1498  0013                     	;# 
  1499  0015                     	;# 
  1500  0016                     	;# 
  1501  0016                     	;# 
  1502  0017                     	;# 
  1503  0018                     	;# 
  1504  0019                     	;# 
  1505  001A                     	;# 
  1506  001B                     	;# 
  1507  001C                     	;# 
  1508  008C                     	;# 
  1509  008D                     	;# 
  1510  008E                     	;# 
  1511  0091                     	;# 
  1512  0092                     	;# 
  1513  0093                     	;# 
  1514  0095                     	;# 
  1515  0096                     	;# 
  1516  0097                     	;# 
  1517  0099                     	;# 
  1518  009A                     	;# 
  1519  009B                     	;# 
  1520  009B                     	;# 
  1521  009C                     	;# 
  1522  009D                     	;# 
  1523  009E                     	;# 
  1524  009F                     	;# 
  1525  010C                     	;# 
  1526  010D                     	;# 
  1527  010E                     	;# 
  1528  0111                     	;# 
  1529  0112                     	;# 
  1530  0113                     	;# 
  1531  0114                     	;# 
  1532  0115                     	;# 
  1533  0116                     	;# 
  1534  0117                     	;# 
  1535  0118                     	;# 
  1536  0119                     	;# 
  1537  011D                     	;# 
  1538  018C                     	;# 
  1539  018D                     	;# 
  1540  018E                     	;# 
  1541  0191                     	;# 
  1542  0191                     	;# 
  1543  0192                     	;# 
  1544  0193                     	;# 
  1545  0193                     	;# 
  1546  0194                     	;# 
  1547  0195                     	;# 
  1548  0196                     	;# 
  1549  0199                     	;# 
  1550  019A                     	;# 
  1551  019B                     	;# 
  1552  019B                     	;# 
  1553  019C                     	;# 
  1554  019D                     	;# 
  1555  019E                     	;# 
  1556  019F                     	;# 
  1557  020C                     	;# 
  1558  020D                     	;# 
  1559  0211                     	;# 
  1560  0211                     	;# 
  1561  0212                     	;# 
  1562  0212                     	;# 
  1563  0213                     	;# 
  1564  0213                     	;# 
  1565  0214                     	;# 
  1566  0214                     	;# 
  1567  0215                     	;# 
  1568  0215                     	;# 
  1569  0215                     	;# 
  1570  0216                     	;# 
  1571  0216                     	;# 
  1572  0217                     	;# 
  1573  0217                     	;# 
  1574  0391                     	;# 
  1575  0392                     	;# 
  1576  0393                     	;# 
  1577  0394                     	;# 
  1578  0395                     	;# 
  1579  0396                     	;# 
  1580  0498                     	;# 
  1581  0498                     	;# 
  1582  0499                     	;# 
  1583  049A                     	;# 
  1584  049B                     	;# 
  1585  049B                     	;# 
  1586  049C                     	;# 
  1587  049E                     	;# 
  1588  049F                     	;# 
  1589  0611                     	;# 
  1590  0612                     	;# 
  1591  0613                     	;# 
  1592  0613                     	;# 
  1593  0614                     	;# 
  1594  0615                     	;# 
  1595  0616                     	;# 
  1596  0616                     	;# 
  1597  0617                     	;# 
  1598  0618                     	;# 
  1599  0619                     	;# 
  1600  0619                     	;# 
  1601  061A                     	;# 
  1602  061B                     	;# 
  1603  061C                     	;# 
  1604  061C                     	;# 
  1605  0691                     	;# 
  1606  0692                     	;# 
  1607  0693                     	;# 
  1608  0694                     	;# 
  1609  0695                     	;# 
  1610  0F0F                     	;# 
  1611  0F10                     	;# 
  1612  0F11                     	;# 
  1613  0F12                     	;# 
  1614  0F13                     	;# 
  1615  0F14                     	;# 
  1616  0F15                     	;# 
  1617  0F16                     	;# 
  1618  0F17                     	;# 
  1619  0F18                     	;# 
  1620  0F19                     	;# 
  1621  0F1A                     	;# 
  1622  0F1B                     	;# 
  1623  0F1C                     	;# 
  1624  0F1D                     	;# 
  1625  0F1E                     	;# 
  1626  0F1F                     	;# 
  1627  0F20                     	;# 
  1628  0F21                     	;# 
  1629  0F22                     	;# 
  1630  0F23                     	;# 
  1631  0F24                     	;# 
  1632  0F25                     	;# 
  1633  0F26                     	;# 
  1634  0F27                     	;# 
  1635  0F28                     	;# 
  1636  0F29                     	;# 
  1637  0F2A                     	;# 
  1638  0F2B                     	;# 
  1639  0F2C                     	;# 
  1640  0F2D                     	;# 
  1641  0F2E                     	;# 
  1642  0F2F                     	;# 
  1643  0F8C                     	;# 
  1644  0F8D                     	;# 
  1645  0F91                     	;# 
  1646  0F95                     	;# 
  1647  0F96                     	;# 
  1648  0F97                     	;# 
  1649  0F9C                     	;# 
  1650  0F9D                     	;# 
  1651  0F9E                     	;# 
  1652  0FE3                     	;# 
  1653  0FE4                     	;# 
  1654  0FE5                     	;# 
  1655  0FE6                     	;# 
  1656  0FE7                     	;# 
  1657  0FE8                     	;# 
  1658  0FE9                     	;# 
  1659  0FEA                     	;# 
  1660  0FEB                     	;# 
  1661  0FED                     	;# 
  1662  0FEE                     	;# 
  1663  0FEF                     	;# 
  1664  0000                     	;# 
  1665  0001                     	;# 
  1666  0002                     	;# 
  1667  0003                     	;# 
  1668  0004                     	;# 
  1669  0005                     	;# 
  1670  0006                     	;# 
  1671  0007                     	;# 
  1672  0008                     	;# 
  1673  0009                     	;# 
  1674  000A                     	;# 
  1675  000B                     	;# 
  1676  000C                     	;# 
  1677  000D                     	;# 
  1678  000E                     	;# 
  1679  0011                     	;# 
  1680  0012                     	;# 
  1681  0013                     	;# 
  1682  0015                     	;# 
  1683  0016                     	;# 
  1684  0016                     	;# 
  1685  0017                     	;# 
  1686  0018                     	;# 
  1687  0019                     	;# 
  1688  001A                     	;# 
  1689  001B                     	;# 
  1690  001C                     	;# 
  1691  008C                     	;# 
  1692  008D                     	;# 
  1693  008E                     	;# 
  1694  0091                     	;# 
  1695  0092                     	;# 
  1696  0093                     	;# 
  1697  0095                     	;# 
  1698  0096                     	;# 
  1699  0097                     	;# 
  1700  0099                     	;# 
  1701  009A                     	;# 
  1702  009B                     	;# 
  1703  009B                     	;# 
  1704  009C                     	;# 
  1705  009D                     	;# 
  1706  009E                     	;# 
  1707  009F                     	;# 
  1708  010C                     	;# 
  1709  010D                     	;# 
  1710  010E                     	;# 
  1711  0111                     	;# 
  1712  0112                     	;# 
  1713  0113                     	;# 
  1714  0114                     	;# 
  1715  0115                     	;# 
  1716  0116                     	;# 
  1717  0117                     	;# 
  1718  0118                     	;# 
  1719  0119                     	;# 
  1720  011D                     	;# 
  1721  018C                     	;# 
  1722  018D                     	;# 
  1723  018E                     	;# 
  1724  0191                     	;# 
  1725  0191                     	;# 
  1726  0192                     	;# 
  1727  0193                     	;# 
  1728  0193                     	;# 
  1729  0194                     	;# 
  1730  0195                     	;# 
  1731  0196                     	;# 
  1732  0199                     	;# 
  1733  019A                     	;# 
  1734  019B                     	;# 
  1735  019B                     	;# 
  1736  019C                     	;# 
  1737  019D                     	;# 
  1738  019E                     	;# 
  1739  019F                     	;# 
  1740  020C                     	;# 
  1741  020D                     	;# 
  1742  0211                     	;# 
  1743  0211                     	;# 
  1744  0212                     	;# 
  1745  0212                     	;# 
  1746  0213                     	;# 
  1747  0213                     	;# 
  1748  0214                     	;# 
  1749  0214                     	;# 
  1750  0215                     	;# 
  1751  0215                     	;# 
  1752  0215                     	;# 
  1753  0216                     	;# 
  1754  0216                     	;# 
  1755  0217                     	;# 
  1756  0217                     	;# 
  1757  0391                     	;# 
  1758  0392                     	;# 
  1759  0393                     	;# 
  1760  0394                     	;# 
  1761  0395                     	;# 
  1762  0396                     	;# 
  1763  0498                     	;# 
  1764  0498                     	;# 
  1765  0499                     	;# 
  1766  049A                     	;# 
  1767  049B                     	;# 
  1768  049B                     	;# 
  1769  049C                     	;# 
  1770  049E                     	;# 
  1771  049F                     	;# 
  1772  0611                     	;# 
  1773  0612                     	;# 
  1774  0613                     	;# 
  1775  0613                     	;# 
  1776  0614                     	;# 
  1777  0615                     	;# 
  1778  0616                     	;# 
  1779  0616                     	;# 
  1780  0617                     	;# 
  1781  0618                     	;# 
  1782  0619                     	;# 
  1783  0619                     	;# 
  1784  061A                     	;# 
  1785  061B                     	;# 
  1786  061C                     	;# 
  1787  061C                     	;# 
  1788  0691                     	;# 
  1789  0692                     	;# 
  1790  0693                     	;# 
  1791  0694                     	;# 
  1792  0695                     	;# 
  1793  0F0F                     	;# 
  1794  0F10                     	;# 
  1795  0F11                     	;# 
  1796  0F12                     	;# 
  1797  0F13                     	;# 
  1798  0F14                     	;# 
  1799  0F15                     	;# 
  1800  0F16                     	;# 
  1801  0F17                     	;# 
  1802  0F18                     	;# 
  1803  0F19                     	;# 
  1804  0F1A                     	;# 
  1805  0F1B                     	;# 
  1806  0F1C                     	;# 
  1807  0F1D                     	;# 
  1808  0F1E                     	;# 
  1809  0F1F                     	;# 
  1810  0F20                     	;# 
  1811  0F21                     	;# 
  1812  0F22                     	;# 
  1813  0F23                     	;# 
  1814  0F24                     	;# 
  1815  0F25                     	;# 
  1816  0F26                     	;# 
  1817  0F27                     	;# 
  1818  0F28                     	;# 
  1819  0F29                     	;# 
  1820  0F2A                     	;# 
  1821  0F2B                     	;# 
  1822  0F2C                     	;# 
  1823  0F2D                     	;# 
  1824  0F2E                     	;# 
  1825  0F2F                     	;# 
  1826  0F8C                     	;# 
  1827  0F8D                     	;# 
  1828  0F91                     	;# 
  1829  0F95                     	;# 
  1830  0F96                     	;# 
  1831  0F97                     	;# 
  1832  0F9C                     	;# 
  1833  0F9D                     	;# 
  1834  0F9E                     	;# 
  1835  0FE3                     	;# 
  1836  0FE4                     	;# 
  1837  0FE5                     	;# 
  1838  0FE6                     	;# 
  1839  0FE7                     	;# 
  1840  0FE8                     	;# 
  1841  0FE9                     	;# 
  1842  0FEA                     	;# 
  1843  0FEB                     	;# 
  1844  0FED                     	;# 
  1845  0FEE                     	;# 
  1846  0FEF                     	;# 
  1847  0000                     	;# 
  1848  0001                     	;# 
  1849  0002                     	;# 
  1850  0003                     	;# 
  1851  0004                     	;# 
  1852  0005                     	;# 
  1853  0006                     	;# 
  1854  0007                     	;# 
  1855  0008                     	;# 
  1856  0009                     	;# 
  1857  000A                     	;# 
  1858  000B                     	;# 
  1859  000C                     	;# 
  1860  000D                     	;# 
  1861  000E                     	;# 
  1862  0011                     	;# 
  1863  0012                     	;# 
  1864  0013                     	;# 
  1865  0015                     	;# 
  1866  0016                     	;# 
  1867  0016                     	;# 
  1868  0017                     	;# 
  1869  0018                     	;# 
  1870  0019                     	;# 
  1871  001A                     	;# 
  1872  001B                     	;# 
  1873  001C                     	;# 
  1874  008C                     	;# 
  1875  008D                     	;# 
  1876  008E                     	;# 
  1877  0091                     	;# 
  1878  0092                     	;# 
  1879  0093                     	;# 
  1880  0095                     	;# 
  1881  0096                     	;# 
  1882  0097                     	;# 
  1883  0099                     	;# 
  1884  009A                     	;# 
  1885  009B                     	;# 
  1886  009B                     	;# 
  1887  009C                     	;# 
  1888  009D                     	;# 
  1889  009E                     	;# 
  1890  009F                     	;# 
  1891  010C                     	;# 
  1892  010D                     	;# 
  1893  010E                     	;# 
  1894  0111                     	;# 
  1895  0112                     	;# 
  1896  0113                     	;# 
  1897  0114                     	;# 
  1898  0115                     	;# 
  1899  0116                     	;# 
  1900  0117                     	;# 
  1901  0118                     	;# 
  1902  0119                     	;# 
  1903  011D                     	;# 
  1904  018C                     	;# 
  1905  018D                     	;# 
  1906  018E                     	;# 
  1907  0191                     	;# 
  1908  0191                     	;# 
  1909  0192                     	;# 
  1910  0193                     	;# 
  1911  0193                     	;# 
  1912  0194                     	;# 
  1913  0195                     	;# 
  1914  0196                     	;# 
  1915  0199                     	;# 
  1916  019A                     	;# 
  1917  019B                     	;# 
  1918  019B                     	;# 
  1919  019C                     	;# 
  1920  019D                     	;# 
  1921  019E                     	;# 
  1922  019F                     	;# 
  1923  020C                     	;# 
  1924  020D                     	;# 
  1925  0211                     	;# 
  1926  0211                     	;# 
  1927  0212                     	;# 
  1928  0212                     	;# 
  1929  0213                     	;# 
  1930  0213                     	;# 
  1931  0214                     	;# 
  1932  0214                     	;# 
  1933  0215                     	;# 
  1934  0215                     	;# 
  1935  0215                     	;# 
  1936  0216                     	;# 
  1937  0216                     	;# 
  1938  0217                     	;# 
  1939  0217                     	;# 
  1940  0391                     	;# 
  1941  0392                     	;# 
  1942  0393                     	;# 
  1943  0394                     	;# 
  1944  0395                     	;# 
  1945  0396                     	;# 
  1946  0498                     	;# 
  1947  0498                     	;# 
  1948  0499                     	;# 
  1949  049A                     	;# 
  1950  049B                     	;# 
  1951  049B                     	;# 
  1952  049C                     	;# 
  1953  049E                     	;# 
  1954  049F                     	;# 
  1955  0611                     	;# 
  1956  0612                     	;# 
  1957  0613                     	;# 
  1958  0613                     	;# 
  1959  0614                     	;# 
  1960  0615                     	;# 
  1961  0616                     	;# 
  1962  0616                     	;# 
  1963  0617                     	;# 
  1964  0618                     	;# 
  1965  0619                     	;# 
  1966  0619                     	;# 
  1967  061A                     	;# 
  1968  061B                     	;# 
  1969  061C                     	;# 
  1970  061C                     	;# 
  1971  0691                     	;# 
  1972  0692                     	;# 
  1973  0693                     	;# 
  1974  0694                     	;# 
  1975  0695                     	;# 
  1976  0F0F                     	;# 
  1977  0F10                     	;# 
  1978  0F11                     	;# 
  1979  0F12                     	;# 
  1980  0F13                     	;# 
  1981  0F14                     	;# 
  1982  0F15                     	;# 
  1983  0F16                     	;# 
  1984  0F17                     	;# 
  1985  0F18                     	;# 
  1986  0F19                     	;# 
  1987  0F1A                     	;# 
  1988  0F1B                     	;# 
  1989  0F1C                     	;# 
  1990  0F1D                     	;# 
  1991  0F1E                     	;# 
  1992  0F1F                     	;# 
  1993  0F20                     	;# 
  1994  0F21                     	;# 
  1995  0F22                     	;# 
  1996  0F23                     	;# 
  1997  0F24                     	;# 
  1998  0F25                     	;# 
  1999  0F26                     	;# 
  2000  0F27                     	;# 
  2001  0F28                     	;# 
  2002  0F29                     	;# 
  2003  0F2A                     	;# 
  2004  0F2B                     	;# 
  2005  0F2C                     	;# 
  2006  0F2D                     	;# 
  2007  0F2E                     	;# 
  2008  0F2F                     	;# 
  2009  0F8C                     	;# 
  2010  0F8D                     	;# 
  2011  0F91                     	;# 
  2012  0F95                     	;# 
  2013  0F96                     	;# 
  2014  0F97                     	;# 
  2015  0F9C                     	;# 
  2016  0F9D                     	;# 
  2017  0F9E                     	;# 
  2018  0FE3                     	;# 
  2019  0FE4                     	;# 
  2020  0FE5                     	;# 
  2021  0FE6                     	;# 
  2022  0FE7                     	;# 
  2023  0FE8                     	;# 
  2024  0FE9                     	;# 
  2025  0FEA                     	;# 
  2026  0FEB                     	;# 
  2027  0FED                     	;# 
  2028  0FEE                     	;# 
  2029  0FEF                     	;# 
  2030                           
  2031                           	psect	strings
  2032  034C                     __pstrings:	
  2033  034C                     __stringtab:	
  2034  034C  3400               	retlw	0
  2035  034D                     __end_of__stringtab:	
  2036  034D                     _mrfRegset_InitCnt:	
  2037  034D  3410               	retlw	16
  2038  034E                     __end_of_mrfRegset_InitCnt:	
  2039  034E                     _mrfRegset_RxCnt:	
  2040  034E  3406               	retlw	6
  2041  034F                     __end_of_mrfRegset_RxCnt:	
  2042  034F                     _mrfRegset_TxCnt:	
  2043  034F  3404               	retlw	4
  2044  0350                     __end_of_mrfRegset_TxCnt:	
  2045  0350                     _mrfRegset_Init:	
  2046  0350  34CA               	retlw	202
  2047  0351  3471               	retlw	113
  2048  0352  34CA               	retlw	202
  2049  0353  3473               	retlw	115
  2050  0354  3480               	retlw	128
  2051  0355  3428               	retlw	40
  2052  0356  34C4               	retlw	196
  2053  0357  34D7               	retlw	215
  2054  0358  34A8               	retlw	168
  2055  0359  3460               	retlw	96
  2056  035A  34C6               	retlw	198
  2057  035B  3405               	retlw	5
  2058  035C  3482               	retlw	130
  2059  035D  3400               	retlw	0
  2060  035E  3490               	retlw	144
  2061  035F  3462               	retlw	98
  2062  0360  3498               	retlw	152
  2063  0361  3490               	retlw	144
  2064  0362  34C2               	retlw	194
  2065  0363  34AC               	retlw	172
  2066  0364  3482               	retlw	130
  2067  0365  3478               	retlw	120
  2068  0366  3455               	retlw	85
  2069  0367  3400               	retlw	0
  2070  0368  3482               	retlw	130
  2071  0369  34D8               	retlw	216
  2072  036A  3480               	retlw	128
  2073  036B  3468               	retlw	104
  2074  036C  34CA               	retlw	202
  2075  036D  3471               	retlw	113
  2076  036E  34CA               	retlw	202
  2077  036F  3473               	retlw	115
  2078  0370                     __end_of_mrfRegset_Init:	
  2079  0370                     _mrfRegset_Rx:	
  2080  0370  3482               	retlw	130
  2081  0371  3400               	retlw	0
  2082  0372  34CA               	retlw	202
  2083  0373  3471               	retlw	113
  2084  0374  3480               	retlw	128
  2085  0375  3428               	retlw	40
  2086  0376  3482               	retlw	130
  2087  0377  34D8               	retlw	216
  2088  0378  3480               	retlw	128
  2089  0379  3468               	retlw	104
  2090  037A  34CA               	retlw	202
  2091  037B  3473               	retlw	115
  2092  037C                     __end_of_mrfRegset_Rx:	
  2093  037C                     _mrfRegset_Tx:	
  2094  037C  3482               	retlw	130
  2095  037D  3400               	retlw	0
  2096  037E  3480               	retlw	128
  2097  037F  3428               	retlw	40
  2098  0380  3482               	retlw	130
  2099  0381  3478               	retlw	120
  2100  0382  3480               	retlw	128
  2101  0383  34A8               	retlw	168
  2102  0384                     __end_of_mrfRegset_Tx:	
  2103  000B                     _INTCONbits	set	11
  2104  000C                     _PORTAbits	set	12
  2105  000E                     _PORTCbits	set	14
  2106  009D                     _ADCON0	set	157
  2107  009E                     _ADCON1	set	158
  2108  009F                     _ADCON2	set	159
  2109  0095                     _OPTION_REGbits	set	149
  2110  0099                     _OSCCON	set	153
  2111  008C                     _TRISAbits	set	140
  2112  008D                     _TRISBbits	set	141
  2113  008E                     _TRISCbits	set	142
  2114  0117                     _FVRCON	set	279
  2115  010C                     _LATAbits	set	268
  2116  010D                     _LATBbits	set	269
  2117  010E                     _LATCbits	set	270
  2118  018C                     _ANSELA	set	396
  2119  018D                     _ANSELB	set	397
  2120  018E                     _ANSELC	set	398
  2121  020C                     _WPUAbits	set	524
  2122                           
  2123                           	psect	cinit
  2124  0016                     start_initialization:	
  2125                           ; #config settings
  2126                           
  2127  0016                     __initialization:	
  2128                           
  2129                           ; Clear objects allocated to BANK0
  2130  0016  01AB               	clrf	__pbssBANK0& (0+127)
  2131  0017  01AC               	clrf	(__pbssBANK0+1)& (0+127)
  2132                           
  2133                           ; Clear objects allocated to BANK1
  2134  0018  30A0               	movlw	low __pbssBANK1
  2135  0019  0084               	movwf	4
  2136  001A  3000               	movlw	high __pbssBANK1
  2137  001B  0085               	movwf	5
  2138  001C  3045               	movlw	69
  2139  001D  3183  2394  3180   	fcall	clear_ram0
  2140  0020                     end_of_initialization:	
  2141                           ;End of C runtime variable initialization code
  2142                           
  2143  0020                     __end_of__initialization:	
  2144  0020  0020               	movlb	0
  2145  0021  2822               	ljmp	_main	;jump to C main() function
  2146  0022                     __pmaintext:	
  2147 ;;
  2148 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2149 ;;
  2150 ;; *************** function _main *****************
  2151 ;; Defined at:
  2152 ;;		line 23 in file "../../../src/node/main.c"
  2153 ;; Parameters:    Size  Location     Type
  2154 ;;		None
  2155 ;; Auto vars:     Size  Location     Type
  2156 ;;  i               1   10[BANK0 ] unsigned char 
  2157 ;;  j               1    9[BANK0 ] unsigned char 
  2158 ;; Return value:  Size  Location     Type
  2159 ;;		None               void
  2160 ;; Registers used:
  2161 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  2162 ;; Tracked objects:
  2163 ;;		On entry : 17F/0
  2164 ;;		On exit  : 1F/0
  2165 ;;		Unchanged: 0/0
  2166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2167 ;;      Params:         0       0       0       0
  2168 ;;      Locals:         0       2       0       0
  2169 ;;      Temps:          0       0       0       0
  2170 ;;      Totals:         0       2       0       0
  2171 ;;Total ram usage:        2 bytes
  2172 ;; Hardware stack levels required when called:   10
  2173 ;; This function calls:
  2174 ;;		_AdcInit
  2175 ;;		_ExtIntInit
  2176 ;;		_Mrf49xaInit
  2177 ;;		_SysInitGpio
  2178 ;; This function is called by:
  2179 ;;		Startup code after reset
  2180 ;; This function uses a non-reentrant model
  2181 ;;
  2182                           
  2183                           
  2184                           ;psect for function _main
  2185  0022                     _main:	
  2186                           
  2187                           ;main.c: 26: OSCCON = 0b01111000;
  2188                           
  2189                           ;incstack = 0
  2190                           ; Regs used in _main: [allreg]
  2191  0022  3078               	movlw	120
  2192  0023  0021               	movlb	1	; select bank1
  2193  0024  0099               	movwf	25	;volatile
  2194                           
  2195                           ;main.c: 27: WPUAbits.WPUA2 = 1;
  2196  0025  0024               	movlb	4	; select bank4
  2197  0026  150C               	bsf	12,2	;volatile
  2198                           
  2199                           ;main.c: 29: SysInitGpio();
  2200  0027  21EF  3180         	fcall	_SysInitGpio
  2201                           
  2202                           ;main.c: 30: AdcInit();
  2203  0029  204C  3180         	fcall	_AdcInit
  2204                           
  2205                           ;main.c: 31: ExtIntInit();
  2206  002B  205B  3180         	fcall	_ExtIntInit
  2207                           
  2208                           ;main.c: 32: uint8_t i, j;
  2209                           ;main.c: 33: LATAbits.LATA4 = 0;
  2210  002D  0022               	movlb	2	; select bank2
  2211  002E  120C               	bcf	12,4	;volatile
  2212                           
  2213                           ;main.c: 34: LATCbits.LATC1 = 1;
  2214  002F  148E               	bsf	14,1	;volatile
  2215                           
  2216                           ;main.c: 35: for (i = 0; i < 250; i++)
  2217  0030  0020               	movlb	0	; select bank0
  2218  0031  01AA               	clrf	main@i
  2219  0032                     l1653:	
  2220                           
  2221                           ;main.c: 36: {
  2222                           ;main.c: 37: if (i == 125)
  2223  0032  082A               	movf	main@i,w
  2224  0033  3A7D               	xorlw	125
  2225  0034  1D03               	skipz
  2226  0035  2838               	goto	l1657
  2227                           
  2228                           ;main.c: 38: LATAbits.LATA4 = 1;
  2229  0036  0022               	movlb	2	; select bank2
  2230  0037  160C               	bsf	12,4	;volatile
  2231  0038                     l1657:	
  2232                           
  2233                           ;main.c: 39: for (j = 0; j < 250; j++) asm ("nop");
  2234  0038  0020               	movlb	0	; select bank0
  2235  0039  01A9               	clrf	main@j
  2236  003A                     l351:	
  2237  003A  0000               	nop	;# 
  2238  003B  0020               	movlb	0	; select bank0
  2239  003C  30FA               	movlw	250
  2240  003D  0AA9               	incf	main@j,f
  2241  003E  0229               	subwf	main@j,w
  2242  003F  1C03               	skipc
  2243  0040  283A               	goto	l351
  2244  0041  30FA               	movlw	250
  2245  0042  0AAA               	incf	main@i,f
  2246  0043  022A               	subwf	main@i,w
  2247  0044  1C03               	skipc
  2248  0045  2832               	goto	l1653
  2249                           
  2250                           ;main.c: 40: }
  2251                           ;main.c: 42: LATCbits.LATC4 = 1;
  2252  0046  0022               	movlb	2	; select bank2
  2253  0047  160E               	bsf	14,4	;volatile
  2254                           
  2255                           ;main.c: 43: LATAbits.LATA5 = 1;
  2256  0048  168C               	bsf	12,5	;volatile
  2257                           
  2258                           ;main.c: 45: Mrf49xaInit();
  2259  0049  206F  3180         	fcall	_Mrf49xaInit
  2260  004B                     l353:	
  2261                           ;main.c: 47: while(1)
  2262                           
  2263                           
  2264                           ;main.c: 48: {
  2265  004B  284B               	goto	l353
  2266  004C                     __end_of_main:	
  2267  004C                     __ptext12:	
  2268 ;; *************** function _AdcInit *****************
  2269 ;; Defined at:
  2270 ;;		line 4 in file "../../../src/bsp/pic16/adc16.c"
  2271 ;; Parameters:    Size  Location     Type
  2272 ;;		None
  2273 ;; Auto vars:     Size  Location     Type
  2274 ;;		None
  2275 ;; Return value:  Size  Location     Type
  2276 ;;		None               void
  2277 ;; Registers used:
  2278 ;;		wreg, status,2
  2279 ;; Tracked objects:
  2280 ;;		On entry : 17F/2
  2281 ;;		On exit  : 17F/1
  2282 ;;		Unchanged: 160/0
  2283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2284 ;;      Params:         0       0       0       0
  2285 ;;      Locals:         0       0       0       0
  2286 ;;      Temps:          0       0       0       0
  2287 ;;      Totals:         0       0       0       0
  2288 ;;Total ram usage:        0 bytes
  2289 ;; Hardware stack levels used:    1
  2290 ;; Hardware stack levels required when called:    5
  2291 ;; This function calls:
  2292 ;;		Nothing
  2293 ;; This function is called by:
  2294 ;;		_main
  2295 ;; This function uses a non-reentrant model
  2296 ;;
  2297                           
  2298                           
  2299                           ;psect for function _AdcInit
  2300  004C                     _AdcInit:	
  2301                           
  2302                           ;adc16.c: 6: ANSELA = 0;
  2303                           
  2304                           ;incstack = 0
  2305                           ; Regs used in _AdcInit: [wreg+status,2]
  2306  004C  0023               	movlb	3	; select bank3
  2307  004D  018C               	clrf	12	;volatile
  2308                           
  2309                           ;adc16.c: 7: ANSELB = 0;
  2310  004E  018D               	clrf	13	;volatile
  2311                           
  2312                           ;adc16.c: 8: ANSELC = 0;
  2313  004F  018E               	clrf	14	;volatile
  2314                           
  2315                           ;adc16.c: 10: FVRCON = 0b11100001;
  2316  0050  30E1               	movlw	225
  2317  0051  0022               	movlb	2	; select bank2
  2318  0052  0097               	movwf	23	;volatile
  2319                           
  2320                           ;adc16.c: 12: ADCON2 = 0b00000000;
  2321  0053  0021               	movlb	1	; select bank1
  2322  0054  019F               	clrf	31	;volatile
  2323                           
  2324                           ;adc16.c: 13: ADCON1 = 0b11110000;
  2325  0055  30F0               	movlw	240
  2326  0056  009E               	movwf	30	;volatile
  2327                           
  2328                           ;adc16.c: 14: ADCON0 = 0b00000000;
  2329  0057  019D               	clrf	29	;volatile
  2330                           
  2331                           ;adc16.c: 16: ADCON0 = 0b00010011;
  2332  0058  3013               	movlw	19
  2333  0059  009D               	movwf	29	;volatile
  2334  005A  0008               	return
  2335  005B                     __end_of_AdcInit:	
  2336  005B                     __ptext11:	
  2337 ;; *************** function _ExtIntInit *****************
  2338 ;; Defined at:
  2339 ;;		line 8 in file "../../../src/bsp/pic16/interrupt.c"
  2340 ;; Parameters:    Size  Location     Type
  2341 ;;		None
  2342 ;; Auto vars:     Size  Location     Type
  2343 ;;		None
  2344 ;; Return value:  Size  Location     Type
  2345 ;;		None               void
  2346 ;; Registers used:
  2347 ;;		None
  2348 ;; Tracked objects:
  2349 ;;		On entry : 17F/1
  2350 ;;		On exit  : 17F/1
  2351 ;;		Unchanged: 160/0
  2352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2353 ;;      Params:         0       0       0       0
  2354 ;;      Locals:         0       0       0       0
  2355 ;;      Temps:          0       0       0       0
  2356 ;;      Totals:         0       0       0       0
  2357 ;;Total ram usage:        0 bytes
  2358 ;; Hardware stack levels used:    1
  2359 ;; Hardware stack levels required when called:    5
  2360 ;; This function calls:
  2361 ;;		Nothing
  2362 ;; This function is called by:
  2363 ;;		_main
  2364 ;; This function uses a non-reentrant model
  2365 ;;
  2366                           
  2367                           
  2368                           ;psect for function _ExtIntInit
  2369  005B                     _ExtIntInit:	
  2370                           
  2371                           ;interrupt.c: 10: OPTION_REGbits.INTEDG = 0;
  2372                           
  2373                           ;incstack = 0
  2374                           ; Regs used in _ExtIntInit: []
  2375  005B  1315               	bcf	21,6	;volatile
  2376                           
  2377                           ;interrupt.c: 12: INTCONbits.INTF = 0;
  2378  005C  108B               	bcf	11,1	;volatile
  2379                           
  2380                           ;interrupt.c: 13: INTCONbits.INTE = 1;
  2381  005D  160B               	bsf	11,4	;volatile
  2382                           
  2383                           ;interrupt.c: 14: INTCONbits.GIE = 1;
  2384  005E  178B               	bsf	11,7	;volatile
  2385  005F  0008               	return
  2386  0060                     __end_of_ExtIntInit:	
  2387  0060                     __ptext8:	
  2388 ;; *************** function _Mrf49RxCmd *****************
  2389 ;; Defined at:
  2390 ;;		line 16 in file "../../../src/devices/mrf49xa_cmd.c"
  2391 ;; Parameters:    Size  Location     Type
  2392 ;;  cmd             1    wreg     unsigned char 
  2393 ;; Auto vars:     Size  Location     Type
  2394 ;;  cmd             1    1[BANK0 ] unsigned char 
  2395 ;;  val             1    2[BANK0 ] unsigned char 
  2396 ;; Return value:  Size  Location     Type
  2397 ;;                  1    wreg      unsigned char 
  2398 ;; Registers used:
  2399 ;;		wreg, status,2, status,0, pclath, cstack
  2400 ;; Tracked objects:
  2401 ;;		On entry : 1E/1
  2402 ;;		On exit  : 1F/0
  2403 ;;		Unchanged: 0/0
  2404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2405 ;;      Params:         0       0       0       0
  2406 ;;      Locals:         0       2       0       0
  2407 ;;      Temps:          0       0       0       0
  2408 ;;      Totals:         0       2       0       0
  2409 ;;Total ram usage:        2 bytes
  2410 ;; Hardware stack levels used:    1
  2411 ;; Hardware stack levels required when called:    6
  2412 ;; This function calls:
  2413 ;;		_Mrf49SpiRx
  2414 ;;		_Mrf49SpiTx
  2415 ;; This function is called by:
  2416 ;;		_Mrf49RxByte
  2417 ;; This function uses a non-reentrant model
  2418 ;;
  2419                           
  2420                           
  2421                           ;psect for function _Mrf49RxCmd
  2422  0060                     _Mrf49RxCmd:	
  2423                           
  2424                           ;incstack = 0
  2425                           ; Regs used in _Mrf49RxCmd: [wreg+status,2+status,0+pclath+cstack]
  2426                           ;Mrf49RxCmd@cmd stored from wreg
  2427  0060  0020               	movlb	0	; select bank0
  2428  0061  00A1               	movwf	Mrf49RxCmd@cmd
  2429                           
  2430                           ;mrf49xa_cmd.c: 18: LATCbits.LATC6 = 0;;
  2431  0062  0022               	movlb	2	; select bank2
  2432  0063  130E               	bcf	14,6	;volatile
  2433                           
  2434                           ;mrf49xa_cmd.c: 20: Mrf49SpiTx(cmd);
  2435  0064  0020               	movlb	0	; select bank0
  2436  0065  0821               	movf	Mrf49RxCmd@cmd,w
  2437  0066  215C  3180         	fcall	_Mrf49SpiTx
  2438                           
  2439                           ;mrf49xa_cmd.c: 21: uint8_t val = Mrf49SpiRx();
  2440  0068  21B8               	fcall	_Mrf49SpiRx
  2441  0069  00A2               	movwf	Mrf49RxCmd@val
  2442                           
  2443                           ;mrf49xa_cmd.c: 23: LATCbits.LATC6 = 1;;
  2444  006A  0022               	movlb	2	; select bank2
  2445  006B  170E               	bsf	14,6	;volatile
  2446                           
  2447                           ;mrf49xa_cmd.c: 25: return val;
  2448  006C  0020               	movlb	0	; select bank0
  2449  006D  0822               	movf	Mrf49RxCmd@val,w
  2450  006E  0008               	return
  2451  006F                     __end_of_Mrf49RxCmd:	
  2452  006F                     __ptext2:	
  2453 ;; *************** function _Mrf49xaInit *****************
  2454 ;; Defined at:
  2455 ;;		line 245 in file "../../../src/devices/mrf49xa.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;		None
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;  k               1    8[BANK0 ] unsigned char 
  2460 ;;  j               1    7[BANK0 ] unsigned char 
  2461 ;;  i               1    6[BANK0 ] unsigned char 
  2462 ;; Return value:  Size  Location     Type
  2463 ;;		None               void
  2464 ;; Registers used:
  2465 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  2466 ;; Tracked objects:
  2467 ;;		On entry : 1F/2
  2468 ;;		On exit  : 1F/0
  2469 ;;		Unchanged: 0/0
  2470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2471 ;;      Params:         0       0       0       0
  2472 ;;      Locals:         0       3       0       0
  2473 ;;      Temps:          0       0       0       0
  2474 ;;      Totals:         0       3       0       0
  2475 ;;Total ram usage:        3 bytes
  2476 ;; Hardware stack levels used:    1
  2477 ;; Hardware stack levels required when called:    9
  2478 ;; This function calls:
  2479 ;;		_Mrf49TxCmd
  2480 ;;		_Mrf49xaModeRx
  2481 ;;		_Mrf49xaTick
  2482 ;; This function is called by:
  2483 ;;		_main
  2484 ;; This function uses a non-reentrant model
  2485 ;;
  2486                           
  2487                           
  2488                           ;psect for function _Mrf49xaInit
  2489  006F                     _Mrf49xaInit:	
  2490                           
  2491                           ;mrf49xa.c: 247: UI08_t i, j, k;
  2492                           ;mrf49xa.c: 248: for (k = 0; k < mrfRegset_InitCnt; k++) { if (mrfRegset_Init[k].reg == 
      +                          0x55) { for (i = 0; i < 12; i++) { for (j = 0; j < 250; j++) { asm ("nop"); } }; } else 
      +                          { Mrf49TxCmd(mrfRegset_Init[k].reg, mrfRegset_Init[k].val); } };
  2493                           
  2494                           ;incstack = 0
  2495                           ; Regs used in _Mrf49xaInit: [allreg]
  2496  006F  0020               	movlb	0	; select bank0
  2497  0070  304D               	movlw	low (_mrfRegset_InitCnt| (0+32768))
  2498  0071  01A8               	clrf	Mrf49xaInit@k
  2499  0072  3183               	movlp	high __stringtab
  2500  0073  000A               	callw
  2501  0074  3180               	pagesel	$	;select current page
  2502  0075  3800               	iorlw	0
  2503  0076  1903               	btfsc	3,2
  2504  0077  28A4               	goto	l1559
  2505  0078                     l1531:	
  2506  0078  3528               	lslf	Mrf49xaInit@k,w
  2507  0079  3E50               	addlw	low (_mrfRegset_Init| (0+32768))
  2508  007A  3183               	movlp	high __stringtab
  2509  007B  000A               	callw
  2510  007C  3180               	pagesel	$	;select current page
  2511  007D  3A55               	xorlw	85
  2512  007E  1D03               	skipz
  2513  007F  288F               	goto	l1553
  2514  0080  01A6               	clrf	Mrf49xaInit@i
  2515  0081                     l1539:	
  2516  0081  01A7               	clrf	Mrf49xaInit@j
  2517  0082                     l219:	
  2518  0082  0000               	nop	;# 
  2519  0083  0020               	movlb	0	; select bank0
  2520  0084  30FA               	movlw	250
  2521  0085  0AA7               	incf	Mrf49xaInit@j,f
  2522  0086  0227               	subwf	Mrf49xaInit@j,w
  2523  0087  1C03               	skipc
  2524  0088  2882               	goto	l219
  2525  0089  300C               	movlw	12
  2526  008A  0AA6               	incf	Mrf49xaInit@i,f
  2527  008B  0226               	subwf	Mrf49xaInit@i,w
  2528  008C  1803               	btfsc	3,0
  2529  008D  289B               	goto	l1555
  2530  008E  2881               	goto	l1539
  2531  008F                     l1553:	
  2532  008F  3528               	lslf	Mrf49xaInit@k,w
  2533  0090  3E51               	addlw	low ((_mrfRegset_Init| (0+32768)+1))
  2534  0091  3183               	movlp	high __stringtab
  2535  0092  000A               	callw
  2536  0093  3180               	pagesel	$	;select current page
  2537  0094  00A1               	movwf	Mrf49TxCmd@val
  2538  0095  3528               	lslf	Mrf49xaInit@k,w
  2539  0096  3E50               	addlw	low (_mrfRegset_Init| (0+32768))
  2540  0097  3183               	movlp	high __stringtab
  2541  0098  000A               	callw
  2542  0099  3180               	pagesel	$	;select current page
  2543  009A  2150               	fcall	_Mrf49TxCmd
  2544  009B                     l1555:	
  2545  009B  0020               	movlb	0	; select bank0
  2546  009C  304D               	movlw	low (_mrfRegset_InitCnt| (0+32768))
  2547  009D  0AA8               	incf	Mrf49xaInit@k,f
  2548  009E  3183               	movlp	high __stringtab
  2549  009F  000A               	callw
  2550  00A0  3180               	pagesel	$	;select current page
  2551  00A1  0228               	subwf	Mrf49xaInit@k,w
  2552  00A2  1C03               	skipc
  2553  00A3  2878               	goto	l1531
  2554  00A4                     l1559:	
  2555                           
  2556                           ;mrf49xa.c: 250: Mrf49xaModeRx();
  2557  00A4  2127  3180         	fcall	_Mrf49xaModeRx
  2558  00A6                     l1563:	
  2559                           ;mrf49xa.c: 252: while(PORTAbits.RA2 == 0)
  2560                           
  2561  00A6  0020               	movlb	0	; select bank0
  2562  00A7  190C               	btfsc	12,2	;volatile
  2563  00A8  0008               	return
  2564                           
  2565                           ;mrf49xa.c: 253: Mrf49xaTick();
  2566  00A9  20AC  3180         	fcall	_Mrf49xaTick
  2567  00AB  28A6               	goto	l1563
  2568  00AC                     __end_of_Mrf49xaInit:	
  2569  00AC                     __ptext3:	
  2570 ;; *************** function _Mrf49xaTick *****************
  2571 ;; Defined at:
  2572 ;;		line 82 in file "../../../src/devices/mrf49xa.c"
  2573 ;; Parameters:    Size  Location     Type
  2574 ;;		None
  2575 ;; Auto vars:     Size  Location     Type
  2576 ;;  data            1    5[BANK0 ] unsigned char 
  2577 ;; Return value:  Size  Location     Type
  2578 ;;                  1    wreg      unsigned char 
  2579 ;; Registers used:
  2580 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  2581 ;; Tracked objects:
  2582 ;;		On entry : 1D/0
  2583 ;;		On exit  : 1F/0
  2584 ;;		Unchanged: 0/0
  2585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2586 ;;      Params:         0       0       0       0
  2587 ;;      Locals:         0       1       0       0
  2588 ;;      Temps:          0       1       0       0
  2589 ;;      Totals:         0       2       0       0
  2590 ;;Total ram usage:        2 bytes
  2591 ;; Hardware stack levels used:    1
  2592 ;; Hardware stack levels required when called:    8
  2593 ;; This function calls:
  2594 ;;		_Mrf49RxByte
  2595 ;;		_Mrf49RxSts
  2596 ;;		_Mrf49xaModeRx
  2597 ;; This function is called by:
  2598 ;;		_Mrf49xaInit
  2599 ;; This function uses a non-reentrant model
  2600 ;;
  2601                           
  2602                           
  2603                           ;psect for function _Mrf49xaTick
  2604  00AC                     _Mrf49xaTick:	
  2605                           
  2606                           ;mrf49xa.c: 84: unsigned char data;
  2607                           ;mrf49xa.c: 90: if (PORTAbits.RA2 == 0)
  2608                           
  2609                           ;incstack = 0
  2610                           ; Regs used in _Mrf49xaTick: [allreg]
  2611  00AC  0020               	movlb	0	; select bank0
  2612  00AD  190C               	btfsc	12,2	;volatile
  2613  00AE  28B1               	goto	l177
  2614                           
  2615                           ;mrf49xa.c: 91: Mrf49RxSts();
  2616  00AF  21AE  3180         	fcall	_Mrf49RxSts
  2617  00B1                     l177:	
  2618                           ;mrf49xa.c: 95: {
  2619                           
  2620                           
  2621                           ;mrf49xa.c: 97: }
  2622                           ;mrf49xa.c: 100: if (mrf49Status.flags.msb.overflow == 1)
  2623  00B1  0020               	movlb	0	; select bank0
  2624  00B2  1AAB               	btfsc	_mrf49Status,5
  2625  00B3  28BE               	goto	l1431
  2626  00B4  28C9               	goto	l178
  2627  00B5                     l1427:	
  2628                           
  2629                           ;mrf49xa.c: 105: case RECV_DATA:
  2630                           ;mrf49xa.c: 106: case RECV_TIMEOUT:
  2631                           ;mrf49xa.c: 109: data = Mrf49RxByte();
  2632  00B5  2125  3180         	fcall	_Mrf49RxByte
  2633  00B7  00A5               	movwf	Mrf49xaTick@data
  2634                           
  2635                           ;mrf49xa.c: 110: data = Mrf49RxByte();
  2636  00B8  2125  3180         	fcall	_Mrf49RxByte
  2637  00BA  00A5               	movwf	Mrf49xaTick@data
  2638                           
  2639                           ;mrf49xa.c: 113: Mrf49xaModeRx();
  2640  00BB  2127  3180         	fcall	_Mrf49xaModeRx
  2641                           
  2642                           ;mrf49xa.c: 117: break;
  2643  00BD  28C9               	goto	l178
  2644  00BE                     l1431:	
  2645  00BE  0021               	movlb	1	; select bank1
  2646  00BF  0820               	movf	_rfTrcvStatus^(0+128),w
  2647                           
  2648                           ; Switch size 1, requested type "speed"
  2649                           ; Number of cases is 4, Range of values is 0 to 3
  2650                           ; switch strategies available:
  2651                           ; Name         Instructions Cycles
  2652                           ; direct_byte           14     6 (fixed)
  2653                           ; simple_byte           13     7 (average)
  2654                           ; jumptable            260     6 (fixed)
  2655                           ;	Chosen strategy is direct_byte
  2656  00C0  0084               	movwf	4
  2657  00C1  3004               	movlw	4
  2658  00C2  0204               	subwf	4,w
  2659  00C3  1803               	skipnc
  2660  00C4  28C9               	goto	l178
  2661  00C5  3183               	movlp	high S1895
  2662  00C6  3504               	lslf	4,w
  2663  00C7  3E84               	addlw	low S1895
  2664  00C8  0082               	movwf	2
  2665  00C9                     l178:	
  2666                           
  2667                           ;mrf49xa.c: 125: }
  2668                           ;mrf49xa.c: 140: if (mrf49Status.flags.msb.fifoTxRx == 1)
  2669  00C9  0020               	movlb	0	; select bank0
  2670  00CA  1BAB               	btfsc	_mrf49Status,7
  2671  00CB  2917               	goto	l1483
  2672  00CC  2920               	goto	l1485
  2673  00CD                     l1435:	
  2674                           
  2675                           ;mrf49xa.c: 146: data = Mrf49RxByte();
  2676  00CD  2125  3180         	fcall	_Mrf49RxByte
  2677  00CF  00A5               	movwf	Mrf49xaTick@data
  2678                           
  2679                           ;mrf49xa.c: 149: if (mrf49Status.flags.lsb.dataQualityOK == 0)
  2680  00D0  1FAC               	btfss	_mrf49Status+1,7
  2681  00D1  2920               	goto	l1485
  2682                           
  2683                           ;mrf49xa.c: 152: if (rfTrcvStatus.rxPacket[0].state == PKT_FREE) rfTrcvStatus.hwRx = &(r
      +                          fTrcvStatus.rxPacket[0]);
  2684  00D2  0021               	movlb	1	; select bank1
  2685  00D3  08B7               	movf	(_rfTrcvStatus^(0+128)+23),f
  2686  00D4  1D03               	skipz
  2687  00D5  28D8               	goto	l1445
  2688  00D6  30B7               	movlw	(_rfTrcvStatus+23)& (0+255)
  2689  00D7  28DC               	goto	L1
  2690  00D8                     l1445:	
  2691                           
  2692                           ;mrf49xa.c: 153: else if (rfTrcvStatus.rxPacket[1].state == PKT_FREE) rfTrcvStatus.hwRx 
      +                          = &(rfTrcvStatus.rxPacket[1]);
  2693  00D8  08CD               	movf	(_rfTrcvStatus^(0+128)+45),f
  2694  00D9  1D03               	skipz
  2695  00DA  2920               	goto	l1485
  2696  00DB  30CD               	movlw	(_rfTrcvStatus+45)& (0+255)
  2697  00DC                     L1:	
  2698  00DC  00E3               	movwf	(_rfTrcvStatus+67)^(0+128)
  2699                           
  2700                           ;mrf49xa.c: 158: }
  2701                           ;mrf49xa.c: 159: rfTrcvStatus.hwRx->packet.size = data;
  2702  00DD  0A63               	incf	(_rfTrcvStatus+67)^(0+128),w
  2703  00DE  0086               	movwf	6
  2704  00DF  0187               	clrf	7
  2705  00E0  0020               	movlb	0	; select bank0
  2706  00E1  0825               	movf	Mrf49xaTick@data,w
  2707  00E2  0081               	movwf	1
  2708                           
  2709                           ;mrf49xa.c: 160: rfTrcvStatus.hwRx->crc = 0;
  2710  00E3  0021               	movlb	1	; select bank1
  2711  00E4  0863               	movf	(_rfTrcvStatus+67)^(0+128),w
  2712  00E5  3E15               	addlw	21
  2713  00E6  0086               	movwf	6
  2714  00E7  0181               	clrf	1
  2715                           
  2716                           ;mrf49xa.c: 161: rfTrcvStatus.hwRx->state = PKT_HW_BUSY_RX;
  2717  00E8  0863               	movf	(_rfTrcvStatus+67)^(0+128),w
  2718  00E9  0086               	movwf	6
  2719  00EA  3002               	movlw	2
  2720  00EB  0081               	movwf	1
  2721                           
  2722                           ;mrf49xa.c: 163: rfTrcvStatus.state = RECV_DATA;
  2723  00EC  01A0               	clrf	_rfTrcvStatus^(0+128)
  2724  00ED  0AA0               	incf	_rfTrcvStatus^(0+128),f
  2725                           
  2726                           ;mrf49xa.c: 164: rfTrcvStatus.hwRxByte = 1;
  2727  00EE  01E4               	clrf	(_rfTrcvStatus^(0+128)+68)
  2728  00EF  0AE4               	incf	(_rfTrcvStatus^(0+128)+68),f
  2729                           
  2730                           ;mrf49xa.c: 166: break;
  2731  00F0  2920               	goto	l1485
  2732  00F1                     l1459:	
  2733                           
  2734                           ;mrf49xa.c: 170: data = Mrf49RxByte();
  2735  00F1  2125  3180         	fcall	_Mrf49RxByte
  2736  00F3  00A5               	movwf	Mrf49xaTick@data
  2737                           
  2738                           ;mrf49xa.c: 173: if (mrf49Status.flags.lsb.dataQualityOK == 0)
  2739  00F4  1FAC               	btfss	_mrf49Status+1,7
  2740  00F5  2920               	goto	l1485
  2741                           
  2742                           ;mrf49xa.c: 176: rfTrcvStatus.hwRx->raw[rfTrcvStatus.hwRxByte++] = data;
  2743  00F6  0021               	movlb	1	; select bank1
  2744  00F7  0864               	movf	(_rfTrcvStatus^(0+128)+68),w
  2745  00F8  0763               	addwf	(_rfTrcvStatus+67)^(0+128),w
  2746  00F9  0020               	movlb	0	; select bank0
  2747  00FA  00A4               	movwf	??_Mrf49xaTick
  2748  00FB  0A24               	incf	??_Mrf49xaTick,w
  2749  00FC  0086               	movwf	6
  2750  00FD  0187               	clrf	7
  2751  00FE  0825               	movf	Mrf49xaTick@data,w
  2752  00FF  0081               	movwf	1
  2753  0100  0021               	movlb	1	; select bank1
  2754  0101  0AE4               	incf	(_rfTrcvStatus^(0+128)+68),f
  2755                           
  2756                           ;mrf49xa.c: 178: if (rfTrcvStatus.hwRxByte == rfTrcvStatus.hwRx->packet.size ||
  2757                           ;mrf49xa.c: 179: rfTrcvStatus.hwRxByte == 16)
  2758  0102  0A63               	incf	(_rfTrcvStatus+67)^(0+128),w
  2759  0103  0086               	movwf	6
  2760  0104  0864               	movf	(_rfTrcvStatus^(0+128)+68),w
  2761  0105  0601               	xorwf	1,w
  2762  0106  1903               	skipnz
  2763  0107  290C               	goto	l1471
  2764  0108  0864               	movf	(_rfTrcvStatus^(0+128)+68),w
  2765  0109  3A10               	xorlw	16
  2766  010A  1D03               	skipz
  2767  010B  2920               	goto	l1485
  2768  010C                     l1471:	
  2769                           
  2770                           ;mrf49xa.c: 180: {
  2771                           ;mrf49xa.c: 181: rfTrcvStatus.state = RECV_IDLE;
  2772  010C  01A0               	clrf	_rfTrcvStatus^(0+128)
  2773                           
  2774                           ;mrf49xa.c: 182: rfTrcvStatus.hwRx->state = PKT_FREE;
  2775  010D  0863               	movf	(_rfTrcvStatus+67)^(0+128),w
  2776  010E  0086               	movwf	6
  2777  010F  0187               	clrf	7
  2778  0110  0181               	clrf	1
  2779                           
  2780                           ;mrf49xa.c: 185: LATCbits.LATC2 = 1;
  2781  0111  0022               	movlb	2	; select bank2
  2782  0112  150E               	bsf	14,2	;volatile
  2783                           
  2784                           ;mrf49xa.c: 186: LATCbits.LATC2 = 0;
  2785  0113  110E               	bcf	14,2	;volatile
  2786                           
  2787                           ;mrf49xa.c: 189: Mrf49xaModeRx();
  2788  0114  2127  3180         	fcall	_Mrf49xaModeRx
  2789  0116  2920               	goto	l1485
  2790  0117                     l1483:	
  2791  0117  0021               	movlb	1	; select bank1
  2792  0118  0820               	movf	_rfTrcvStatus^(0+128),w
  2793                           
  2794                           ; Switch size 1, requested type "speed"
  2795                           ; Number of cases is 2, Range of values is 0 to 1
  2796                           ; switch strategies available:
  2797                           ; Name         Instructions Cycles
  2798                           ; simple_byte            7     4 (average)
  2799                           ; direct_byte           10     6 (fixed)
  2800                           ; jumptable            260     6 (fixed)
  2801                           ;	Chosen strategy is simple_byte
  2802  0119  3A00               	xorlw	0	; case 0
  2803  011A  1903               	skipnz
  2804  011B  28CD               	goto	l1435
  2805  011C  3A01               	xorlw	1	; case 1
  2806  011D  1903               	skipnz
  2807  011E  28F1               	goto	l1459
  2808  011F  2920               	goto	l1485
  2809  0120                     l1485:	
  2810                           
  2811                           ;mrf49xa.c: 195: }
  2812                           ;mrf49xa.c: 197: return PORTAbits.RA2 == 1 ? 1 : 0;
  2813  0120  0020               	movlb	0	; select bank0
  2814  0121  0C0C               	rrf	12,w	;volatile
  2815  0122  0C89               	rrf	9,f
  2816  0123  3901               	andlw	1
  2817  0124  0008               	return
  2818  0125                     __end_of_Mrf49xaTick:	
  2819  0125                     __ptext7:	
  2820 ;; *************** function _Mrf49RxByte *****************
  2821 ;; Defined at:
  2822 ;;		line 39 in file "../../../src/devices/mrf49xa_cmd.c"
  2823 ;; Parameters:    Size  Location     Type
  2824 ;;		None
  2825 ;; Auto vars:     Size  Location     Type
  2826 ;;		None
  2827 ;; Return value:  Size  Location     Type
  2828 ;;                  1    wreg      unsigned char 
  2829 ;; Registers used:
  2830 ;;		wreg, status,2, status,0, pclath, cstack
  2831 ;; Tracked objects:
  2832 ;;		On entry : 1E/1
  2833 ;;		On exit  : 1F/0
  2834 ;;		Unchanged: 0/0
  2835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2836 ;;      Params:         0       0       0       0
  2837 ;;      Locals:         0       0       0       0
  2838 ;;      Temps:          0       0       0       0
  2839 ;;      Totals:         0       0       0       0
  2840 ;;Total ram usage:        0 bytes
  2841 ;; Hardware stack levels used:    1
  2842 ;; Hardware stack levels required when called:    7
  2843 ;; This function calls:
  2844 ;;		_Mrf49RxCmd
  2845 ;; This function is called by:
  2846 ;;		_Mrf49xaTick
  2847 ;; This function uses a non-reentrant model
  2848 ;;
  2849                           
  2850                           
  2851                           ;psect for function _Mrf49RxByte
  2852  0125                     _Mrf49RxByte:	
  2853                           
  2854                           ;mrf49xa_cmd.c: 41: return Mrf49RxCmd(0xB0);
  2855                           
  2856                           ;incstack = 0
  2857                           ; Regs used in _Mrf49RxByte: [wreg+status,2+status,0+pclath+cstack]
  2858  0125  30B0               	movlw	176
  2859  0126  2860               	ljmp	_Mrf49RxCmd
  2860  0127                     __end_of_Mrf49RxByte:	
  2861  0127                     __ptext4:	
  2862 ;; *************** function _Mrf49xaModeRx *****************
  2863 ;; Defined at:
  2864 ;;		line 200 in file "../../../src/devices/mrf49xa.c"
  2865 ;; Parameters:    Size  Location     Type
  2866 ;;		None
  2867 ;; Auto vars:     Size  Location     Type
  2868 ;;  k               1    3[BANK0 ] unsigned char 
  2869 ;; Return value:  Size  Location     Type
  2870 ;;		None               void
  2871 ;; Registers used:
  2872 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  2873 ;; Tracked objects:
  2874 ;;		On entry : 1D/0
  2875 ;;		On exit  : 1F/1
  2876 ;;		Unchanged: 0/0
  2877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2878 ;;      Params:         0       0       0       0
  2879 ;;      Locals:         0       1       0       0
  2880 ;;      Temps:          0       0       0       0
  2881 ;;      Totals:         0       1       0       0
  2882 ;;Total ram usage:        1 bytes
  2883 ;; Hardware stack levels used:    1
  2884 ;; Hardware stack levels required when called:    7
  2885 ;; This function calls:
  2886 ;;		_Mrf49TxCmd
  2887 ;; This function is called by:
  2888 ;;		_Mrf49xaTick
  2889 ;;		_Mrf49xaInit
  2890 ;; This function uses a non-reentrant model
  2891 ;;
  2892                           
  2893                           
  2894                           ;psect for function _Mrf49xaModeRx
  2895  0127                     _Mrf49xaModeRx:	
  2896                           
  2897                           ;mrf49xa.c: 202: UI08_t k;
  2898                           ;mrf49xa.c: 203: for (k = 0; k < mrfRegset_RxCnt; k++) { if (mrfRegset_Rx[k].reg != 0x55
      +                          ) Mrf49TxCmd(mrfRegset_Rx[k].reg, mrfRegset_Rx[k].val); };
  2899                           
  2900                           ;incstack = 0
  2901                           ; Regs used in _Mrf49xaModeRx: [allreg]
  2902  0127  0020               	movlb	0	; select bank0
  2903  0128  304E               	movlw	low (_mrfRegset_RxCnt| (0+32768))
  2904  0129  01A3               	clrf	Mrf49xaModeRx@k
  2905  012A  3183               	movlp	high __stringtab
  2906  012B  000A               	callw
  2907  012C  3180               	pagesel	$	;select current page
  2908  012D  3800               	iorlw	0
  2909  012E  1903               	btfsc	3,2
  2910  012F  294D               	goto	l1517
  2911  0130                     l1509:	
  2912  0130  3523               	lslf	Mrf49xaModeRx@k,w
  2913  0131  3E70               	addlw	low (_mrfRegset_Rx| (0+32768))
  2914  0132  3183               	movlp	high __stringtab
  2915  0133  000A               	callw
  2916  0134  3180               	pagesel	$	;select current page
  2917  0135  3A55               	xorlw	85
  2918  0136  1903               	skipnz
  2919  0137  2944               	goto	l1513
  2920  0138  3523               	lslf	Mrf49xaModeRx@k,w
  2921  0139  3E71               	addlw	low ((_mrfRegset_Rx| (0+32768)+1))
  2922  013A  3183               	movlp	high __stringtab
  2923  013B  000A               	callw
  2924  013C  3180               	pagesel	$	;select current page
  2925  013D  00A1               	movwf	Mrf49TxCmd@val
  2926  013E  3523               	lslf	Mrf49xaModeRx@k,w
  2927  013F  3E70               	addlw	low (_mrfRegset_Rx| (0+32768))
  2928  0140  3183               	movlp	high __stringtab
  2929  0141  000A               	callw
  2930  0142  3180               	pagesel	$	;select current page
  2931  0143  2150               	fcall	_Mrf49TxCmd
  2932  0144                     l1513:	
  2933  0144  0020               	movlb	0	; select bank0
  2934  0145  304E               	movlw	low (_mrfRegset_RxCnt| (0+32768))
  2935  0146  0AA3               	incf	Mrf49xaModeRx@k,f
  2936  0147  3183               	movlp	high __stringtab
  2937  0148  000A               	callw
  2938  0149  3180               	pagesel	$	;select current page
  2939  014A  0223               	subwf	Mrf49xaModeRx@k,w
  2940  014B  1C03               	skipc
  2941  014C  2930               	goto	l1509
  2942  014D                     l1517:	
  2943                           
  2944                           ;mrf49xa.c: 205: rfTrcvStatus.state = RECV_IDLE;
  2945  014D  0021               	movlb	1	; select bank1
  2946  014E  01A0               	clrf	_rfTrcvStatus^(0+128)
  2947  014F  0008               	return
  2948  0150                     __end_of_Mrf49xaModeRx:	
  2949  0150                     __ptext5:	
  2950 ;; *************** function _Mrf49TxCmd *****************
  2951 ;; Defined at:
  2952 ;;		line 6 in file "../../../src/devices/mrf49xa_cmd.c"
  2953 ;; Parameters:    Size  Location     Type
  2954 ;;  cmd             1    wreg     unsigned char 
  2955 ;;  val             1    1[BANK0 ] unsigned char 
  2956 ;; Auto vars:     Size  Location     Type
  2957 ;;  cmd             1    2[BANK0 ] unsigned char 
  2958 ;; Return value:  Size  Location     Type
  2959 ;;		None               void
  2960 ;; Registers used:
  2961 ;;		wreg, status,2, status,0, pclath, cstack
  2962 ;; Tracked objects:
  2963 ;;		On entry : 1F/0
  2964 ;;		On exit  : 1F/2
  2965 ;;		Unchanged: 0/0
  2966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2967 ;;      Params:         0       1       0       0
  2968 ;;      Locals:         0       1       0       0
  2969 ;;      Temps:          0       0       0       0
  2970 ;;      Totals:         0       2       0       0
  2971 ;;Total ram usage:        2 bytes
  2972 ;; Hardware stack levels used:    1
  2973 ;; Hardware stack levels required when called:    6
  2974 ;; This function calls:
  2975 ;;		_Mrf49SpiTx
  2976 ;; This function is called by:
  2977 ;;		_Mrf49xaModeRx
  2978 ;;		_Mrf49xaInit
  2979 ;; This function uses a non-reentrant model
  2980 ;;
  2981                           
  2982                           
  2983                           ;psect for function _Mrf49TxCmd
  2984  0150                     _Mrf49TxCmd:	
  2985                           
  2986                           ;incstack = 0
  2987                           ; Regs used in _Mrf49TxCmd: [wreg+status,2+status,0+pclath+cstack]
  2988                           ;Mrf49TxCmd@cmd stored from wreg
  2989  0150  00A2               	movwf	Mrf49TxCmd@cmd
  2990                           
  2991                           ;mrf49xa_cmd.c: 8: LATCbits.LATC6 = 0;;
  2992  0151  0022               	movlb	2	; select bank2
  2993  0152  130E               	bcf	14,6	;volatile
  2994                           
  2995                           ;mrf49xa_cmd.c: 10: Mrf49SpiTx(cmd);
  2996  0153  0020               	movlb	0	; select bank0
  2997  0154  0822               	movf	Mrf49TxCmd@cmd,w
  2998  0155  215C  3180         	fcall	_Mrf49SpiTx
  2999                           
  3000                           ;mrf49xa_cmd.c: 11: Mrf49SpiTx(val);
  3001  0157  0020               	movlb	0	; select bank0
  3002  0158  0821               	movf	Mrf49TxCmd@val,w
  3003  0159  215C               	fcall	_Mrf49SpiTx
  3004                           
  3005                           ;mrf49xa_cmd.c: 13: LATCbits.LATC6 = 1;;
  3006  015A  170E               	bsf	14,6	;volatile
  3007  015B  0008               	return
  3008  015C                     __end_of_Mrf49TxCmd:	
  3009  015C                     __ptext9:	
  3010 ;; *************** function _Mrf49SpiTx *****************
  3011 ;; Defined at:
  3012 ;;		line 3 in file "../../../src/devices/mrf49xa_spi_pic16.c"
  3013 ;; Parameters:    Size  Location     Type
  3014 ;;  byte            1    wreg     unsigned char 
  3015 ;; Auto vars:     Size  Location     Type
  3016 ;;  byte            1    0[BANK0 ] unsigned char 
  3017 ;; Return value:  Size  Location     Type
  3018 ;;		None               void
  3019 ;; Registers used:
  3020 ;;		wreg
  3021 ;; Tracked objects:
  3022 ;;		On entry : 1F/0
  3023 ;;		On exit  : 1F/2
  3024 ;;		Unchanged: 0/0
  3025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3026 ;;      Params:         0       0       0       0
  3027 ;;      Locals:         0       1       0       0
  3028 ;;      Temps:          0       0       0       0
  3029 ;;      Totals:         0       1       0       0
  3030 ;;Total ram usage:        1 bytes
  3031 ;; Hardware stack levels used:    1
  3032 ;; Hardware stack levels required when called:    5
  3033 ;; This function calls:
  3034 ;;		Nothing
  3035 ;; This function is called by:
  3036 ;;		_Mrf49TxCmd
  3037 ;;		_Mrf49RxCmd
  3038 ;; This function uses a non-reentrant model
  3039 ;;
  3040                           
  3041                           
  3042                           ;psect for function _Mrf49SpiTx
  3043  015C                     _Mrf49SpiTx:	
  3044                           
  3045                           ;incstack = 0
  3046                           ; Regs used in _Mrf49SpiTx: [wreg]
  3047                           ;Mrf49SpiTx@byte stored from wreg
  3048  015C  00A0               	movwf	Mrf49SpiTx@byte
  3049                           
  3050                           ;mrf49xa_spi_pic16.c: 9: do { if ((byte & (1<<7)) != 0) LATBbits.LATB7 = 1; else LATBbit
      +                          s.LATB7 = 0; LATCbits.LATC7 = 1; LATCbits.LATC7 = 0; } while (0);;
  3051  015D  1FA0               	btfss	Mrf49SpiTx@byte,7
  3052  015E  2962               	goto	l235
  3053  015F  0022               	movlb	2	; select bank2
  3054  0160  178D               	bsf	13,7	;volatile
  3055  0161  2964               	goto	l236
  3056  0162                     l235:	
  3057  0162  0022               	movlb	2	; select bank2
  3058  0163  138D               	bcf	13,7	;volatile
  3059  0164                     l236:	
  3060  0164  178E               	bsf	14,7	;volatile
  3061  0165  138E               	bcf	14,7	;volatile
  3062  0166  0020               	movlb	0	; select bank0
  3063  0167  1F20               	btfss	Mrf49SpiTx@byte,6
  3064  0168  296C               	goto	l239
  3065  0169  0022               	movlb	2	; select bank2
  3066  016A  178D               	bsf	13,7	;volatile
  3067  016B  296E               	goto	l240
  3068  016C                     l239:	
  3069  016C  0022               	movlb	2	; select bank2
  3070  016D  138D               	bcf	13,7	;volatile
  3071  016E                     l240:	
  3072  016E  178E               	bsf	14,7	;volatile
  3073  016F  138E               	bcf	14,7	;volatile
  3074  0170  0020               	movlb	0	; select bank0
  3075  0171  1EA0               	btfss	Mrf49SpiTx@byte,5
  3076  0172  2976               	goto	l243
  3077  0173  0022               	movlb	2	; select bank2
  3078  0174  178D               	bsf	13,7	;volatile
  3079  0175  2978               	goto	l244
  3080  0176                     l243:	
  3081  0176  0022               	movlb	2	; select bank2
  3082  0177  138D               	bcf	13,7	;volatile
  3083  0178                     l244:	
  3084  0178  178E               	bsf	14,7	;volatile
  3085  0179  138E               	bcf	14,7	;volatile
  3086  017A  0020               	movlb	0	; select bank0
  3087  017B  1E20               	btfss	Mrf49SpiTx@byte,4
  3088  017C  2980               	goto	l247
  3089  017D  0022               	movlb	2	; select bank2
  3090  017E  178D               	bsf	13,7	;volatile
  3091  017F  2982               	goto	l248
  3092  0180                     l247:	
  3093  0180  0022               	movlb	2	; select bank2
  3094  0181  138D               	bcf	13,7	;volatile
  3095  0182                     l248:	
  3096  0182  178E               	bsf	14,7	;volatile
  3097  0183  138E               	bcf	14,7	;volatile
  3098  0184  0020               	movlb	0	; select bank0
  3099  0185  1DA0               	btfss	Mrf49SpiTx@byte,3
  3100  0186  298A               	goto	l251
  3101  0187  0022               	movlb	2	; select bank2
  3102  0188  178D               	bsf	13,7	;volatile
  3103  0189  298C               	goto	l252
  3104  018A                     l251:	
  3105  018A  0022               	movlb	2	; select bank2
  3106  018B  138D               	bcf	13,7	;volatile
  3107  018C                     l252:	
  3108  018C  178E               	bsf	14,7	;volatile
  3109  018D  138E               	bcf	14,7	;volatile
  3110  018E  0020               	movlb	0	; select bank0
  3111  018F  1D20               	btfss	Mrf49SpiTx@byte,2
  3112  0190  2994               	goto	l255
  3113  0191  0022               	movlb	2	; select bank2
  3114  0192  178D               	bsf	13,7	;volatile
  3115  0193  2996               	goto	l256
  3116  0194                     l255:	
  3117  0194  0022               	movlb	2	; select bank2
  3118  0195  138D               	bcf	13,7	;volatile
  3119  0196                     l256:	
  3120  0196  178E               	bsf	14,7	;volatile
  3121  0197  138E               	bcf	14,7	;volatile
  3122  0198  0020               	movlb	0	; select bank0
  3123  0199  1CA0               	btfss	Mrf49SpiTx@byte,1
  3124  019A  299E               	goto	l259
  3125  019B  0022               	movlb	2	; select bank2
  3126  019C  178D               	bsf	13,7	;volatile
  3127  019D  29A0               	goto	l260
  3128  019E                     l259:	
  3129  019E  0022               	movlb	2	; select bank2
  3130  019F  138D               	bcf	13,7	;volatile
  3131  01A0                     l260:	
  3132  01A0  178E               	bsf	14,7	;volatile
  3133  01A1  138E               	bcf	14,7	;volatile
  3134  01A2  0020               	movlb	0	; select bank0
  3135  01A3  1C20               	btfss	Mrf49SpiTx@byte,0
  3136  01A4  29A8               	goto	l263
  3137  01A5  0022               	movlb	2	; select bank2
  3138  01A6  178D               	bsf	13,7	;volatile
  3139  01A7  29AA               	goto	l264
  3140  01A8                     l263:	
  3141  01A8  0022               	movlb	2	; select bank2
  3142  01A9  138D               	bcf	13,7	;volatile
  3143  01AA                     l264:	
  3144  01AA  178E               	bsf	14,7	;volatile
  3145  01AB  138E               	bcf	14,7	;volatile
  3146                           
  3147                           ;mrf49xa_spi_pic16.c: 17: LATBbits.LATB7 = 0;
  3148  01AC  138D               	bcf	13,7	;volatile
  3149  01AD  0008               	return
  3150  01AE                     __end_of_Mrf49SpiTx:	
  3151  01AE                     __ptext6:	
  3152 ;; *************** function _Mrf49RxSts *****************
  3153 ;; Defined at:
  3154 ;;		line 29 in file "../../../src/devices/mrf49xa_cmd.c"
  3155 ;; Parameters:    Size  Location     Type
  3156 ;;		None
  3157 ;; Auto vars:     Size  Location     Type
  3158 ;;		None
  3159 ;; Return value:  Size  Location     Type
  3160 ;;		None               void
  3161 ;; Registers used:
  3162 ;;		wreg, status,2, pclath, cstack
  3163 ;; Tracked objects:
  3164 ;;		On entry : 1F/0
  3165 ;;		On exit  : 1F/2
  3166 ;;		Unchanged: 0/0
  3167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3168 ;;      Params:         0       0       0       0
  3169 ;;      Locals:         0       0       0       0
  3170 ;;      Temps:          0       0       0       0
  3171 ;;      Totals:         0       0       0       0
  3172 ;;Total ram usage:        0 bytes
  3173 ;; Hardware stack levels used:    1
  3174 ;; Hardware stack levels required when called:    6
  3175 ;; This function calls:
  3176 ;;		_Mrf49SpiRx
  3177 ;; This function is called by:
  3178 ;;		_Mrf49xaTick
  3179 ;; This function uses a non-reentrant model
  3180 ;;
  3181                           
  3182                           
  3183                           ;psect for function _Mrf49RxSts
  3184  01AE                     _Mrf49RxSts:	
  3185                           
  3186                           ;mrf49xa_cmd.c: 31: LATCbits.LATC6 = 0;;
  3187                           
  3188                           ;incstack = 0
  3189                           ; Regs used in _Mrf49RxSts: [wreg+status,2+pclath+cstack]
  3190  01AE  0022               	movlb	2	; select bank2
  3191  01AF  130E               	bcf	14,6	;volatile
  3192                           
  3193                           ;mrf49xa_cmd.c: 33: mrf49Status.byte[0] = Mrf49SpiRx();
  3194  01B0  21B8  3180         	fcall	_Mrf49SpiRx
  3195  01B2  00AB               	movwf	_mrf49Status
  3196                           
  3197                           ;mrf49xa_cmd.c: 34: mrf49Status.byte[1] = Mrf49SpiRx();
  3198  01B3  21B8               	fcall	_Mrf49SpiRx
  3199  01B4  00AC               	movwf	_mrf49Status+1
  3200                           
  3201                           ;mrf49xa_cmd.c: 36: LATCbits.LATC6 = 1;;
  3202  01B5  0022               	movlb	2	; select bank2
  3203  01B6  170E               	bsf	14,6	;volatile
  3204  01B7  0008               	return
  3205  01B8                     __end_of_Mrf49RxSts:	
  3206  01B8                     __ptext10:	
  3207 ;; *************** function _Mrf49SpiRx *****************
  3208 ;; Defined at:
  3209 ;;		line 20 in file "../../../src/devices/mrf49xa_spi_pic16.c"
  3210 ;; Parameters:    Size  Location     Type
  3211 ;;		None
  3212 ;; Auto vars:     Size  Location     Type
  3213 ;;  data            1    0[BANK0 ] unsigned char 
  3214 ;; Return value:  Size  Location     Type
  3215 ;;                  1    wreg      unsigned char 
  3216 ;; Registers used:
  3217 ;;		wreg, status,2
  3218 ;; Tracked objects:
  3219 ;;		On entry : 1D/2
  3220 ;;		On exit  : 1F/0
  3221 ;;		Unchanged: 0/0
  3222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3223 ;;      Params:         0       0       0       0
  3224 ;;      Locals:         0       1       0       0
  3225 ;;      Temps:          0       0       0       0
  3226 ;;      Totals:         0       1       0       0
  3227 ;;Total ram usage:        1 bytes
  3228 ;; Hardware stack levels used:    1
  3229 ;; Hardware stack levels required when called:    5
  3230 ;; This function calls:
  3231 ;;		Nothing
  3232 ;; This function is called by:
  3233 ;;		_Mrf49RxCmd
  3234 ;;		_Mrf49RxSts
  3235 ;; This function uses a non-reentrant model
  3236 ;;
  3237                           
  3238                           
  3239                           ;psect for function _Mrf49SpiRx
  3240  01B8                     _Mrf49SpiRx:	
  3241                           
  3242                           ;mrf49xa_spi_pic16.c: 22: uint8_t data = 0;
  3243                           
  3244                           ;incstack = 0
  3245                           ; Regs used in _Mrf49SpiRx: [wreg+status,2]
  3246  01B8  0020               	movlb	0	; select bank0
  3247  01B9  01A0               	clrf	Mrf49SpiRx@data
  3248                           
  3249                           ;mrf49xa_spi_pic16.c: 23: LATBbits.LATB7 = 0;
  3250  01BA  0022               	movlb	2	; select bank2
  3251  01BB  138D               	bcf	13,7	;volatile
  3252  01BC  0020               	movlb	0	; select bank0
  3253  01BD  1A8E               	btfsc	14,5	;volatile
  3254  01BE  17A0               	bsf	Mrf49SpiRx@data,7
  3255  01BF  0022               	movlb	2	; select bank2
  3256  01C0  178E               	bsf	14,7	;volatile
  3257  01C1  138E               	bcf	14,7	;volatile
  3258                           
  3259                           ;mrf49xa_spi_pic16.c: 30: do { if (PORTCbits.RC5) data |= (1<<6); LATCbits.LATC7 = 1; LA
      +                          TCbits.LATC7 = 0; } while (0);;
  3260  01C2  0020               	movlb	0	; select bank0
  3261  01C3  1A8E               	btfsc	14,5	;volatile
  3262  01C4  1720               	bsf	Mrf49SpiRx@data,6
  3263  01C5  0022               	movlb	2	; select bank2
  3264  01C6  178E               	bsf	14,7	;volatile
  3265  01C7  138E               	bcf	14,7	;volatile
  3266                           
  3267                           ;mrf49xa_spi_pic16.c: 31: do { if (PORTCbits.RC5) data |= (1<<5); LATCbits.LATC7 = 1; LA
      +                          TCbits.LATC7 = 0; } while (0);;
  3268  01C8  0020               	movlb	0	; select bank0
  3269  01C9  1A8E               	btfsc	14,5	;volatile
  3270  01CA  16A0               	bsf	Mrf49SpiRx@data,5
  3271  01CB  0022               	movlb	2	; select bank2
  3272  01CC  178E               	bsf	14,7	;volatile
  3273  01CD  138E               	bcf	14,7	;volatile
  3274                           
  3275                           ;mrf49xa_spi_pic16.c: 32: do { if (PORTCbits.RC5) data |= (1<<4); LATCbits.LATC7 = 1; LA
      +                          TCbits.LATC7 = 0; } while (0);;
  3276  01CE  0020               	movlb	0	; select bank0
  3277  01CF  1A8E               	btfsc	14,5	;volatile
  3278  01D0  1620               	bsf	Mrf49SpiRx@data,4
  3279  01D1  0022               	movlb	2	; select bank2
  3280  01D2  178E               	bsf	14,7	;volatile
  3281  01D3  138E               	bcf	14,7	;volatile
  3282                           
  3283                           ;mrf49xa_spi_pic16.c: 33: do { if (PORTCbits.RC5) data |= (1<<3); LATCbits.LATC7 = 1; LA
      +                          TCbits.LATC7 = 0; } while (0);;
  3284  01D4  0020               	movlb	0	; select bank0
  3285  01D5  1A8E               	btfsc	14,5	;volatile
  3286  01D6  15A0               	bsf	Mrf49SpiRx@data,3
  3287  01D7  0022               	movlb	2	; select bank2
  3288  01D8  178E               	bsf	14,7	;volatile
  3289  01D9  138E               	bcf	14,7	;volatile
  3290                           
  3291                           ;mrf49xa_spi_pic16.c: 34: do { if (PORTCbits.RC5) data |= (1<<2); LATCbits.LATC7 = 1; LA
      +                          TCbits.LATC7 = 0; } while (0);;
  3292  01DA  0020               	movlb	0	; select bank0
  3293  01DB  1A8E               	btfsc	14,5	;volatile
  3294  01DC  1520               	bsf	Mrf49SpiRx@data,2
  3295  01DD  0022               	movlb	2	; select bank2
  3296  01DE  178E               	bsf	14,7	;volatile
  3297  01DF  138E               	bcf	14,7	;volatile
  3298                           
  3299                           ;mrf49xa_spi_pic16.c: 35: do { if (PORTCbits.RC5) data |= (1<<1); LATCbits.LATC7 = 1; LA
      +                          TCbits.LATC7 = 0; } while (0);;
  3300  01E0  0020               	movlb	0	; select bank0
  3301  01E1  1A8E               	btfsc	14,5	;volatile
  3302  01E2  14A0               	bsf	Mrf49SpiRx@data,1
  3303  01E3  0022               	movlb	2	; select bank2
  3304  01E4  178E               	bsf	14,7	;volatile
  3305  01E5  138E               	bcf	14,7	;volatile
  3306                           
  3307                           ;mrf49xa_spi_pic16.c: 36: do { if (PORTCbits.RC5) data |= (1<<0); LATCbits.LATC7 = 1; LA
      +                          TCbits.LATC7 = 0; } while (0);;
  3308  01E6  0020               	movlb	0	; select bank0
  3309  01E7  1A8E               	btfsc	14,5	;volatile
  3310  01E8  1420               	bsf	Mrf49SpiRx@data,0
  3311  01E9  0022               	movlb	2	; select bank2
  3312  01EA  178E               	bsf	14,7	;volatile
  3313  01EB  138E               	bcf	14,7	;volatile
  3314                           
  3315                           ;mrf49xa_spi_pic16.c: 38: return data;
  3316  01EC  0020               	movlb	0	; select bank0
  3317  01ED  0820               	movf	Mrf49SpiRx@data,w
  3318  01EE  0008               	return
  3319  01EF                     __end_of_Mrf49SpiRx:	
  3320  01EF                     __ptext1:	
  3321 ;; *************** function _SysInitGpio *****************
  3322 ;; Defined at:
  3323 ;;		line 10 in file "../../../src/node/main.c"
  3324 ;; Parameters:    Size  Location     Type
  3325 ;;		None
  3326 ;; Auto vars:     Size  Location     Type
  3327 ;;		None
  3328 ;; Return value:  Size  Location     Type
  3329 ;;		None               void
  3330 ;; Registers used:
  3331 ;;		None
  3332 ;; Tracked objects:
  3333 ;;		On entry : 17F/4
  3334 ;;		On exit  : 17F/2
  3335 ;;		Unchanged: 160/0
  3336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3337 ;;      Params:         0       0       0       0
  3338 ;;      Locals:         0       0       0       0
  3339 ;;      Temps:          0       0       0       0
  3340 ;;      Totals:         0       0       0       0
  3341 ;;Total ram usage:        0 bytes
  3342 ;; Hardware stack levels used:    1
  3343 ;; Hardware stack levels required when called:    5
  3344 ;; This function calls:
  3345 ;;		Nothing
  3346 ;; This function is called by:
  3347 ;;		_main
  3348 ;; This function uses a non-reentrant model
  3349 ;;
  3350                           
  3351                           
  3352                           ;psect for function _SysInitGpio
  3353  01EF                     _SysInitGpio:	
  3354                           
  3355                           ;incstack = 0
  3356                           ; Regs used in _SysInitGpio: []
  3357                           ;main.c: 12: do { TRISAbits.TRISA2 = 1; TRISAbits.TRISA4 = 0; TRISAbits.TRISA5 = 0; LATA
      +                          bits.LATA4 = 0; LATAbits.LATA5 = 0; } while(0);;
  3358  01EF  0021               	movlb	1	; select bank1
  3359  01F0  150C               	bsf	12,2	;volatile
  3360  01F1  120C               	bcf	12,4	;volatile
  3361  01F2  128C               	bcf	12,5	;volatile
  3362  01F3  0022               	movlb	2	; select bank2
  3363  01F4  120C               	bcf	12,4	;volatile
  3364  01F5  128C               	bcf	12,5	;volatile
  3365                           
  3366                           ;main.c: 13: do { TRISBbits.TRISB4 = 0; TRISBbits.TRISB6 = 0; TRISBbits.TRISB7 = 0; TRIS
      +                          Bbits.TRISB5 = 1; } while(0);;
  3367  01F6  0021               	movlb	1	; select bank1
  3368  01F7  120D               	bcf	13,4	;volatile
  3369  01F8  130D               	bcf	13,6	;volatile
  3370  01F9  138D               	bcf	13,7	;volatile
  3371  01FA  168D               	bsf	13,5	;volatile
  3372                           
  3373                           ;main.c: 14: do { TRISCbits.TRISC1 = 0; TRISCbits.TRISC2 = 0; TRISCbits.TRISC4 = 0; TRIS
      +                          Cbits.TRISC6 = 0; TRISCbits.TRISC7 = 0; TRISCbits.TRISC0 = 1; TRISCbits.TRISC3 = 1; TRIS
      +                          Cbits.TRISC5 = 1; LATCbits.LATC1 = 0; LATCbits.LATC2 = 0; LATCbits.LATC4 = 0; LATCbits.
  3374  01FB  108E               	bcf	14,1	;volatile
  3375  01FC  110E               	bcf	14,2	;volatile
  3376  01FD  120E               	bcf	14,4	;volatile
  3377  01FE  130E               	bcf	14,6	;volatile
  3378  01FF  138E               	bcf	14,7	;volatile
  3379  0200  140E               	bsf	14,0	;volatile
  3380  0201  158E               	bsf	14,3	;volatile
  3381  0202  168E               	bsf	14,5	;volatile
  3382  0203  0022               	movlb	2	; select bank2
  3383  0204  108E               	bcf	14,1	;volatile
  3384  0205  110E               	bcf	14,2	;volatile
  3385  0206  120E               	bcf	14,4	;volatile
  3386  0207  170E               	bsf	14,6	;volatile
  3387  0208  138E               	bcf	14,7	;volatile
  3388                           
  3389                           ;main.c: 16: LATCbits.LATC1 = 0;
  3390  0209  108E               	bcf	14,1	;volatile
  3391                           
  3392                           ;main.c: 17: LATCbits.LATC2 = 0;
  3393  020A  110E               	bcf	14,2	;volatile
  3394  020B  0008               	return
  3395  020C                     __end_of_SysInitGpio:	
  3396                           
  3397                           	psect	bssBANK0
  3398  002B                     __pbssBANK0:	
  3399  002B                     _mrf49Status:	
  3400  002B                     	ds	2
  3401                           
  3402                           	psect	bssBANK1
  3403  00A0                     __pbssBANK1:	
  3404  00A0                     _rfTrcvStatus:	
  3405  00A0                     	ds	69
  3406                           
  3407                           	psect	clrtext
  3408  0394                     clear_ram0:	
  3409                           ;	Called with FSR0 containing the base address, and
  3410                           ;	WREG with the size to clear
  3411                           
  3412  0394  0064               	clrwdt	;clear the watchdog before getting into this loop
  3413  0395                     clrloop0:	
  3414  0395  0180               	clrf	0	;clear RAM location pointed to by FSR
  3415  0396  3101               	addfsr 0,1
  3416  0397  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3417  0398  2B95               	goto	clrloop0	;have we reached the end yet?
  3418  0399  3400               	retlw	0	;all done for this memory range, return
  3419                           
  3420                           	psect	cstackCOMMON
  3421  0070                     __pcstackCOMMON:	
  3422  0070                     ?_Mrf49RxSts:	
  3423  0070                     ?_Mrf49xaModeRx:	
  3424                           ; 0 bytes @ 0x0
  3425                           
  3426  0070                     ?_AdcInit:	
  3427                           ; 0 bytes @ 0x0
  3428                           
  3429  0070                     ?_ExtIntInit:	
  3430                           ; 0 bytes @ 0x0
  3431                           
  3432  0070                     ?_extInt:	
  3433                           ; 0 bytes @ 0x0
  3434                           
  3435  0070                     ?_Mrf49xaInit:	
  3436                           ; 0 bytes @ 0x0
  3437                           
  3438  0070                     ?_Mrf49SpiTx:	
  3439                           ; 0 bytes @ 0x0
  3440                           
  3441  0070                     ?_SysInitGpio:	
  3442                           ; 0 bytes @ 0x0
  3443                           
  3444  0070                     ?_main:	
  3445                           ; 0 bytes @ 0x0
  3446                           
  3447  0070                     ?i1_Mrf49xaModeRx:	
  3448                           ; 0 bytes @ 0x0
  3449                           
  3450  0070                     ?i1_Mrf49SpiTx:	
  3451                           ; 0 bytes @ 0x0
  3452                           
  3453  0070                     ??i1_Mrf49SpiTx:	
  3454                           ; 0 bytes @ 0x0
  3455                           
  3456  0070                     ??i1_Mrf49SpiRx:	
  3457                           ; 0 bytes @ 0x0
  3458                           
  3459  0070                     ?i1_Mrf49RxSts:	
  3460                           ; 0 bytes @ 0x0
  3461                           
  3462  0070                     ?_Mrf49xaTick:	
  3463                           ; 0 bytes @ 0x0
  3464                           
  3465  0070                     ?_Mrf49RxByte:	
  3466                           ; 1 bytes @ 0x0
  3467                           
  3468  0070                     ?_Mrf49SpiRx:	
  3469                           ; 1 bytes @ 0x0
  3470                           
  3471  0070                     ?_Mrf49RxCmd:	
  3472                           ; 1 bytes @ 0x0
  3473                           
  3474  0070                     ?i1_Mrf49xaTick:	
  3475                           ; 1 bytes @ 0x0
  3476                           
  3477  0070                     ?i1_Mrf49SpiRx:	
  3478                           ; 1 bytes @ 0x0
  3479                           
  3480  0070                     ?i1_Mrf49RxCmd:	
  3481                           ; 1 bytes @ 0x0
  3482                           
  3483  0070                     ?i1_Mrf49RxByte:	
  3484                           ; 1 bytes @ 0x0
  3485                           
  3486  0070                     i1Mrf49SpiTx@byte:	
  3487                           ; 1 bytes @ 0x0
  3488                           
  3489  0070                     i1Mrf49SpiRx@data:	
  3490                           ; 1 bytes @ 0x0
  3491                           
  3492                           
  3493                           ; 1 bytes @ 0x0
  3494  0070                     	ds	1
  3495  0071                     ?i1_Mrf49TxCmd:	
  3496  0071                     ??i1_Mrf49RxCmd:	
  3497                           ; 0 bytes @ 0x1
  3498                           
  3499  0071                     ??i1_Mrf49RxSts:	
  3500                           ; 0 bytes @ 0x1
  3501                           
  3502  0071                     i1Mrf49TxCmd@val:	
  3503                           ; 0 bytes @ 0x1
  3504                           
  3505  0071                     i1Mrf49RxCmd@cmd:	
  3506                           ; 1 bytes @ 0x1
  3507                           
  3508                           
  3509                           ; 1 bytes @ 0x1
  3510  0071                     	ds	1
  3511  0072                     ??i1_Mrf49TxCmd:	
  3512  0072                     i1Mrf49TxCmd@cmd:	
  3513                           ; 0 bytes @ 0x2
  3514                           
  3515  0072                     i1Mrf49RxCmd@val:	
  3516                           ; 1 bytes @ 0x2
  3517                           
  3518                           
  3519                           ; 1 bytes @ 0x2
  3520  0072                     	ds	1
  3521  0073                     ??i1_Mrf49xaModeRx:	
  3522  0073                     ??i1_Mrf49RxByte:	
  3523                           ; 0 bytes @ 0x3
  3524                           
  3525  0073                     i1Mrf49xaModeRx@k:	
  3526                           ; 0 bytes @ 0x3
  3527                           
  3528                           
  3529                           ; 1 bytes @ 0x3
  3530  0073                     	ds	1
  3531  0074                     ??i1_Mrf49xaTick:	
  3532                           
  3533                           ; 0 bytes @ 0x4
  3534  0074                     	ds	1
  3535  0075                     i1Mrf49xaTick@data:	
  3536                           
  3537                           ; 1 bytes @ 0x5
  3538  0075                     	ds	1
  3539  0076                     ??_extInt:	
  3540                           
  3541                           ; 0 bytes @ 0x6
  3542  0076                     	ds	1
  3543  0077                     ??_Mrf49RxSts:	
  3544  0077                     ??_Mrf49RxByte:	
  3545                           ; 0 bytes @ 0x7
  3546                           
  3547  0077                     ??_Mrf49xaModeRx:	
  3548                           ; 0 bytes @ 0x7
  3549                           
  3550  0077                     ??_Mrf49TxCmd:	
  3551                           ; 0 bytes @ 0x7
  3552                           
  3553  0077                     ??_AdcInit:	
  3554                           ; 0 bytes @ 0x7
  3555                           
  3556  0077                     ??_ExtIntInit:	
  3557                           ; 0 bytes @ 0x7
  3558                           
  3559  0077                     ??_Mrf49xaInit:	
  3560                           ; 0 bytes @ 0x7
  3561                           
  3562  0077                     ??_Mrf49SpiTx:	
  3563                           ; 0 bytes @ 0x7
  3564                           
  3565  0077                     ??_Mrf49SpiRx:	
  3566                           ; 0 bytes @ 0x7
  3567                           
  3568  0077                     ??_Mrf49RxCmd:	
  3569                           ; 0 bytes @ 0x7
  3570                           
  3571  0077                     ??_SysInitGpio:	
  3572                           ; 0 bytes @ 0x7
  3573                           
  3574  0077                     ??_main:	
  3575                           ; 0 bytes @ 0x7
  3576                           
  3577                           
  3578                           	psect	cstackBANK0
  3579  0020                     __pcstackBANK0:	
  3580                           ; 0 bytes @ 0x7
  3581                           
  3582  0020                     Mrf49SpiTx@byte:	
  3583  0020                     Mrf49SpiRx@data:	
  3584                           ; 1 bytes @ 0x0
  3585                           
  3586                           
  3587                           ; 1 bytes @ 0x0
  3588  0020                     	ds	1
  3589  0021                     ?_Mrf49TxCmd:	
  3590  0021                     Mrf49TxCmd@val:	
  3591                           ; 0 bytes @ 0x1
  3592                           
  3593  0021                     Mrf49RxCmd@cmd:	
  3594                           ; 1 bytes @ 0x1
  3595                           
  3596                           
  3597                           ; 1 bytes @ 0x1
  3598  0021                     	ds	1
  3599  0022                     Mrf49TxCmd@cmd:	
  3600  0022                     Mrf49RxCmd@val:	
  3601                           ; 1 bytes @ 0x2
  3602                           
  3603                           
  3604                           ; 1 bytes @ 0x2
  3605  0022                     	ds	1
  3606  0023                     Mrf49xaModeRx@k:	
  3607                           
  3608                           ; 1 bytes @ 0x3
  3609  0023                     	ds	1
  3610  0024                     ??_Mrf49xaTick:	
  3611                           
  3612                           ; 0 bytes @ 0x4
  3613  0024                     	ds	1
  3614  0025                     Mrf49xaTick@data:	
  3615                           
  3616                           ; 1 bytes @ 0x5
  3617  0025                     	ds	1
  3618  0026                     Mrf49xaInit@i:	
  3619                           
  3620                           ; 1 bytes @ 0x6
  3621  0026                     	ds	1
  3622  0027                     Mrf49xaInit@j:	
  3623                           
  3624                           ; 1 bytes @ 0x7
  3625  0027                     	ds	1
  3626  0028                     Mrf49xaInit@k:	
  3627                           
  3628                           ; 1 bytes @ 0x8
  3629  0028                     	ds	1
  3630  0029                     main@j:	
  3631                           
  3632                           ; 1 bytes @ 0x9
  3633  0029                     	ds	1
  3634  002A                     main@i:	
  3635                           
  3636                           ; 1 bytes @ 0xA
  3637  002A                     	ds	1
  3638                           
  3639                           	psect	swtext1
  3640  0384                     __pswtext1:	
  3641  0384                     S1895:	
  3642  0384  3180  28B5         	ljmp	l1427
  3643  0386  3180  28B5         	ljmp	l1427
  3644  0388  3180  28B5         	ljmp	l1427
  3645  038A  3180  28C9         	ljmp	l178
  3646                           
  3647                           	psect	intentry
  3648  0004                     __pintentry:	
  3649 ;; *************** function _extInt *****************
  3650 ;; Defined at:
  3651 ;;		line 31 in file "../../../src/bsp/pic16/interrupt.c"
  3652 ;; Parameters:    Size  Location     Type
  3653 ;;		None
  3654 ;; Auto vars:     Size  Location     Type
  3655 ;;		None
  3656 ;; Return value:  Size  Location     Type
  3657 ;;		None               void
  3658 ;; Registers used:
  3659 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3660 ;; Tracked objects:
  3661 ;;		On entry : 0/0
  3662 ;;		On exit  : 1F/0
  3663 ;;		Unchanged: 0/0
  3664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3665 ;;      Params:         0       0       0       0
  3666 ;;      Locals:         0       0       0       0
  3667 ;;      Temps:          1       0       0       0
  3668 ;;      Totals:         1       0       0       0
  3669 ;;Total ram usage:        1 bytes
  3670 ;; Hardware stack levels used:    1
  3671 ;; Hardware stack levels required when called:    4
  3672 ;; This function calls:
  3673 ;;		i1_Mrf49xaTick
  3674 ;; This function is called by:
  3675 ;;		Interrupt level 1
  3676 ;; This function uses a non-reentrant model
  3677 ;;
  3678                           
  3679  0004                     _extInt:	
  3680                           
  3681                           ;incstack = 0
  3682                           ; Regs used in _extInt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3683  0004  3180               	pagesel	$
  3684  0005  0020               	movlb	0	; select bank0
  3685  0006  087F               	movf	127,w
  3686  0007  00F6               	movwf	??_extInt
  3687                           
  3688                           ;interrupt.c: 33: if (INTCONbits.INTF != 0)
  3689  0008  1C8B               	btfss	11,1	;volatile
  3690  0009  2811               	goto	i1l131
  3691                           
  3692                           ;interrupt.c: 34: {
  3693                           ;interrupt.c: 35: if (Mrf49xaTick())
  3694  000A  3182  2216  3180   	fcall	i1_Mrf49xaTick
  3695  000D  3A00               	xorlw	0
  3696  000E  1903               	skipnz
  3697  000F  2811               	goto	i1l131
  3698                           
  3699                           ;interrupt.c: 36: INTCONbits.INTF = 0;
  3700  0010  108B               	bcf	11,1	;volatile
  3701  0011                     i1l131:	
  3702  0011  0876               	movf	??_extInt,w
  3703  0012  00FF               	movwf	127
  3704  0013  0009               	retfie
  3705  0014                     __end_of_extInt:	
  3706                           
  3707                           	psect	swtext2
  3708  038C                     __pswtext2:	
  3709  038C                     i1S1897:	
  3710  038C  3182  2A1F         	ljmp	i1l1783
  3711  038E  3182  2A1F         	ljmp	i1l1783
  3712  0390  3182  2A1F         	ljmp	i1l1783
  3713  0392  3182  2A33         	ljmp	i1l178
  3714                           
  3715                           	psect	text19
  3716  020C                     __ptext19:	
  3717 ;; *************** function i1_Mrf49RxCmd *****************
  3718 ;; Defined at:
  3719 ;;		line 16 in file "../../../src/devices/mrf49xa_cmd.c"
  3720 ;; Parameters:    Size  Location     Type
  3721 ;;  cmd             1    wreg     unsigned char 
  3722 ;; Auto vars:     Size  Location     Type
  3723 ;;  cmd             1    1[COMMON] unsigned char 
  3724 ;;  Mrf49RxCmd      1    2[COMMON] unsigned char 
  3725 ;; Return value:  Size  Location     Type
  3726 ;;                  1    wreg      unsigned char 
  3727 ;; Registers used:
  3728 ;;		wreg, status,2, status,0, pclath, cstack
  3729 ;; Tracked objects:
  3730 ;;		On entry : 1C/1
  3731 ;;		On exit  : 1F/2
  3732 ;;		Unchanged: 0/0
  3733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3734 ;;      Params:         0       0       0       0
  3735 ;;      Locals:         2       0       0       0
  3736 ;;      Temps:          0       0       0       0
  3737 ;;      Totals:         2       0       0       0
  3738 ;;Total ram usage:        2 bytes
  3739 ;; Hardware stack levels used:    1
  3740 ;; Hardware stack levels required when called:    1
  3741 ;; This function calls:
  3742 ;;		i1_Mrf49SpiRx
  3743 ;;		i1_Mrf49SpiTx
  3744 ;; This function is called by:
  3745 ;;		i1_Mrf49RxByte
  3746 ;; This function uses a non-reentrant model
  3747 ;;
  3748                           
  3749                           
  3750                           ;psect for function i1_Mrf49RxCmd
  3751  020C                     i1_Mrf49RxCmd:	
  3752                           
  3753                           ;incstack = 0
  3754                           ; Regs used in i1_Mrf49RxCmd: [wreg+status,2+status,0+pclath+cstack]
  3755                           ;i1Mrf49RxCmd@cmd stored from wreg
  3756  020C  00F1               	movwf	i1Mrf49RxCmd@cmd
  3757                           
  3758                           ;mrf49xa_cmd.c: 18: LATCbits.LATC6 = 0;;
  3759  020D  0022               	movlb	2	; select bank2
  3760  020E  130E               	bcf	14,6	;volatile
  3761                           
  3762                           ;mrf49xa_cmd.c: 20: Mrf49SpiTx(cmd);
  3763  020F  0871               	movf	i1Mrf49RxCmd@cmd,w
  3764  0210  2301  3182         	fcall	i1_Mrf49SpiTx
  3765                           
  3766                           ;mrf49xa_cmd.c: 21: uint8_t val = Mrf49SpiRx();
  3767  0212  22C3               	fcall	i1_Mrf49SpiRx
  3768  0213  00F2               	movwf	i1Mrf49RxCmd@val
  3769                           
  3770                           ;mrf49xa_cmd.c: 23: LATCbits.LATC6 = 1;;
  3771  0214  170E               	bsf	14,6	;volatile
  3772                           
  3773                           ;mrf49xa_cmd.c: 25: return val;
  3774  0215  0008               	return
  3775  0216                     __end_ofi1_Mrf49RxCmd:	
  3776  0216                     __ptext14:	
  3777 ;; *************** function i1_Mrf49xaTick *****************
  3778 ;; Defined at:
  3779 ;;		line 82 in file "../../../src/devices/mrf49xa.c"
  3780 ;; Parameters:    Size  Location     Type
  3781 ;;		None
  3782 ;; Auto vars:     Size  Location     Type
  3783 ;;  Mrf49xaTick     1    5[COMMON] unsigned char 
  3784 ;; Return value:  Size  Location     Type
  3785 ;;                  1    wreg      unsigned char 
  3786 ;; Registers used:
  3787 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3788 ;; Tracked objects:
  3789 ;;		On entry : 0/0
  3790 ;;		On exit  : 1F/0
  3791 ;;		Unchanged: 0/0
  3792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3793 ;;      Params:         0       0       0       0
  3794 ;;      Locals:         1       0       0       0
  3795 ;;      Temps:          1       0       0       0
  3796 ;;      Totals:         2       0       0       0
  3797 ;;Total ram usage:        2 bytes
  3798 ;; Hardware stack levels used:    1
  3799 ;; Hardware stack levels required when called:    3
  3800 ;; This function calls:
  3801 ;;		i1_Mrf49RxByte
  3802 ;;		i1_Mrf49RxSts
  3803 ;;		i1_Mrf49xaModeRx
  3804 ;; This function is called by:
  3805 ;;		_extInt
  3806 ;; This function uses a non-reentrant model
  3807 ;;
  3808                           
  3809                           
  3810                           ;psect for function i1_Mrf49xaTick
  3811  0216                     i1_Mrf49xaTick:	
  3812                           
  3813                           ;mrf49xa.c: 84: unsigned char data;
  3814                           ;mrf49xa.c: 90: if (PORTAbits.RA2 == 0)
  3815                           
  3816                           ;incstack = 0
  3817                           ; Regs used in i1_Mrf49xaTick: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3818  0216  0020               	movlb	0	; select bank0
  3819  0217  190C               	btfsc	12,2	;volatile
  3820  0218  2A1B               	goto	i1l177
  3821                           
  3822                           ;mrf49xa.c: 91: Mrf49RxSts();
  3823  0219  22B7  3182         	fcall	i1_Mrf49RxSts
  3824  021B                     i1l177:	
  3825                           ;mrf49xa.c: 95: {
  3826                           
  3827                           
  3828                           ;mrf49xa.c: 97: }
  3829                           ;mrf49xa.c: 100: if (mrf49Status.flags.msb.overflow == 1)
  3830  021B  0020               	movlb	0	; select bank0
  3831  021C  1AAB               	btfsc	_mrf49Status,5
  3832  021D  2A28               	goto	i1l1787
  3833  021E  2A33               	goto	i1l178
  3834  021F                     i1l1783:	
  3835                           
  3836                           ;mrf49xa.c: 105: case RECV_DATA:
  3837                           ;mrf49xa.c: 106: case RECV_TIMEOUT:
  3838                           ;mrf49xa.c: 109: data = Mrf49RxByte();
  3839  021F  228D  3182         	fcall	i1_Mrf49RxByte
  3840  0221  00F5               	movwf	i1Mrf49xaTick@data
  3841                           
  3842                           ;mrf49xa.c: 110: data = Mrf49RxByte();
  3843  0222  228D  3182         	fcall	i1_Mrf49RxByte
  3844  0224  00F5               	movwf	i1Mrf49xaTick@data
  3845                           
  3846                           ;mrf49xa.c: 113: Mrf49xaModeRx();
  3847  0225  2290  3182         	fcall	i1_Mrf49xaModeRx
  3848                           
  3849                           ;mrf49xa.c: 117: break;
  3850  0227  2A33               	goto	i1l178
  3851  0228                     i1l1787:	
  3852  0228  0021               	movlb	1	; select bank1
  3853  0229  0820               	movf	_rfTrcvStatus^(0+128),w
  3854                           
  3855                           ; Switch size 1, requested type "speed"
  3856                           ; Number of cases is 4, Range of values is 0 to 3
  3857                           ; switch strategies available:
  3858                           ; Name         Instructions Cycles
  3859                           ; direct_byte           14     6 (fixed)
  3860                           ; simple_byte           13     7 (average)
  3861                           ; jumptable            260     6 (fixed)
  3862                           ;	Chosen strategy is direct_byte
  3863  022A  0084               	movwf	4
  3864  022B  3004               	movlw	4
  3865  022C  0204               	subwf	4,w
  3866  022D  1803               	skipnc
  3867  022E  2A33               	goto	i1l178
  3868  022F  3183               	movlp	high i1S1897
  3869  0230  3504               	lslf	4,w
  3870  0231  3E8C               	addlw	low i1S1897
  3871  0232  0082               	movwf	2
  3872  0233                     i1l178:	
  3873                           
  3874                           ;mrf49xa.c: 125: }
  3875                           ;mrf49xa.c: 140: if (mrf49Status.flags.msb.fifoTxRx == 1)
  3876  0233  0020               	movlb	0	; select bank0
  3877  0234  1BAB               	btfsc	_mrf49Status,7
  3878  0235  2A7F               	goto	i1l1839
  3879  0236  2A88               	goto	i1l1841
  3880  0237                     i1l1791:	
  3881                           
  3882                           ;mrf49xa.c: 146: data = Mrf49RxByte();
  3883  0237  228D  3182         	fcall	i1_Mrf49RxByte
  3884  0239  00F5               	movwf	i1Mrf49xaTick@data
  3885                           
  3886                           ;mrf49xa.c: 149: if (mrf49Status.flags.lsb.dataQualityOK == 0)
  3887  023A  0020               	movlb	0	; select bank0
  3888  023B  1FAC               	btfss	_mrf49Status+1,7
  3889  023C  2A88               	goto	i1l1841
  3890                           
  3891                           ;mrf49xa.c: 152: if (rfTrcvStatus.rxPacket[0].state == PKT_FREE) rfTrcvStatus.hwRx = &(r
      +                          fTrcvStatus.rxPacket[0]);
  3892  023D  0021               	movlb	1	; select bank1
  3893  023E  08B7               	movf	(_rfTrcvStatus^(0+128)+23),f
  3894  023F  1D03               	skipz
  3895  0240  2A43               	goto	i1l1801
  3896  0241  30B7               	movlw	(_rfTrcvStatus+23)& (0+255)
  3897  0242  2A47               	goto	L2
  3898  0243                     i1l1801:	
  3899                           
  3900                           ;mrf49xa.c: 153: else if (rfTrcvStatus.rxPacket[1].state == PKT_FREE) rfTrcvStatus.hwRx 
      +                          = &(rfTrcvStatus.rxPacket[1]);
  3901  0243  08CD               	movf	(_rfTrcvStatus^(0+128)+45),f
  3902  0244  1D03               	skipz
  3903  0245  2A88               	goto	i1l1841
  3904  0246  30CD               	movlw	(_rfTrcvStatus+45)& (0+255)
  3905  0247                     L2:	
  3906  0247  00E3               	movwf	(_rfTrcvStatus+67)^(0+128)
  3907                           
  3908                           ;mrf49xa.c: 158: }
  3909                           ;mrf49xa.c: 159: rfTrcvStatus.hwRx->packet.size = data;
  3910  0248  0A63               	incf	(_rfTrcvStatus+67)^(0+128),w
  3911  0249  0086               	movwf	6
  3912  024A  0187               	clrf	7
  3913  024B  0875               	movf	i1Mrf49xaTick@data,w
  3914  024C  0081               	movwf	1
  3915                           
  3916                           ;mrf49xa.c: 160: rfTrcvStatus.hwRx->crc = 0;
  3917  024D  0863               	movf	(_rfTrcvStatus+67)^(0+128),w
  3918  024E  3E15               	addlw	21
  3919  024F  0086               	movwf	6
  3920  0250  0181               	clrf	1
  3921                           
  3922                           ;mrf49xa.c: 161: rfTrcvStatus.hwRx->state = PKT_HW_BUSY_RX;
  3923  0251  0863               	movf	(_rfTrcvStatus+67)^(0+128),w
  3924  0252  0086               	movwf	6
  3925  0253  3002               	movlw	2
  3926  0254  0081               	movwf	1
  3927                           
  3928                           ;mrf49xa.c: 163: rfTrcvStatus.state = RECV_DATA;
  3929  0255  01A0               	clrf	_rfTrcvStatus^(0+128)
  3930  0256  0AA0               	incf	_rfTrcvStatus^(0+128),f
  3931                           
  3932                           ;mrf49xa.c: 164: rfTrcvStatus.hwRxByte = 1;
  3933  0257  01E4               	clrf	(_rfTrcvStatus^(0+128)+68)
  3934  0258  0AE4               	incf	(_rfTrcvStatus^(0+128)+68),f
  3935                           
  3936                           ;mrf49xa.c: 166: break;
  3937  0259  2A88               	goto	i1l1841
  3938  025A                     i1l1815:	
  3939                           
  3940                           ;mrf49xa.c: 170: data = Mrf49RxByte();
  3941  025A  228D  3182         	fcall	i1_Mrf49RxByte
  3942  025C  00F5               	movwf	i1Mrf49xaTick@data
  3943                           
  3944                           ;mrf49xa.c: 173: if (mrf49Status.flags.lsb.dataQualityOK == 0)
  3945  025D  0020               	movlb	0	; select bank0
  3946  025E  1FAC               	btfss	_mrf49Status+1,7
  3947  025F  2A88               	goto	i1l1841
  3948                           
  3949                           ;mrf49xa.c: 176: rfTrcvStatus.hwRx->raw[rfTrcvStatus.hwRxByte++] = data;
  3950  0260  0021               	movlb	1	; select bank1
  3951  0261  0864               	movf	(_rfTrcvStatus^(0+128)+68),w
  3952  0262  0763               	addwf	(_rfTrcvStatus+67)^(0+128),w
  3953  0263  00F4               	movwf	??i1_Mrf49xaTick
  3954  0264  0A74               	incf	??i1_Mrf49xaTick,w
  3955  0265  0086               	movwf	6
  3956  0266  0187               	clrf	7
  3957  0267  0875               	movf	i1Mrf49xaTick@data,w
  3958  0268  0081               	movwf	1
  3959  0269  0AE4               	incf	(_rfTrcvStatus^(0+128)+68),f
  3960                           
  3961                           ;mrf49xa.c: 178: if (rfTrcvStatus.hwRxByte == rfTrcvStatus.hwRx->packet.size ||
  3962                           ;mrf49xa.c: 179: rfTrcvStatus.hwRxByte == 16)
  3963  026A  0A63               	incf	(_rfTrcvStatus+67)^(0+128),w
  3964  026B  0086               	movwf	6
  3965  026C  0864               	movf	(_rfTrcvStatus^(0+128)+68),w
  3966  026D  0601               	xorwf	1,w
  3967  026E  1903               	skipnz
  3968  026F  2A74               	goto	i1l1827
  3969  0270  0864               	movf	(_rfTrcvStatus^(0+128)+68),w
  3970  0271  3A10               	xorlw	16
  3971  0272  1D03               	skipz
  3972  0273  2A88               	goto	i1l1841
  3973  0274                     i1l1827:	
  3974                           
  3975                           ;mrf49xa.c: 180: {
  3976                           ;mrf49xa.c: 181: rfTrcvStatus.state = RECV_IDLE;
  3977  0274  01A0               	clrf	_rfTrcvStatus^(0+128)
  3978                           
  3979                           ;mrf49xa.c: 182: rfTrcvStatus.hwRx->state = PKT_FREE;
  3980  0275  0863               	movf	(_rfTrcvStatus+67)^(0+128),w
  3981  0276  0086               	movwf	6
  3982  0277  0187               	clrf	7
  3983  0278  0181               	clrf	1
  3984                           
  3985                           ;mrf49xa.c: 185: LATCbits.LATC2 = 1;
  3986  0279  0022               	movlb	2	; select bank2
  3987  027A  150E               	bsf	14,2	;volatile
  3988                           
  3989                           ;mrf49xa.c: 186: LATCbits.LATC2 = 0;
  3990  027B  110E               	bcf	14,2	;volatile
  3991                           
  3992                           ;mrf49xa.c: 189: Mrf49xaModeRx();
  3993  027C  2290  3182         	fcall	i1_Mrf49xaModeRx
  3994  027E  2A88               	goto	i1l1841
  3995  027F                     i1l1839:	
  3996  027F  0021               	movlb	1	; select bank1
  3997  0280  0820               	movf	_rfTrcvStatus^(0+128),w
  3998                           
  3999                           ; Switch size 1, requested type "speed"
  4000                           ; Number of cases is 2, Range of values is 0 to 1
  4001                           ; switch strategies available:
  4002                           ; Name         Instructions Cycles
  4003                           ; simple_byte            7     4 (average)
  4004                           ; direct_byte           10     6 (fixed)
  4005                           ; jumptable            260     6 (fixed)
  4006                           ;	Chosen strategy is simple_byte
  4007  0281  3A00               	xorlw	0	; case 0
  4008  0282  1903               	skipnz
  4009  0283  2A37               	goto	i1l1791
  4010  0284  3A01               	xorlw	1	; case 1
  4011  0285  1903               	skipnz
  4012  0286  2A5A               	goto	i1l1815
  4013  0287  2A88               	goto	i1l1841
  4014  0288                     i1l1841:	
  4015                           
  4016                           ;mrf49xa.c: 195: }
  4017                           ;mrf49xa.c: 197: return PORTAbits.RA2 == 1 ? 1 : 0;
  4018  0288  0020               	movlb	0	; select bank0
  4019  0289  0C0C               	rrf	12,w	;volatile
  4020  028A  0C89               	rrf	9,f
  4021  028B  3901               	andlw	1
  4022  028C  0008               	return
  4023  028D                     __end_ofi1_Mrf49xaTick:	
  4024  028D                     __ptext18:	
  4025 ;; *************** function i1_Mrf49RxByte *****************
  4026 ;; Defined at:
  4027 ;;		line 39 in file "../../../src/devices/mrf49xa_cmd.c"
  4028 ;; Parameters:    Size  Location     Type
  4029 ;;		None
  4030 ;; Auto vars:     Size  Location     Type
  4031 ;;		None
  4032 ;; Return value:  Size  Location     Type
  4033 ;;                  1    wreg      unsigned char 
  4034 ;; Registers used:
  4035 ;;		wreg, status,2, status,0, pclath, cstack
  4036 ;; Tracked objects:
  4037 ;;		On entry : 1C/1
  4038 ;;		On exit  : 1F/2
  4039 ;;		Unchanged: 0/0
  4040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4041 ;;      Params:         0       0       0       0
  4042 ;;      Locals:         0       0       0       0
  4043 ;;      Temps:          0       0       0       0
  4044 ;;      Totals:         0       0       0       0
  4045 ;;Total ram usage:        0 bytes
  4046 ;; Hardware stack levels used:    1
  4047 ;; Hardware stack levels required when called:    2
  4048 ;; This function calls:
  4049 ;;		i1_Mrf49RxCmd
  4050 ;; This function is called by:
  4051 ;;		i1_Mrf49xaTick
  4052 ;; This function uses a non-reentrant model
  4053 ;;
  4054                           
  4055                           
  4056                           ;psect for function i1_Mrf49RxByte
  4057  028D                     i1_Mrf49RxByte:	
  4058                           
  4059                           ;mrf49xa_cmd.c: 41: return Mrf49RxCmd(0xB0);
  4060                           
  4061                           ;incstack = 0
  4062                           ; Regs used in i1_Mrf49RxByte: [wreg+status,2+status,0+pclath+cstack]
  4063  028D  30B0               	movlw	176
  4064  028E  220C               	fcall	i1_Mrf49RxCmd
  4065  028F  0008               	return
  4066  0290                     __end_ofi1_Mrf49RxByte:	
  4067  0290                     __ptext15:	
  4068 ;; *************** function i1_Mrf49xaModeRx *****************
  4069 ;; Defined at:
  4070 ;;		line 200 in file "../../../src/devices/mrf49xa.c"
  4071 ;; Parameters:    Size  Location     Type
  4072 ;;		None
  4073 ;; Auto vars:     Size  Location     Type
  4074 ;;  Mrf49xaModeR    1    3[COMMON] unsigned char 
  4075 ;; Return value:  Size  Location     Type
  4076 ;;		None               void
  4077 ;; Registers used:
  4078 ;;		wreg, status,2, status,0, pclath, cstack
  4079 ;; Tracked objects:
  4080 ;;		On entry : 1F/2
  4081 ;;		On exit  : 1F/1
  4082 ;;		Unchanged: 0/0
  4083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4084 ;;      Params:         0       0       0       0
  4085 ;;      Locals:         1       0       0       0
  4086 ;;      Temps:          0       0       0       0
  4087 ;;      Totals:         1       0       0       0
  4088 ;;Total ram usage:        1 bytes
  4089 ;; Hardware stack levels used:    1
  4090 ;; Hardware stack levels required when called:    2
  4091 ;; This function calls:
  4092 ;;		i1_Mrf49TxCmd
  4093 ;; This function is called by:
  4094 ;;		i1_Mrf49xaTick
  4095 ;; This function uses a non-reentrant model
  4096 ;;
  4097                           
  4098                           
  4099                           ;psect for function i1_Mrf49xaModeRx
  4100  0290                     i1_Mrf49xaModeRx:	
  4101  0290  304E               	movlw	low (_mrfRegset_RxCnt| (0+32768))
  4102                           
  4103                           ;mrf49xa.c: 202: UI08_t k;
  4104                           ;mrf49xa.c: 203: for (k = 0; k < mrfRegset_RxCnt; k++) { if (mrfRegset_Rx[k].reg != 0x55
      +                          ) Mrf49TxCmd(mrfRegset_Rx[k].reg, mrfRegset_Rx[k].val); };
  4105                           
  4106                           ;incstack = 0
  4107                           ; Regs used in i1_Mrf49xaModeRx: [wreg+status,2+status,0+pclath+cstack]
  4108  0291  01F3               	clrf	i1Mrf49xaModeRx@k
  4109  0292  3183               	movlp	high __stringtab
  4110  0293  000A               	callw
  4111  0294  3182               	pagesel	$	;select current page
  4112  0295  3800               	iorlw	0
  4113  0296  1903               	btfsc	3,2
  4114  0297  2AB4               	goto	i1l1769
  4115  0298                     i1l1761:	
  4116  0298  3573               	lslf	i1Mrf49xaModeRx@k,w
  4117  0299  3E70               	addlw	low (_mrfRegset_Rx| (0+32768))
  4118  029A  3183               	movlp	high __stringtab
  4119  029B  000A               	callw
  4120  029C  3182               	pagesel	$	;select current page
  4121  029D  3A55               	xorlw	85
  4122  029E  1903               	skipnz
  4123  029F  2AAC               	goto	i1l1765
  4124  02A0  3573               	lslf	i1Mrf49xaModeRx@k,w
  4125  02A1  3E71               	addlw	low ((_mrfRegset_Rx| (0+32768)+1))
  4126  02A2  3183               	movlp	high __stringtab
  4127  02A3  000A               	callw
  4128  02A4  00F1               	movwf	i1Mrf49TxCmd@val
  4129  02A5  3573               	lslf	i1Mrf49xaModeRx@k,w
  4130  02A6  3E70               	addlw	low (_mrfRegset_Rx| (0+32768))
  4131  02A7  3183               	movlp	high __stringtab
  4132  02A8  000A               	callw
  4133  02A9  3182               	pagesel	$	;select current page
  4134  02AA  3182  22F8         	fcall	i1_Mrf49TxCmd
  4135  02AC                     i1l1765:	
  4136  02AC  304E               	movlw	low (_mrfRegset_RxCnt| (0+32768))
  4137  02AD  0AF3               	incf	i1Mrf49xaModeRx@k,f
  4138  02AE  3183               	movlp	high __stringtab
  4139  02AF  000A               	callw
  4140  02B0  3182               	pagesel	$	;select current page
  4141  02B1  0273               	subwf	i1Mrf49xaModeRx@k,w
  4142  02B2  1C03               	skipc
  4143  02B3  2A98               	goto	i1l1761
  4144  02B4                     i1l1769:	
  4145                           
  4146                           ;mrf49xa.c: 205: rfTrcvStatus.state = RECV_IDLE;
  4147  02B4  0021               	movlb	1	; select bank1
  4148  02B5  01A0               	clrf	_rfTrcvStatus^(0+128)
  4149  02B6  0008               	return
  4150  02B7                     __end_ofi1_Mrf49xaModeRx:	
  4151  02B7                     __ptext17:	
  4152 ;; *************** function i1_Mrf49RxSts *****************
  4153 ;; Defined at:
  4154 ;;		line 29 in file "../../../src/devices/mrf49xa_cmd.c"
  4155 ;; Parameters:    Size  Location     Type
  4156 ;;		None
  4157 ;; Auto vars:     Size  Location     Type
  4158 ;;		None
  4159 ;; Return value:  Size  Location     Type
  4160 ;;		None               void
  4161 ;; Registers used:
  4162 ;;		wreg, status,2, pclath, cstack
  4163 ;; Tracked objects:
  4164 ;;		On entry : 1F/0
  4165 ;;		On exit  : 1F/2
  4166 ;;		Unchanged: 0/0
  4167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4168 ;;      Params:         0       0       0       0
  4169 ;;      Locals:         0       0       0       0
  4170 ;;      Temps:          0       0       0       0
  4171 ;;      Totals:         0       0       0       0
  4172 ;;Total ram usage:        0 bytes
  4173 ;; Hardware stack levels used:    1
  4174 ;; Hardware stack levels required when called:    1
  4175 ;; This function calls:
  4176 ;;		i1_Mrf49SpiRx
  4177 ;; This function is called by:
  4178 ;;		i1_Mrf49xaTick
  4179 ;; This function uses a non-reentrant model
  4180 ;;
  4181                           
  4182                           
  4183                           ;psect for function i1_Mrf49RxSts
  4184  02B7                     i1_Mrf49RxSts:	
  4185                           
  4186                           ;mrf49xa_cmd.c: 31: LATCbits.LATC6 = 0;;
  4187                           
  4188                           ;incstack = 0
  4189                           ; Regs used in i1_Mrf49RxSts: [wreg+status,2+pclath+cstack]
  4190  02B7  0022               	movlb	2	; select bank2
  4191  02B8  130E               	bcf	14,6	;volatile
  4192                           
  4193                           ;mrf49xa_cmd.c: 33: mrf49Status.byte[0] = Mrf49SpiRx();
  4194  02B9  22C3  3182         	fcall	i1_Mrf49SpiRx
  4195  02BB  0020               	movlb	0	; select bank0
  4196  02BC  00AB               	movwf	_mrf49Status
  4197                           
  4198                           ;mrf49xa_cmd.c: 34: mrf49Status.byte[1] = Mrf49SpiRx();
  4199  02BD  22C3               	fcall	i1_Mrf49SpiRx
  4200  02BE  0020               	movlb	0	; select bank0
  4201  02BF  00AC               	movwf	_mrf49Status+1
  4202                           
  4203                           ;mrf49xa_cmd.c: 36: LATCbits.LATC6 = 1;;
  4204  02C0  0022               	movlb	2	; select bank2
  4205  02C1  170E               	bsf	14,6	;volatile
  4206  02C2  0008               	return
  4207  02C3                     __end_ofi1_Mrf49RxSts:	
  4208  02C3                     __ptext21:	
  4209 ;; *************** function i1_Mrf49SpiRx *****************
  4210 ;; Defined at:
  4211 ;;		line 20 in file "../../../src/devices/mrf49xa_spi_pic16.c"
  4212 ;; Parameters:    Size  Location     Type
  4213 ;;		None
  4214 ;; Auto vars:     Size  Location     Type
  4215 ;;  Mrf49SpiRx      1    0[COMMON] unsigned char 
  4216 ;; Return value:  Size  Location     Type
  4217 ;;                  1    wreg      unsigned char 
  4218 ;; Registers used:
  4219 ;;		wreg, status,2
  4220 ;; Tracked objects:
  4221 ;;		On entry : 1D/2
  4222 ;;		On exit  : 1F/2
  4223 ;;		Unchanged: 0/0
  4224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4225 ;;      Params:         0       0       0       0
  4226 ;;      Locals:         1       0       0       0
  4227 ;;      Temps:          0       0       0       0
  4228 ;;      Totals:         1       0       0       0
  4229 ;;Total ram usage:        1 bytes
  4230 ;; Hardware stack levels used:    1
  4231 ;; This function calls:
  4232 ;;		Nothing
  4233 ;; This function is called by:
  4234 ;;		i1_Mrf49RxCmd
  4235 ;;		i1_Mrf49RxSts
  4236 ;; This function uses a non-reentrant model
  4237 ;;
  4238                           
  4239                           
  4240                           ;psect for function i1_Mrf49SpiRx
  4241  02C3                     i1_Mrf49SpiRx:	
  4242                           
  4243                           ;mrf49xa_spi_pic16.c: 22: uint8_t data = 0;
  4244                           
  4245                           ;incstack = 0
  4246                           ; Regs used in i1_Mrf49SpiRx: [wreg+status,2]
  4247  02C3  01F0               	clrf	i1Mrf49SpiRx@data
  4248                           
  4249                           ;mrf49xa_spi_pic16.c: 23: LATBbits.LATB7 = 0;
  4250  02C4  0022               	movlb	2	; select bank2
  4251  02C5  138D               	bcf	13,7	;volatile
  4252  02C6  0020               	movlb	0	; select bank0
  4253  02C7  1A8E               	btfsc	14,5	;volatile
  4254  02C8  17F0               	bsf	i1Mrf49SpiRx@data,7
  4255  02C9  0022               	movlb	2	; select bank2
  4256  02CA  178E               	bsf	14,7	;volatile
  4257  02CB  138E               	bcf	14,7	;volatile
  4258                           
  4259                           ;mrf49xa_spi_pic16.c: 30: do { if (PORTCbits.RC5) data |= (1<<6); LATCbits.LATC7 = 1; LA
      +                          TCbits.LATC7 = 0; } while (0);;
  4260  02CC  0020               	movlb	0	; select bank0
  4261  02CD  1A8E               	btfsc	14,5	;volatile
  4262  02CE  1770               	bsf	i1Mrf49SpiRx@data,6
  4263  02CF  0022               	movlb	2	; select bank2
  4264  02D0  178E               	bsf	14,7	;volatile
  4265  02D1  138E               	bcf	14,7	;volatile
  4266                           
  4267                           ;mrf49xa_spi_pic16.c: 31: do { if (PORTCbits.RC5) data |= (1<<5); LATCbits.LATC7 = 1; LA
      +                          TCbits.LATC7 = 0; } while (0);;
  4268  02D2  0020               	movlb	0	; select bank0
  4269  02D3  1A8E               	btfsc	14,5	;volatile
  4270  02D4  16F0               	bsf	i1Mrf49SpiRx@data,5
  4271  02D5  0022               	movlb	2	; select bank2
  4272  02D6  178E               	bsf	14,7	;volatile
  4273  02D7  138E               	bcf	14,7	;volatile
  4274                           
  4275                           ;mrf49xa_spi_pic16.c: 32: do { if (PORTCbits.RC5) data |= (1<<4); LATCbits.LATC7 = 1; LA
      +                          TCbits.LATC7 = 0; } while (0);;
  4276  02D8  0020               	movlb	0	; select bank0
  4277  02D9  1A8E               	btfsc	14,5	;volatile
  4278  02DA  1670               	bsf	i1Mrf49SpiRx@data,4
  4279  02DB  0022               	movlb	2	; select bank2
  4280  02DC  178E               	bsf	14,7	;volatile
  4281  02DD  138E               	bcf	14,7	;volatile
  4282                           
  4283                           ;mrf49xa_spi_pic16.c: 33: do { if (PORTCbits.RC5) data |= (1<<3); LATCbits.LATC7 = 1; LA
      +                          TCbits.LATC7 = 0; } while (0);;
  4284  02DE  0020               	movlb	0	; select bank0
  4285  02DF  1A8E               	btfsc	14,5	;volatile
  4286  02E0  15F0               	bsf	i1Mrf49SpiRx@data,3
  4287  02E1  0022               	movlb	2	; select bank2
  4288  02E2  178E               	bsf	14,7	;volatile
  4289  02E3  138E               	bcf	14,7	;volatile
  4290                           
  4291                           ;mrf49xa_spi_pic16.c: 34: do { if (PORTCbits.RC5) data |= (1<<2); LATCbits.LATC7 = 1; LA
      +                          TCbits.LATC7 = 0; } while (0);;
  4292  02E4  0020               	movlb	0	; select bank0
  4293  02E5  1A8E               	btfsc	14,5	;volatile
  4294  02E6  1570               	bsf	i1Mrf49SpiRx@data,2
  4295  02E7  0022               	movlb	2	; select bank2
  4296  02E8  178E               	bsf	14,7	;volatile
  4297  02E9  138E               	bcf	14,7	;volatile
  4298                           
  4299                           ;mrf49xa_spi_pic16.c: 35: do { if (PORTCbits.RC5) data |= (1<<1); LATCbits.LATC7 = 1; LA
      +                          TCbits.LATC7 = 0; } while (0);;
  4300  02EA  0020               	movlb	0	; select bank0
  4301  02EB  1A8E               	btfsc	14,5	;volatile
  4302  02EC  14F0               	bsf	i1Mrf49SpiRx@data,1
  4303  02ED  0022               	movlb	2	; select bank2
  4304  02EE  178E               	bsf	14,7	;volatile
  4305  02EF  138E               	bcf	14,7	;volatile
  4306                           
  4307                           ;mrf49xa_spi_pic16.c: 36: do { if (PORTCbits.RC5) data |= (1<<0); LATCbits.LATC7 = 1; LA
      +                          TCbits.LATC7 = 0; } while (0);;
  4308  02F0  0020               	movlb	0	; select bank0
  4309  02F1  1A8E               	btfsc	14,5	;volatile
  4310  02F2  1470               	bsf	i1Mrf49SpiRx@data,0
  4311  02F3  0022               	movlb	2	; select bank2
  4312  02F4  178E               	bsf	14,7	;volatile
  4313  02F5  138E               	bcf	14,7	;volatile
  4314                           
  4315                           ;mrf49xa_spi_pic16.c: 38: return data;
  4316  02F6  0870               	movf	i1Mrf49SpiRx@data,w
  4317  02F7  0008               	return
  4318  02F8                     __end_ofi1_Mrf49SpiRx:	
  4319  007E                     btemp	set	126	;btemp
  4320  007E                     wtemp	set	126
  4321  007E                     wtemp0	set	126
  4322  0080                     wtemp1	set	128
  4323  0082                     wtemp2	set	130
  4324  0084                     wtemp3	set	132
  4325  0086                     wtemp4	set	134
  4326  0088                     wtemp5	set	136
  4327  007F                     wtemp6	set	127
  4328  007E                     ttemp	set	126
  4329  007E                     ttemp0	set	126
  4330  0081                     ttemp1	set	129
  4331  0084                     ttemp2	set	132
  4332  0087                     ttemp3	set	135
  4333  007F                     ttemp4	set	127
  4334  007E                     ltemp	set	126
  4335  007E                     ltemp0	set	126
  4336  0082                     ltemp1	set	130
  4337  0086                     ltemp2	set	134
  4338  0080                     ltemp3	set	128
  4339  02F8                     __ptext16:	
  4340 ;; *************** function i1_Mrf49TxCmd *****************
  4341 ;; Defined at:
  4342 ;;		line 6 in file "../../../src/devices/mrf49xa_cmd.c"
  4343 ;; Parameters:    Size  Location     Type
  4344 ;;  cmd             1    wreg     unsigned char 
  4345 ;;  val             1    1[COMMON] unsigned char 
  4346 ;; Auto vars:     Size  Location     Type
  4347 ;;  cmd             1    2[COMMON] unsigned char 
  4348 ;; Return value:  Size  Location     Type
  4349 ;;		None               void
  4350 ;; Registers used:
  4351 ;;		wreg, status,2, status,0, pclath, cstack
  4352 ;; Tracked objects:
  4353 ;;		On entry : 1F/2
  4354 ;;		On exit  : 1F/2
  4355 ;;		Unchanged: 0/0
  4356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4357 ;;      Params:         1       0       0       0
  4358 ;;      Locals:         1       0       0       0
  4359 ;;      Temps:          0       0       0       0
  4360 ;;      Totals:         2       0       0       0
  4361 ;;Total ram usage:        2 bytes
  4362 ;; Hardware stack levels used:    1
  4363 ;; Hardware stack levels required when called:    1
  4364 ;; This function calls:
  4365 ;;		i1_Mrf49SpiTx
  4366 ;; This function is called by:
  4367 ;;		i1_Mrf49xaModeRx
  4368 ;; This function uses a non-reentrant model
  4369 ;;
  4370                           
  4371                           
  4372                           ;psect for function i1_Mrf49TxCmd
  4373  02F8                     i1_Mrf49TxCmd:	
  4374                           
  4375                           ;incstack = 0
  4376                           ; Regs used in i1_Mrf49TxCmd: [wreg+status,2+status,0+pclath+cstack]
  4377                           ;i1Mrf49TxCmd@cmd stored from wreg
  4378  02F8  00F2               	movwf	i1Mrf49TxCmd@cmd
  4379                           
  4380                           ;mrf49xa_cmd.c: 8: LATCbits.LATC6 = 0;;
  4381  02F9  130E               	bcf	14,6	;volatile
  4382                           
  4383                           ;mrf49xa_cmd.c: 10: Mrf49SpiTx(cmd);
  4384  02FA  0872               	movf	i1Mrf49TxCmd@cmd,w
  4385  02FB  2301  3182         	fcall	i1_Mrf49SpiTx
  4386                           
  4387                           ;mrf49xa_cmd.c: 11: Mrf49SpiTx(val);
  4388  02FD  0871               	movf	i1Mrf49TxCmd@val,w
  4389  02FE  2301               	fcall	i1_Mrf49SpiTx
  4390                           
  4391                           ;mrf49xa_cmd.c: 13: LATCbits.LATC6 = 1;;
  4392  02FF  170E               	bsf	14,6	;volatile
  4393  0300  0008               	return
  4394  0301                     __end_ofi1_Mrf49TxCmd:	
  4395  0301                     __ptext20:	
  4396 ;; *************** function i1_Mrf49SpiTx *****************
  4397 ;; Defined at:
  4398 ;;		line 3 in file "../../../src/devices/mrf49xa_spi_pic16.c"
  4399 ;; Parameters:    Size  Location     Type
  4400 ;;  byte            1    wreg     unsigned char 
  4401 ;; Auto vars:     Size  Location     Type
  4402 ;;  byte            1    0[COMMON] unsigned char 
  4403 ;; Return value:  Size  Location     Type
  4404 ;;		None               void
  4405 ;; Registers used:
  4406 ;;		wreg
  4407 ;; Tracked objects:
  4408 ;;		On entry : 1F/2
  4409 ;;		On exit  : 1F/2
  4410 ;;		Unchanged: 0/0
  4411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4412 ;;      Params:         0       0       0       0
  4413 ;;      Locals:         1       0       0       0
  4414 ;;      Temps:          0       0       0       0
  4415 ;;      Totals:         1       0       0       0
  4416 ;;Total ram usage:        1 bytes
  4417 ;; Hardware stack levels used:    1
  4418 ;; This function calls:
  4419 ;;		Nothing
  4420 ;; This function is called by:
  4421 ;;		i1_Mrf49TxCmd
  4422 ;;		i1_Mrf49RxCmd
  4423 ;; This function uses a non-reentrant model
  4424 ;;
  4425                           
  4426                           
  4427                           ;psect for function i1_Mrf49SpiTx
  4428  0301                     i1_Mrf49SpiTx:	
  4429                           
  4430                           ;incstack = 0
  4431                           ; Regs used in i1_Mrf49SpiTx: [wreg]
  4432                           ;i1Mrf49SpiTx@byte stored from wreg
  4433  0301  00F0               	movwf	i1Mrf49SpiTx@byte
  4434                           
  4435                           ;mrf49xa_spi_pic16.c: 9: do { if ((byte & (1<<7)) != 0) LATBbits.LATB7 = 1; else LATBbit
      +                          s.LATB7 = 0; LATCbits.LATC7 = 1; LATCbits.LATC7 = 0; } while (0);;
  4436  0302  1BF0               	btfsc	i1Mrf49SpiTx@byte,7
  4437  0303  2B06               	goto	i1l1675
  4438  0304  0020               	movlb	0	; select bank0
  4439  0305  2B08               	goto	i1l235
  4440  0306                     i1l1675:	
  4441  0306  178D               	bsf	13,7	;volatile
  4442  0307  2B09               	goto	i1l236
  4443  0308                     i1l235:	
  4444  0308  138D               	bcf	13,7	;volatile
  4445  0309                     i1l236:	
  4446  0309  178E               	bsf	14,7	;volatile
  4447  030A  138E               	bcf	14,7	;volatile
  4448  030B  1B70               	btfsc	i1Mrf49SpiTx@byte,6
  4449  030C  2B0F               	goto	i1l1679
  4450  030D  0020               	movlb	0	; select bank0
  4451  030E  2B11               	goto	i1l239
  4452  030F                     i1l1679:	
  4453  030F  178D               	bsf	13,7	;volatile
  4454  0310  2B12               	goto	i1l240
  4455  0311                     i1l239:	
  4456  0311  138D               	bcf	13,7	;volatile
  4457  0312                     i1l240:	
  4458  0312  178E               	bsf	14,7	;volatile
  4459  0313  138E               	bcf	14,7	;volatile
  4460  0314  1AF0               	btfsc	i1Mrf49SpiTx@byte,5
  4461  0315  2B18               	goto	i1l1683
  4462  0316  0020               	movlb	0	; select bank0
  4463  0317  2B1A               	goto	i1l243
  4464  0318                     i1l1683:	
  4465  0318  178D               	bsf	13,7	;volatile
  4466  0319  2B1B               	goto	i1l244
  4467  031A                     i1l243:	
  4468  031A  138D               	bcf	13,7	;volatile
  4469  031B                     i1l244:	
  4470  031B  178E               	bsf	14,7	;volatile
  4471  031C  138E               	bcf	14,7	;volatile
  4472  031D  1A70               	btfsc	i1Mrf49SpiTx@byte,4
  4473  031E  2B21               	goto	i1l1687
  4474  031F  0020               	movlb	0	; select bank0
  4475  0320  2B23               	goto	i1l247
  4476  0321                     i1l1687:	
  4477  0321  178D               	bsf	13,7	;volatile
  4478  0322  2B24               	goto	i1l248
  4479  0323                     i1l247:	
  4480  0323  138D               	bcf	13,7	;volatile
  4481  0324                     i1l248:	
  4482  0324  178E               	bsf	14,7	;volatile
  4483  0325  138E               	bcf	14,7	;volatile
  4484  0326  19F0               	btfsc	i1Mrf49SpiTx@byte,3
  4485  0327  2B2A               	goto	i1l1691
  4486  0328  0020               	movlb	0	; select bank0
  4487  0329  2B2C               	goto	i1l251
  4488  032A                     i1l1691:	
  4489  032A  178D               	bsf	13,7	;volatile
  4490  032B  2B2D               	goto	i1l252
  4491  032C                     i1l251:	
  4492  032C  138D               	bcf	13,7	;volatile
  4493  032D                     i1l252:	
  4494  032D  178E               	bsf	14,7	;volatile
  4495  032E  138E               	bcf	14,7	;volatile
  4496  032F  1970               	btfsc	i1Mrf49SpiTx@byte,2
  4497  0330  2B33               	goto	i1l1695
  4498  0331  0020               	movlb	0	; select bank0
  4499  0332  2B35               	goto	i1l255
  4500  0333                     i1l1695:	
  4501  0333  178D               	bsf	13,7	;volatile
  4502  0334  2B36               	goto	i1l256
  4503  0335                     i1l255:	
  4504  0335  138D               	bcf	13,7	;volatile
  4505  0336                     i1l256:	
  4506  0336  178E               	bsf	14,7	;volatile
  4507  0337  138E               	bcf	14,7	;volatile
  4508  0338  18F0               	btfsc	i1Mrf49SpiTx@byte,1
  4509  0339  2B3C               	goto	i1l1699
  4510  033A  0020               	movlb	0	; select bank0
  4511  033B  2B3E               	goto	i1l259
  4512  033C                     i1l1699:	
  4513  033C  178D               	bsf	13,7	;volatile
  4514  033D  2B3F               	goto	i1l260
  4515  033E                     i1l259:	
  4516  033E  138D               	bcf	13,7	;volatile
  4517  033F                     i1l260:	
  4518  033F  178E               	bsf	14,7	;volatile
  4519  0340  138E               	bcf	14,7	;volatile
  4520  0341  1870               	btfsc	i1Mrf49SpiTx@byte,0
  4521  0342  2B45               	goto	i1l1703
  4522  0343  0020               	movlb	0	; select bank0
  4523  0344  2B47               	goto	i1l263
  4524  0345                     i1l1703:	
  4525  0345  178D               	bsf	13,7	;volatile
  4526  0346  2B48               	goto	i1l264
  4527  0347                     i1l263:	
  4528  0347  138D               	bcf	13,7	;volatile
  4529  0348                     i1l264:	
  4530  0348  178E               	bsf	14,7	;volatile
  4531  0349  138E               	bcf	14,7	;volatile
  4532                           
  4533                           ;mrf49xa_spi_pic16.c: 17: LATBbits.LATB7 = 0;
  4534  034A  138D               	bcf	13,7	;volatile
  4535  034B  0008               	return
  4536  034C                     __end_ofi1_Mrf49SpiTx:	


Data Sizes:
    Strings     0
    Constant    55
    Data        0
    BSS         71
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80     11      13
    BANK1            80      0      69
    BANK2            80      0       0

Pointer List with Targets:

    S321rfTrcvStatus_s$hwRx	PTR struct rfTrcvPacket_s size(1) Largest target is 70
		 -> rfTrcvStatus(BANK1[69]), 

    rfTrcvStatus.hwRx	PTR struct rfTrcvPacket_s size(1) Largest target is 70
		 -> rfTrcvStatus.rxPacket(BANK1[44]), rfTrcvStatus(BANK1[69]), 

    cb	PTR FTN(unsigned char ,)unsigned char  size(1) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _extInt in COMMON

    _extInt->i1_Mrf49xaTick
    i1_Mrf49xaTick->i1_Mrf49xaModeRx
    i1_Mrf49xaModeRx->i1_Mrf49TxCmd
    i1_Mrf49TxCmd->i1_Mrf49SpiTx
    i1_Mrf49RxSts->i1_Mrf49SpiRx
    i1_Mrf49RxByte->i1_Mrf49RxCmd
    i1_Mrf49RxCmd->i1_Mrf49SpiRx
    i1_Mrf49RxCmd->i1_Mrf49SpiTx

Critical Paths under _main in BANK0

    _main->_Mrf49xaInit
    _Mrf49xaInit->_Mrf49xaTick
    _Mrf49xaTick->_Mrf49xaModeRx
    _Mrf49xaModeRx->_Mrf49TxCmd
    _Mrf49TxCmd->_Mrf49SpiTx
    _Mrf49RxSts->_Mrf49SpiRx
    _Mrf49RxByte->_Mrf49RxCmd
    _Mrf49RxCmd->_Mrf49SpiRx
    _Mrf49RxCmd->_Mrf49SpiTx

Critical Paths under _extInt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _extInt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _extInt in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2223
                                              9 BANK0      2     2      0
                            _AdcInit
                         _ExtIntInit
                        _Mrf49xaInit
                        _SysInitGpio
 ---------------------------------------------------------------------------------
 (1) _SysInitGpio                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Mrf49xaInit                                          3     3      0    2109
                                              6 BANK0      3     3      0
                         _Mrf49TxCmd
                      _Mrf49xaModeRx
                        _Mrf49xaTick
 ---------------------------------------------------------------------------------
 (2) _Mrf49xaTick                                          2     2      0     893
                                              4 BANK0      2     2      0
                        _Mrf49RxByte
                         _Mrf49RxSts
                      _Mrf49xaModeRx
 ---------------------------------------------------------------------------------
 (3) _Mrf49xaModeRx                                        1     1      0     562
                                              3 BANK0      1     1      0
                         _Mrf49TxCmd
 ---------------------------------------------------------------------------------
 (4) _Mrf49TxCmd                                           2     1      1     450
                                              1 BANK0      2     1      1
                         _Mrf49SpiTx
 ---------------------------------------------------------------------------------
 (3) _Mrf49RxSts                                           0     0      0      31
                         _Mrf49SpiRx
 ---------------------------------------------------------------------------------
 (3) _Mrf49RxByte                                          0     0      0     252
                         _Mrf49RxCmd
 ---------------------------------------------------------------------------------
 (4) _Mrf49RxCmd                                           2     2      0     252
                                              1 BANK0      2     2      0
                         _Mrf49SpiRx
                         _Mrf49SpiTx
 ---------------------------------------------------------------------------------
 (5) _Mrf49SpiTx                                           1     1      0     176
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Mrf49SpiRx                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ExtIntInit                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AdcInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _extInt                                               1     1      0    2256
                                              6 COMMON     1     1      0
                      i1_Mrf49xaTick
 ---------------------------------------------------------------------------------
 (7) i1_Mrf49xaTick                                        2     2      0    2256
                                              4 COMMON     2     2      0
                      i1_Mrf49RxByte
                       i1_Mrf49RxSts
                    i1_Mrf49xaModeRx
 ---------------------------------------------------------------------------------
 (8) i1_Mrf49xaModeRx                                      1     1      0    1188
                                              3 COMMON     1     1      0
                       i1_Mrf49TxCmd
 ---------------------------------------------------------------------------------
 (9) i1_Mrf49TxCmd                                         2     1      1     819
                                              1 COMMON     2     1      1
                       i1_Mrf49SpiTx
 ---------------------------------------------------------------------------------
 (8) i1_Mrf49RxSts                                         0     0      0      91
                       i1_Mrf49SpiRx
 ---------------------------------------------------------------------------------
 (8) i1_Mrf49RxByte                                        0     0      0     823
                       i1_Mrf49RxCmd
 ---------------------------------------------------------------------------------
 (9) i1_Mrf49RxCmd                                         2     2      0     823
                                              1 COMMON     2     2      0
                       i1_Mrf49SpiRx
                       i1_Mrf49SpiTx
 ---------------------------------------------------------------------------------
 (10) i1_Mrf49SpiTx                                        1     1      0     584
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) i1_Mrf49SpiRx                                         1     1      0      91
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AdcInit
   _ExtIntInit
   _Mrf49xaInit
     _Mrf49TxCmd
       _Mrf49SpiTx
     _Mrf49xaModeRx
       _Mrf49TxCmd
         _Mrf49SpiTx
     _Mrf49xaTick
       _Mrf49RxByte
         _Mrf49RxCmd
           _Mrf49SpiRx
           _Mrf49SpiTx
       _Mrf49RxSts
         _Mrf49SpiRx
       _Mrf49xaModeRx
         _Mrf49TxCmd
           _Mrf49SpiTx
   _SysInitGpio

 _extInt (ROOT)
   i1_Mrf49xaTick
     i1_Mrf49RxByte
       i1_Mrf49RxCmd
         i1_Mrf49SpiRx
         i1_Mrf49SpiTx
     i1_Mrf49RxSts
       i1_Mrf49SpiRx
     i1_Mrf49xaModeRx
       i1_Mrf49TxCmd
         i1_Mrf49SpiTx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       7       2       50.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      59       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      B       D       6       16.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      45       8       86.2%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      59      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Wed Apr 16 15:41:42 2014

                        pc 0002                        l240 016E                        l251 018A  
                      l243 0176                        l235 0162                        l219 0082  
                      l260 01A0                        l252 018C                        l244 0178  
                      l236 0164                        l263 01A8                        l255 0194  
                      l247 0180                        l239 016C                        l351 003A  
                      l264 01AA                        l256 0196                        l248 0182  
                      l177 00B1                        l353 004B                        l178 00C9  
                      l259 019E                        wreg 0009           i1Mrf49xaModeRx@k 0073  
                     S1895 0384                       l1431 00BE                       l1513 0144  
                     l1435 00CD                       l1427 00B5                       l1531 0078  
                     l1517 014D                       l1509 0130                       l1445 00D8  
                     l1471 010C                       l1553 008F                       l1459 00F1  
                     l1483 0117                       l1563 00A6                       l1555 009B  
                     l1539 0081                       l1485 0120                       l1653 0032  
                     l1559 00A4                       l1657 0038                       _main 0022  
          __end_of_AdcInit 005B                       fsr0h 0005                       fsr1h 0007  
                     fsr0l 0004                       indf0 0000                       indf1 0001  
                     fsr1l 0006                       btemp 007E                       ltemp 007E  
                     start 0014                       ttemp 007E                       wtemp 007E  
  __end_ofi1_Mrf49xaModeRx 02B7        __end_of_Mrf49RxByte 0127          i1Mrf49xaTick@data 0075  
      __end_of_Mrf49xaInit 00AC        __end_of_Mrf49xaTick 0125                      ?_main 0070  
                    i1l131 0011                      i1l240 0312                      i1l251 032C  
                    i1l243 031A                      i1l235 0308                      i1l260 033F  
                    i1l252 032D                      i1l244 031B                      i1l236 0309  
                    i1l263 0347                      i1l255 0335                      i1l247 0323  
                    i1l239 0311                      i1l264 0348                      i1l256 0336  
                    i1l248 0324                      i1l177 021B                      i1l178 0233  
                    i1l259 033E                 _Mrf49RxCmd 0060                 _Mrf49TxCmd 0150  
               _Mrf49SpiRx 01B8                 _Mrf49SpiTx 015C                 _Mrf49RxSts 01AE  
                    main@i 002A                      main@j 0029                      ltemp0 007E  
                    ltemp1 0082                      ltemp2 0086                      ltemp3 0080  
                    ttemp0 007E                      ttemp1 0081                      ttemp2 0084  
                    ttemp3 0087                      ttemp4 007F                      wtemp0 007E  
                    wtemp1 0080                      wtemp2 0082                      wtemp3 0084  
                    wtemp4 0086                      wtemp5 0088                      wtemp6 007F  
          __initialization 0016                 _ExtIntInit 005B               __end_of_main 004C  
                   ??_main 0077                     _ADCON0 009D                     _ADCON1 009E  
                   _ADCON2 009F                  ??_AdcInit 0077                     i1S1897 038C  
                   _ANSELA 018C                     _ANSELB 018D                     _ANSELC 018E  
                   i1l1703 0345                     i1l1801 0243                     i1l1815 025A  
                   i1l1761 0298                     i1l1841 0288                     i1l1691 032A  
                   i1l1683 0318                     i1l1675 0306                     i1l1827 0274  
                   i1l1765 02AC                     i1l1695 0333                     i1l1687 0321  
                   i1l1679 030F                     i1l1791 0237                     i1l1839 027F  
                   i1l1783 021F                     i1l1769 02B4                     i1l1699 033C  
                   i1l1787 0228                     _FVRCON 0117                     _OSCCON 0099  
              _Mrf49RxByte 0125           ?i1_Mrf49xaModeRx 0070                _Mrf49xaInit 006F  
              _Mrf49xaTick 00AC                     _extInt 0004                ?_Mrf49RxCmd 0070  
              ?_Mrf49TxCmd 0021                ?_Mrf49SpiRx 0070                ?_Mrf49SpiTx 0070  
              ?_Mrf49RxSts 0070    __end_of__initialization 0020      __end_ofi1_Mrf49RxByte 0290  
    __end_ofi1_Mrf49xaTick 028D                ?_ExtIntInit 0070             __pcstackCOMMON 0070  
           _OPTION_REGbits 0095              ??_SysInitGpio 0077                 __pbssBANK0 002B  
               __pbssBANK1 00A0      __end_of_Mrf49xaModeRx 0150        __size_of_Mrf49RxCmd 000F  
      __size_of_Mrf49TxCmd 000C        __size_of_Mrf49SpiRx 0037        __size_of_Mrf49SpiTx 0052  
      __size_of_Mrf49RxSts 000A                 __pmaintext 0022                 __pintentry 0004  
                  ?_extInt 0070                    _AdcInit 004C        __size_of_ExtIntInit 0005  
               __stringtab 034C              ?i1_Mrf49RxCmd 0070              ?i1_Mrf49TxCmd 0071  
            ?i1_Mrf49SpiRx 0070              ?i1_Mrf49SpiTx 0070              ?i1_Mrf49RxSts 0070  
      __end_of_SysInitGpio 020C            __size_of_extInt 0010          _mrfRegset_InitCnt 034D  
                  __ptext1 01EF                    __ptext2 006F                    __ptext3 00AC  
                  __ptext4 0127                    __ptext5 0150                    __ptext6 01AE  
                  __ptext7 0125                    __ptext8 0060                    __ptext9 015C  
                  clrloop0 0395       end_of_initialization 0020               ?_Mrf49RxByte 0070  
           ??i1_Mrf49RxCmd 0071             ??i1_Mrf49TxCmd 0072             ??i1_Mrf49SpiRx 0070  
           ??i1_Mrf49SpiTx 0070             ??i1_Mrf49RxSts 0071               ?_Mrf49xaInit 0070  
     __end_of_mrfRegset_Rx 037C       __end_of_mrfRegset_Tx 0384               ?_Mrf49xaTick 0070  
__end_of_mrfRegset_InitCnt 034E            Mrf49xaTick@data 0025                  _PORTAbits 000C  
                _PORTCbits 000E               ??_Mrf49RxCmd 0077               ??_Mrf49TxCmd 0077  
             ??_Mrf49SpiRx 0077               ??_Mrf49SpiTx 0077               ??_Mrf49RxSts 0077  
                _TRISAbits 008C                  _TRISBbits 008D                  _TRISCbits 008E  
              _SysInitGpio 01EF             Mrf49SpiRx@data 0020             Mrf49SpiTx@byte 0020  
       __end_of_Mrf49RxCmd 006F         __end_of_Mrf49TxCmd 015C               ??_ExtIntInit 0077  
       __end_of_Mrf49SpiRx 01EF         __end_of_Mrf49SpiTx 01AE         __end_of_Mrf49RxSts 01B8  
 __size_ofi1_Mrf49xaModeRx 0027             __end_of_extInt 0014        start_initialization 0016  
       __end_of_ExtIntInit 0060            _mrfRegset_RxCnt 034E            _mrfRegset_TxCnt 034F  
                 ??_extInt 0076     __size_ofi1_Mrf49RxByte 0003       __end_ofi1_Mrf49RxCmd 0216  
     __end_ofi1_Mrf49TxCmd 0301       __end_ofi1_Mrf49SpiRx 02F8       __end_ofi1_Mrf49SpiTx 034C  
     __end_ofi1_Mrf49RxSts 02C3                  ___latbits 0001              __pcstackBANK0 0020  
   __size_ofi1_Mrf49xaTick 0077                   ?_AdcInit 0070               _rfTrcvStatus 00A0  
     __size_of_Mrf49RxByte 0002       __size_of_Mrf49xaInit 003D       __size_of_Mrf49xaTick 0079  
                __pstrings 034C                  __pswtext1 0384                  __pswtext2 038C  
   __size_of_Mrf49xaModeRx 0029               _mrfRegset_Rx 0370               _mrfRegset_Tx 037C  
        ??i1_Mrf49xaModeRx 0073                   _LATAbits 010C                   _LATBbits 010D  
                 _LATCbits 010E              i1_Mrf49RxByte 028D    __end_of_mrfRegset_RxCnt 034F  
  __end_of_mrfRegset_TxCnt 0350                  clear_ram0 0394                _mrf49Status 002B  
           Mrf49xaModeRx@k 0023              i1_Mrf49xaTick 0216              Mrf49RxCmd@cmd 0021  
            Mrf49RxCmd@val 0022              Mrf49TxCmd@cmd 0022              Mrf49TxCmd@val 0021  
                 _WPUAbits 020C           __size_of_AdcInit 000F               ?_SysInitGpio 0070  
           ?i1_Mrf49RxByte 0070              _Mrf49xaModeRx 0127             ?i1_Mrf49xaTick 0070  
           _mrfRegset_Init 0350      __size_ofi1_Mrf49RxCmd 000A      __size_ofi1_Mrf49TxCmd 0009  
    __size_ofi1_Mrf49SpiRx 0035      __size_ofi1_Mrf49SpiTx 004B           i1Mrf49SpiRx@data 0070  
    __size_ofi1_Mrf49RxSts 000C           i1Mrf49SpiTx@byte 0070         __end_of__stringtab 034D  
                 __ptext10 01B8                   __ptext11 005B                   __ptext20 0301  
                 __ptext12 004C                   __ptext21 02C3                   __ptext14 0216  
                 __ptext15 0290                   __ptext16 02F8                   __ptext17 02B7  
                 __ptext18 028D                   __ptext19 020C              __size_of_main 002A  
             i1_Mrf49RxCmd 020C     __end_of_mrfRegset_Init 0370               i1_Mrf49TxCmd 02F8  
             i1_Mrf49SpiRx 02C3               i1_Mrf49SpiTx 0301             ?_Mrf49xaModeRx 0070  
             i1_Mrf49RxSts 02B7            i1Mrf49RxCmd@cmd 0071            i1Mrf49RxCmd@val 0072  
               _INTCONbits 000B            i1Mrf49TxCmd@cmd 0072            i1Mrf49TxCmd@val 0071  
          ??i1_Mrf49RxByte 0073                   intlevel1 0000            ??i1_Mrf49xaTick 0074  
             Mrf49xaInit@i 0026               Mrf49xaInit@j 0027               Mrf49xaInit@k 0028  
          i1_Mrf49xaModeRx 0290              ??_Mrf49RxByte 0077            ??_Mrf49xaModeRx 0077  
     __size_of_SysInitGpio 001D              ??_Mrf49xaInit 0077              ??_Mrf49xaTick 0024  
